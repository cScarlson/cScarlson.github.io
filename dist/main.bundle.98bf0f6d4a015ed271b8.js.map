{"version":3,"sources":["webpack:///./src/@motorman/vertices/core/decorators.ts","webpack:///./src/@motorman/core/utilities/utilities.ts","webpack:///./src/@motorman/core/utilities/patterns/other/deferred.ts","webpack:///./src/@motorman/core/utilities/index.ts","webpack:///./src/@motorman/core/utilities/patterns/behavioral/chainOfRespnsibility.ts","webpack:///./src/@motorman/core/utilities/patterns/behavioral/command.ts","webpack:///./src/@motorman/core/utilities/patterns/behavioral/mediator/eventhub.ts","webpack:///./src/@motorman/core/utilities/patterns/behavioral/index.ts","webpack:///./src/@motorman/vertices/core/defaults.js","webpack:///./src/@motorman/vertices/core/core.ts","webpack:///./src/@motorman/vertices/core/api.js","webpack:///./src/@motorman/vertices/core/element-engine.ts","webpack:///./src/@motorman/vertices/index.ts","webpack:///./src/@motorman/core/utilities/patterns/behavioral/observer.ts","webpack:///./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js","webpack:///./node_modules/css-loader/dist/runtime/api.js","webpack:///./src/@motorman/vertices/sdk/components/modal/modal.component.ts","webpack:///./src/@motorman/vertices/sdk/components/modal/modal.component.html","webpack:///./src/main.scss?4e53","webpack:///./src/main.scss","webpack:///./src/environments/environment.prod.ts","webpack:///./src/@motorman/models/environment.model.ts","webpack:///./src/@motorman/vertices/director/channels.ts","webpack:///./node_modules/tslib/tslib.es6.js","webpack:///./node_modules/rxjs/_esm5/internal/util/isFunction.js","webpack:///./node_modules/rxjs/_esm5/internal/config.js","webpack:///./node_modules/rxjs/_esm5/internal/util/hostReportError.js","webpack:///./node_modules/rxjs/_esm5/internal/Observer.js","webpack:///./node_modules/rxjs/_esm5/internal/util/isArray.js","webpack:///./node_modules/rxjs/_esm5/internal/util/UnsubscriptionError.js","webpack:///./node_modules/rxjs/_esm5/internal/Subscription.js","webpack:///./node_modules/rxjs/_esm5/internal/util/isObject.js","webpack:///./node_modules/rxjs/_esm5/internal/symbol/rxSubscriber.js","webpack:///./node_modules/rxjs/_esm5/internal/Subscriber.js","webpack:///./node_modules/rxjs/_esm5/internal/symbol/observable.js","webpack:///./node_modules/rxjs/_esm5/internal/util/noop.js","webpack:///./node_modules/rxjs/_esm5/internal/util/pipe.js","webpack:///./node_modules/rxjs/_esm5/internal/Observable.js","webpack:///./node_modules/rxjs/_esm5/internal/util/toSubscriber.js","webpack:///./node_modules/rxjs/_esm5/internal/util/canReportError.js","webpack:///./node_modules/rxjs/_esm5/internal/util/ObjectUnsubscribedError.js","webpack:///./node_modules/rxjs/_esm5/internal/SubjectSubscription.js","webpack:///./node_modules/rxjs/_esm5/internal/Subject.js","webpack:///./node_modules/rxjs/_esm5/internal/scheduler/QueueAction.js","webpack:///./node_modules/rxjs/_esm5/internal/scheduler/AsyncAction.js","webpack:///./node_modules/rxjs/_esm5/internal/scheduler/Action.js","webpack:///./node_modules/rxjs/_esm5/internal/Scheduler.js","webpack:///./node_modules/rxjs/_esm5/internal/scheduler/queue.js","webpack:///./node_modules/rxjs/_esm5/internal/scheduler/QueueScheduler.js","webpack:///./node_modules/rxjs/_esm5/internal/scheduler/AsyncScheduler.js","webpack:///./node_modules/rxjs/_esm5/internal/observable/empty.js","webpack:///./node_modules/rxjs/_esm5/internal/util/isScheduler.js","webpack:///./node_modules/rxjs/_esm5/internal/util/subscribeToArray.js","webpack:///./node_modules/rxjs/_esm5/internal/Notification.js","webpack:///./node_modules/rxjs/_esm5/internal/scheduled/scheduleArray.js","webpack:///./node_modules/rxjs/_esm5/internal/observable/fromArray.js","webpack:///./node_modules/rxjs/_esm5/internal/observable/throwError.js","webpack:///./node_modules/rxjs/_esm5/internal/observable/of.js","webpack:///./node_modules/rxjs/_esm5/internal/operators/observeOn.js","webpack:///./node_modules/rxjs/_esm5/internal/ReplaySubject.js","webpack:///./node_modules/rxjs/_esm5/internal/operators/filter.js","webpack:///./node_modules/rxjs/_esm5/internal/operators/map.js","webpack:///./src/@motorman/core/store/store.rxjs.ts","webpack:///./src/@motorman/core/mediator/mediator.rxjs.ts","webpack:///./src/@motorman/core/eventhub/eventhub.rxjs.ts","webpack:///./src/@motorman/core/director/director.rxjs.ts","webpack:///./src/@motorman/vertices/director/director.ts","webpack:///./src/app/core/director/director.ts","webpack:///./src/app/core/director/channels.ts","webpack:///./src/app/core/director/handlers/action.ts","webpack:///./src/@motorman/vertices/director/handlers/action.ts","webpack:///./src/app/core/director/handlers/state.ts","webpack:///./src/app/core/sandbox.ts","webpack:///./src/app/core/utilities.ts","webpack:///./src/app/core/constants.ts","webpack:///./src/app/core/bootstrap.ts","webpack:///./src/app/app.ts","webpack:///./src/main.ts"],"names":["Metadata","klass","$members","Map","$observedAttributes","$watchers","$elements","$attrs","$listeners","$subscriptions","metadata","this","DEFAULT_DESCRIPTOR","writable","configurable","enumerable","Element","definition","options","data","type","members","Class","meta","Attribute","Pipe","Service","selector","id","name","decorators","object","ns","keys","split","length","shift","Function","namespace","key","value","set","get","observe","attr","thus","target","descriptor","constructor","action","true","false","process","arguments","hasGet","hasSet","hasGetOrSet","hasGetAndSet","decorator","alias","handler","isHost","matches","RegExp","exec","match","tagName","observee","observer","element","listener","message","CSV","collection","fields","delimiter","$table","$values","$lines","matrix","lines","span","Object","reduce","o","x","i","width","j","height","y","row","rows","col","columns","_id","field","record","column","line","Math","max","apply","join","tabs","Array","map","concat","replace","csv","slice","array","datum","bind","push","Utilities","console","first","more","k","extend","null","undefined","0","splat","window","setTimeout","timeout","delay","params","log","call","clearTimeout","fn","timer","context","threshhold","scope","deferTimer","now","Date","last","invoke","c","r","random","toString","s","path","drill","str","a","b","val","escapeHTML","re","matcher","string","result","values","len","url","document","createElement","href","hash","host","hostname","origin","pathname","port","protocol","search","methods","prototype","sortByKey","size","unit","$","toFixed","$bytes","$KB","$MB","$GB","$TB","$PB","bytes","KB","MB","GB","TB","PB","auto","Infinity","datasets","n","Number","round","Deferred","_resolve","_reject","promise","Promise","exe","resolve","reject","Handler","e","detail","ChainOfResponsibility","config","responders","super","cancelable","bubbles","cancelBubble","defaultPrevented","handlers","propagate","event","CustomEvent","next","stopPropagation","execute","respond","stopImmediatePropagation","StrictCommand","EventTarget","DefaultNodeSandbox","DEFAULT_CONFIG","director","services","utils","components","Vertex","Vertices","Core","Facade","V","register","dConfiguration","pConfiguration","dInitialization","pInitialization","$instances","$nodes","modules","configuration","then","bootstrap","environment","registerModule","_selector","Sandbox","_Sandbox","startServices","service","registry","startService","metadatum","ComponentSandbox","core","configure","init","component","command","composeCommand","item","composeExecutor","Subject","observers","notify","observation","update","splice","state","memo","isOldIE","Boolean","all","atob","getTarget","styleTarget","querySelector","HTMLIFrameElement","contentDocument","head","stylesInDom","modulesToDom","moduleId","list","part","css","media","sourceMap","addStyle","insertStyleElement","style","attributes","nonce","forEach","setAttribute","insert","Error","appendChild","textStore","replaceText","index","replacement","filter","applyToSingletonTag","remove","obj","styleSheet","cssText","cssNode","createTextNode","childNodes","removeChild","insertBefore","applyToTag","removeAttribute","btoa","unescape","encodeURIComponent","JSON","stringify","firstChild","singleton","singletonCounter","styleIndex","parentNode","removeStyleElement","newObj","module","exports","base","newList","useSourceMap","content","cssMapping","sourceMapping","base64","sourceURLs","sources","source","sourceRoot","cssWithMappingToString","mediaQuery","active","publish","api","__esModule","default","exported","locals","___CSS_LOADER_API_IMPORT___","extendStatics","d","setPrototypeOf","__proto__","p","hasOwnProperty","__extends","__","create","isFunction","_enable_super_gross_mode_that_will_cause_bad_things","stack","hostReportError","err","empty","closed","error","useDeprecatedSynchronousErrorHandling","complete","isArray","UnsubscriptionError","UnsubscriptionErrorImpl","errors","Subscription","unsubscribe","_parentOrParents","_subscriptions","_unsubscribe","flattenUnsubscriptionErrors","sub","add","teardown","subscription","EMPTY","tmp","indexOf","subscriptions","subscriptionIndex","errs","rxSubscriber","Symbol","_super","Subscriber","destinationOrNext","_this","syncErrorValue","syncErrorThrown","syncErrorThrowable","isStopped","destination","subscriber","_next","_error","_complete","_unsubscribeAndRecycle","SafeSubscriber","_parentSubscriber","observerOrNext","_context","__tryOrSetError","__tryOrUnsub","wrappedComplete","parent","observable","noop","pipeFromArray","fns","input","prev","Observable","subscribe","_isScalar","_subscribe","lift","operator","sink","nextOrObserver","toSubscriber","_trySubscribe","_a","closed_1","canReportError","warn","promiseCtor","getPromiseCtor","pipe","operations","_i","toPromise","ObjectUnsubscribedError","ObjectUnsubscribedErrorImpl","SubjectSubscription","subject","subscriberIndex","SubjectSubscriber","hasError","thrownError","copy","asObservable","AnonymousSubject","QueueAction","scheduler","work","schedule","flush","_execute","requestAsyncId","AsyncAction","pending","recycleAsyncId","setInterval","clearInterval","errored","errorValue","actions","Action","Scheduler","SchedulerAction","queue","QueueScheduler","AsyncScheduler","delegate","scheduled","emptyScheduled","isScheduler","NotificationKind","scheduleArray","fromArray","dispatch","Notification","kind","hasValue","do","accept","toObservable","args","pop","of","createNext","undefinedValueNotification","createError","createComplete","completeNotification","ObserveOnSubscriber","arg","notification","scheduleMessage","ObserveOnMessage","ReplaySubject","bufferSize","windowTime","POSITIVE_INFINITY","_events","_infiniteTimeWindow","_bufferSize","_windowTime","nextInfiniteTimeWindow","nextTimeWindow","ReplayEvent","_getNow","_trimBufferThenGetEvents","eventsCount","spliceCount","time","FilterOperator","predicate","thisArg","FilterSubscriber","count","MapOperator","project","MapSubscriber","initializations","initialized","channels$","channel","filterChannel","mapData","TypeError","in","publishers","$data","paths","has","attach","entries","from","handleState","stateHandlers","channels","ActionHandlers","StateHandlers","Dependencies","dependencies","actionHandlers","request","emit","settings","sandbox","template","repository","DocumentFragment","digestion","innerHTML","MutationManager","MutationObserver","node","precepts","instance","changes","mutation","attributeName","getAttributeNode","isIO","isSameNode","io","dispatchEvent","childList","subtree","disconnect","EventManager","$events","handleAll","any","handleAny","property","full","method","getEventTypes","events","addEventListener","proxy","nodeType","checkAttrNode","firstElementChild","nextElementSibling","attribute","test","proxyEventTargetSource","removeEventListener","details","ElementSandboxState","delegations","mutations","connect","child","AttributeSandboxState","TextSandboxState","CommentSandboxState","PipeSandboxState","ServiceSandboxState","MicroserviceSandboxState","IoTSandboxState","SandboxContext","Node","ELEMENT_NODE","ATTRIBUTE_NODE","TEXT_NODE","COMMENT_NODE","CONSTANTS","SELECTOR","app","env","dEnvironment","pEnvironment","pipeNodeHandler","nodeProcessors","processElementNode","processTextNode","processCommentNode","bootstrapServices","parseNode","$services","bootstrapService","occupants","occupee","$occupants","cor","isConnected","previousSibling","previous","nextSibling","lastChild","slot","addOccupant","processMetadata","processAttributeNode","$attributes","owner","getOwnerInstance","ownerElement","parentElement","TestService","TemplateRepeatDirective","alert"],"mappings":"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","file":"main.bundle.98bf0f6d4a015ed271b8.js","sourcesContent":["\r\n/*\r\n\r\nDecorators\r\n\r\nClass decorators should always contain a \"meta\" property (on their descriptor, Class, or [root] Prototype) with a \"members\" object.\r\nMember decorators always assign metadata to a \"meta\" object on their Class under members[key] providing data for their purpose.\r\nDecorators should have the capability to be leveraged compositively with each other, adding \"meta\" data to the descriptor.\r\n\r\n@observee('prop') x: any;  // prepares metadata for observableAttributes (of \"prop\" with alias \"x\")\r\n@observer('prop') handleChange(...?) {}  // prepares metadata for handler called from attributedChangedCallback\r\n@element('tagName.class[attr]') element: HTMLElement;  // prepares metadata to select & bind an element to component['element'] (if not arguments.length then return HostElement or FirstChild or querySelector('*') or descriptor.name)\r\n@attr('tagName.class[attr]') attr: Attr;  // prepares metadata to select & bind an element's attribute-node to component['attr'] (if not \"[attr]\" then return descriptor.name)\r\n@listener('click') handleClick() {}  // prepares metadata to handle \"click\" on HostElement\r\n----\r\n@listener('click') @element('tagName.class[attr]') handleClick({ target }) {}  // prepares metadata to handle \"click\" on metadata.selector of type \"element\"\r\n@listener('change') @attr('tagName.class[attr]') handleChange({ ownerElement }) {}  // prepares metadata to handle \"change\" on metadata.selector of type \"attr\"\r\n\r\n*/\r\n\r\n\r\ntype ObserveeMetadata = {\r\n    decorator: 'attribute:observee',\r\n    name: string,\r\n    alias: string,\r\n    hasGet: boolean,\r\n    hasSet: boolean,\r\n    hasGetOrSet: boolean,\r\n    hasGetAndSet: boolean,\r\n};\r\ntype ObserverMetadata = {\r\n    decorator: 'attribute:observer',\r\n    name: string,\r\n    attr: string,\r\n    handler: (...splat: any[]) => any,\r\n};\r\ninterface ElementRefMetadata {\r\n    decorator: 'reference:element';\r\n    name: string;\r\n    key: string;\r\n    selector: string;\r\n    isHost: boolean;\r\n};\r\ninterface AttrRefMetadata {\r\n    decorator: 'reference:attribute';\r\n    name: string;\r\n    key: string;\r\n    selector: string;\r\n    isHost: boolean;\r\n};\r\ntype ListenerMetadata = {\r\n    decorator: 'handler:dom',\r\n    name: string,\r\n    key: string,\r\n    type: string,\r\n    handler: (...splat: any[]) => any,\r\n    isHost: boolean;\r\n};\r\ntype CommMetadata = {\r\n    decorator: 'handler:comm',\r\n    name: string,\r\n    key: string,\r\n    type: string,\r\n    handler: (...splat: any[]) => any,\r\n};\r\n\r\nclass Metadata {  // TODO: create types for maps\r\n    public $members: Map<string, any> = new Map();\r\n    public $observedAttributes: Map<string, any> = new Map();\r\n    public $watchers: Map<string, any> = new Map();\r\n    public $elements: Map<string, any> = new Map();\r\n    public $attrs: Map<string, any> = new Map();\r\n    public $listeners: Map<string, any> = new Map();\r\n    public $subscriptions: Map<string, any> = new Map();\r\n    \r\n    constructor(protected klass: any) {\r\n        var { metadata } = klass;  // might already exist\r\n        var { $members, $observedAttributes, $watchers, $elements, $attrs, $listeners, $subscriptions } = (metadata || {});\r\n        \r\n        this.$members = $members || this.$members;  // prefer existing if available\r\n        this.$observedAttributes = $observedAttributes || this.$observedAttributes;  // prefer existing if available\r\n        this.$watchers = $watchers || this.$watchers;  // prefer existing if available\r\n        this.$elements = $elements || this.$elements;  // prefer existing if available\r\n        this.$attrs = $attrs || this.$attrs;  // prefer existing if available\r\n        this.$listeners = $listeners || this.$listeners;  // prefer existing if available\r\n        this.$subscriptions = $subscriptions || this.$subscriptions;  // prefer existing if available\r\n        \r\n        klass.metadata = this;  // ensure has structure of this while this.${{x}} originates from first issuance and subsequently klass\r\n        return this;  // `this` maintains references to those members from klass.metadata\r\n    }\r\n    \r\n}\r\n\r\n\r\nvar DEFAULT_DESCRIPTOR = { writable: true, configurable: true, enumerable: true };\r\n\r\n\r\nclass DecoratorUtilities {  // DEP\r\n    namespace(object: any, ns: string, keys: string[] = ns.split('.')): boolean {\r\n        while (keys.length) if (!object[ keys[0] ]) object[ keys.shift() ] = { };\r\n        return !!(new Function(`return constructor.${ns};`))();\r\n    }\r\n    ensure(object, namespace, key, value) {\r\n        var exists = this.namespace(object, namespace);\r\n        var set = new Function('value', `object.${namespace} = value;`);\r\n        // var set = new Function('value', `object.${namespace}.${key} = value;`);\r\n        var get = new Function(`return object.${namespace};`);\r\n        \r\n        set(value);\r\n        return get();\r\n    }\r\n    meta(object, key, meta) {\r\n        this.namespace(object, 'meta.members');\r\n        object.meta.members[key] = meta;\r\n    }\r\n}\r\n\r\n\r\nfunction Element(definition: { selector: string, template?: string }, options?: any): any {\r\n    var data = {type: 'element', ...definition, options, members: {} };\r\n    \r\n    return function get(Class: any): any {\r\n        Class.meta = data;\r\n        return { ...data, Class };\r\n    };\r\n}\r\nfunction Attribute(definition: { selector: string }): any {\r\n    var data = { type: 'attribute', ...definition };\r\n    \r\n    return function get(Class: any): any {\r\n        return { ...data, Class };\r\n    };\r\n}\r\nfunction Text(definition: { selector: string }): any {  // selector := Text.nodeValue || Text.charaterData\r\n    /*\r\n    if reInterpolate.test(node.[nodeValue,wholeText,textContent,data]) > node.nodeValue = interpolate(nodeValue)(parent/owner)\r\n    */\r\n    var data = { type: 'attribute', ...definition };\r\n    \r\n    return function get(Class: any): any {\r\n        return { ...data, Class };\r\n    };\r\n}\r\nfunction Comment(definition: { selector: string }): any {  // selector := Comment.data || Comment.charaterData\r\n    /*\r\n    comments may be used to drive performance\r\n    syntax can be used to drive directive(s) / operation(s): <!-- <psst! [next.parent]=\"v-modal\" /> -->, etc\r\n    if owner > core.$selectors.linkedList.get(<string>owner, this.nextElementSibling)\r\n    */\r\n    var data = { type: 'attribute', ...definition };\r\n    \r\n    return function get(Class: any): any {\r\n        return { ...data, Class };\r\n    };\r\n}\r\nfunction Pipe() {}\r\nfunction Service(definition: { id?: string }): any {  // selector := Comment.data || Comment.charaterData\r\n    var data = { type: 'service', ...definition };\r\n    \r\n    return function get(Class: any): any {\r\n        var selector = definition.id || Class.name;\r\n        return { ...data, selector, Class };\r\n    };\r\n}\r\nfunction IoT() {}\r\nfunction MicroService() {}\r\n\r\nvar decorators = new (class Decorators extends DecoratorUtilities {\r\n    \r\n    /**\r\n     * @intention Provide a convenience method for mapping to correct behavior depending on input type to keep other methods clean.\r\n     *      * If member is datum : this.observee\r\n     *      * If member is method: this.observer\r\n     *      * Note: data-members are not created until class instance construction (value === undefined)\r\n     */\r\n    observe = (attr?: string): any => {\r\n        var thus = this;\r\n        \r\n        return function get(target: any, key: string, descriptor: any = {}): any {\r\n            var { constructor } = target;\r\n            var { value } = descriptor;\r\n            var metadata = new Metadata(constructor);\r\n            var descriptor = { ...descriptor, ...DEFAULT_DESCRIPTOR };\r\n            var action = { true: 'observer', false: 'observee' }[ <any>!!value ];  // this.observee || this.observer\r\n            var process = thus[action](attr);\r\n            var data = process(...arguments);\r\n            \r\n            metadata.$members.set(key, data);\r\n            return descriptor;\r\n        };\r\n    };\r\n    observee(attr?: string): any {  // @usage: @observe('options') options: any;\r\n        var thus = this;\r\n        \r\n        return function get(target: any, key: string, descriptor: any = {}): any {\r\n            var { constructor } = target;\r\n            var { get, set } = descriptor, hasGet = !!get, hasSet = !!set, hasGetOrSet = (hasGet || hasSet), hasGetAndSet = (hasGet && hasSet);\r\n            var metadata = new Metadata(constructor);\r\n            var name = (attr || key), alias = key;  // name === alias if !attr\r\n            var data = { decorator: 'attribute:observee', name, alias, hasGet, hasSet, hasGetOrSet, hasGetAndSet };\r\n            \r\n            if (!hasGetOrSet) descriptor.writable = true;  // do not declare WHATSOEVER unless !hasGetOrSet\r\n            metadata.$members.set(key, data);\r\n            metadata.$observedAttributes.set(key, data);\r\n            \r\n            return data;\r\n        };\r\n    };\r\n    observer(attr: string): any {  // @usage: @observe('options') handleOptionsChange(val, old) {}\r\n        var thus = this;\r\n        \r\n        return function get(target: any, key: string, descriptor: any = {}): any {\r\n            var { constructor } = target;\r\n            var descriptor = { ...descriptor, ...DEFAULT_DESCRIPTOR };\r\n            var { value: handler } = descriptor;\r\n            var metadata = new Metadata(constructor);\r\n            var name = key;\r\n            var data = { decorator: 'attribute:observer', name, attr, handler };\r\n            \r\n            metadata.$members.set(key, data);\r\n            metadata.$watchers.set(attr, data);\r\n            \r\n            return data;\r\n        };\r\n    };\r\n    \r\n    element(selector: string): any {\r\n        var thus = this;\r\n        var isHost = (selector === 'this');\r\n        \r\n        return function get(target: any, key: string, descriptor: any = {}): any {\r\n            var { constructor } = target;\r\n            var descriptor = { ...descriptor, ...DEFAULT_DESCRIPTOR };\r\n            var metadata = new Metadata(constructor);\r\n            var name = key;\r\n            var data = { decorator: 'reference:element', name, key, selector, isHost };\r\n            \r\n            metadata.$members.set(key, data);\r\n            metadata.$elements.set(key, data);\r\n            \r\n            return descriptor;\r\n        };\r\n    };\r\n    \r\n    attr(selector: string): any {\r\n        var thus = this;\r\n        var re = new RegExp(/^(.*)\\[(.+)\\]$/);\r\n        var matches = re.exec(selector), [ match, tagName, attr ] = matches;\r\n        var isHost = (tagName === 'this');\r\n        \r\n        return function get(target: any, key: string, descriptor: any = {}): any {\r\n            var { constructor } = target;\r\n            var descriptor = { ...descriptor, ...DEFAULT_DESCRIPTOR };\r\n            var metadata = new Metadata(constructor);\r\n            var name = attr;\r\n            var data = { decorator: 'reference:attribute', name, key, selector, isHost };\r\n            \r\n            metadata.$members.set(key, data);\r\n            metadata.$attrs.set(key, data);\r\n            \r\n            return descriptor;\r\n        };\r\n    };\r\n    \r\n    listener(type: string) {\r\n        var thus = this;\r\n        var isHost = !type;\r\n        \r\n        return function get(target: any, key: string, descriptor: any = {}): any {\r\n            var { constructor } = target;\r\n            // var descriptor = { ...descriptor, ...DEFAULT_DESCRIPTOR };\r\n            var { value: handler } = descriptor;\r\n            var metadata = new Metadata(constructor);\r\n            var name = key;\r\n            var data = { decorator: 'handler:dom', name, key, type, handler, isHost };\r\n            \r\n            metadata.$members.set(key, data);\r\n            metadata.$listeners.set(key, data);\r\n            \r\n            return descriptor;\r\n        };\r\n    };\r\n    \r\n    message(type: string): any {  // TODO\r\n        var thus = this;\r\n        \r\n        return function get(target: any, key: string, descriptor: any = {}): any {\r\n            var { constructor } = target;\r\n            var descriptor = { ...descriptor, ...DEFAULT_DESCRIPTOR };\r\n            var { value: handler } = descriptor;\r\n            var metadata = new Metadata(constructor);\r\n            var name = key;\r\n            var data = { decorator: 'handler:comm', name, key, type, handler };\r\n            \r\n            metadata.$members.set(key, data);\r\n            metadata.$subscriptions.set(key, data);\r\n            \r\n            return descriptor;\r\n        };\r\n    };\r\n\r\n})();\r\n\r\n\r\nconst {\r\n    observe, observee, observer,\r\n    element, attr,\r\n    listener, message,\r\n} = decorators;\r\n\r\nexport { Element, Attribute, Pipe, Service };\r\nexport { observe, observee, observer };\r\nexport { element, attr };\r\nexport { listener, message };\r\n","\r\nvar CSV = new class CSV {\r\n    \r\n    // JSON.stringify(value[, replacer[, space]])\r\n    stringify(collection, fields, delimiter) {  // Word Art Cloud: wordToWeight() & weightToWord()\r\n        /**\r\n         * Given: map.get(fields[i]).push( collection[j][ fields[i] ] )\r\n         * Then: every column (fields[i]) contains an equal number of values as any other column.\r\n         * Because: map.get(fields[i])[0] === collection[j][ fields[i] ]\r\n         */\r\n        var $table = new Map();  // Map { 0 => { a, b, c, ... } }\r\n        var $values = new Map();  // Map { a => [ x, y, z, ... ] }\r\n        var $lines = new Map();  // Map { 0 => [ x, y, z, ... ] }\r\n        var matrix = [ ];  // [ [a,b,c,...], [a,b,c,...], ... ]\r\n        var lines = [ ];\r\n        var span = 0;\r\n        \r\n        if (!fields) fields = Object.keys( collection.reduce( (o, x) => ({ ...o, ...x }), { } ) );  // gets all available keys across all objects in collection\r\n        \r\n        for (let i = 0, width  = collection.length; i < width;  i++)\r\n        for (let j = 0, height = fields.length;     j < height; j++)\r\n\t\t(function create(value, [x, y], row, i, rows, col, j, columns) {\r\n            var _id = x, field = col;\r\n            var record = $table.get(_id) || { _id };\r\n            var column = $values.get(col) || [ ];\r\n            var line = $lines.get(x) || [ ];\r\n            \r\n            if ({ 'undefined': true }[ value ]) value = '';\r\n            matrix[x] = matrix[x] || [ ];\r\n            matrix[x][y] = record[field] = column[x] = line[y] = value;\r\n            \r\n            $table.set(_id, record);  // ensure gets set first time\r\n            $values.set(col, column);  // ensure gets set first time\r\n            $lines.set(x, line);  // ensure gets set first time\r\n            \r\n            span = Math.max.apply(null, [ span, col.length, `${value}`.length ]);\r\n            lines[x] = line.join(',');\r\n            \r\n        })(collection[i][ fields[j] ], [i, j], collection[i], i, collection, fields[j], j, fields);\r\n        \r\n        var tabs = Array.apply(null, { length: span });\r\n        var delimiter = {\r\n            '\\t': tabs.map( () => '\\t' ),\r\n            '\\s': tabs.map( () => '\\s' ),\r\n            'undefined': [ ],\r\n        }[ delimiter ].join('');\r\n        var columns = fields.join(',');\r\n        var csv = [ columns ].concat(lines).join('\\n');\r\n        var csv = csv.replace(/,/img, `,${delimiter}`);\r\n        \r\n        return csv;\r\n    }\r\n    \r\n    parse(csv) {\r\n        var lines = csv.split(/\\n+/img), [ fields ] = lines, fields = fields.split(/,\\t*/), rows = lines.slice(1);\r\n\t\tvar collection = rows.reduce( getObject.bind(this, fields), [ ] );\r\n        \r\n        function getObject(fields, array, line, row, lines) {\r\n            var o = fields.reduce( getValue.bind(this, line), { } );\r\n            array.push(o);\r\n            \r\n            function getValue(line, o, key, i, fields) {\r\n                var values = line.split(/,\\s*/), value = values[i], datum = { [key]: value };\r\n                return { ...o, ...datum };\r\n            }\r\n            \r\n            return array;\r\n        }\r\n        \r\n\t\treturn collection;\r\n    }\r\n    \r\n};\r\n\r\n/**\r\n * @ URLComponents\r\n */\r\nclass URLComponents {\r\n    hash: string = '';\r\n    host: string = '';\r\n    hostname: string = '';\r\n    href: string = '';\r\n    origin: string = '';\r\n    pathname: string = '';\r\n    port: string = '';\r\n    protocol: string = '';\r\n    search: string = '';\r\n    \r\n    constructor(url) {\r\n        var parser = document.createElement('a');\r\n        parser.href = url;\r\n\r\n        this.hash = parser.hash;\r\n        this.host = parser.host;\r\n        this.hostname = parser.hostname;\r\n        this.href = parser.href;\r\n        this.origin = parser.origin;\r\n        this.pathname = parser.pathname;\r\n        this.port = parser.port;\r\n        this.protocol = parser.protocol;\r\n        this.search = parser.search;\r\n\r\n        return this;\r\n    }\r\n    \r\n}\r\n\r\nclass ParameterMap {\r\n    name: string = '';\r\n    value: string = '';\r\n    \r\n    constructor(str) {\r\n        var pair = str.split('=');\r\n        this.name = pair[0];\r\n        this.value = pair[1];\r\n        return this;\r\n    }\r\n    \r\n}\r\n\r\nclass QueryMap {\r\n    \r\n    constructor(q) {\r\n        var query = decodeURIComponent(q);\r\n        var exp = /[^\\?|\\&]([^=]+)\\=([^&]+)/g;\r\n        var res = query.match(exp);\r\n\r\n        for (var i = 0, len = res.length; i < len; i++) {\r\n            var map = new ParameterMap(res[i]);\r\n            this[map.name] = map.value;\r\n        }\r\n\r\n        return this;\r\n    }\r\n    \r\n}\r\n\r\nclass Utilities {\r\n    CSV: any = CSV;\r\n    console: any = console;\r\n    \r\n    constructor() {\r\n        return this;\r\n    }\r\n      \r\n    noop() {}\r\n    \r\n    extend(object, first?, ...more) {\r\n        var o = Object.keys(first).reduce( (o, k) => (o[k] = first[k], o), object );\r\n        if (more.length) return this.extend(object, ...more);\r\n        return o;\r\n    }\r\n    \r\n    is(value) {\r\n        var isnt = { null: true, undefined: true, '': true, 0: false }[ value ];\r\n        return !isnt;\r\n    }\r\n    \r\n    timeout(handler, ...splat) {\r\n        var cancel = window.setTimeout(handler, ...splat);\r\n        return cancel;\r\n    }\r\n    \r\n    enqueue(handler, ...splat) {\r\n        var result = this.timeout(handler, 0, ...splat);\r\n        return result;\r\n    }\r\n    \r\n    /**\r\n     * \r\n     * @intention\r\n     *  * Leverage global.setTimeout for intervals instead of global.setInterval.\r\n     * @patterns { Curry }\r\n     * @usage \r\n     *  * var clear = utils.interval( () => console.log('called!'), 1000 );\r\n     *  * setTimeout(clear, (1000 * n) );  // clears interval after n seconds\r\n     */\r\n    interval(handler, delay, ...splat) {\r\n        var thus = this, timeout = thus.timeout(set, delay, ...splat);\r\n        \r\n        function set(...params) {\r\n            if ( !timeout ) return console.log('break');  // > -1\r\n            handler.call(this, ...params);\r\n            timeout = thus.timeout(set, delay, ...splat);\r\n        }\r\n        function clear() {\r\n            clearTimeout(timeout);\r\n            timeout = null;\r\n            return !timeout;  // assert is cleared\r\n        }\r\n        \r\n        return clear;\r\n    }\r\n    \r\n    debounce(fn, delay) {  // # thx Remy Sharp\r\n        var timer = null;\r\n        \r\n        function _debounce(...splat) {\r\n            var context = this;\r\n            clearTimeout(timer);\r\n            timer = setTimeout( () => fn.call(context, ...splat), delay);\r\n        };\r\n        \r\n        return _debounce;\r\n    }\r\n    \r\n    throttle(fn, threshhold, scope) {  // # thx Remy Sharp\r\n        var threshhold = threshhold || 250, last, deferTimer;\r\n        \r\n        function _throttle(...splat) {\r\n            var context = scope || this, now = +(new Date()), last = now, final = (last + threshhold);\r\n            var invoke = () => ( fn.call(context, ...splat), last = now );\r\n            \r\n            if (!last || now >= final) return invoke();  // don't hold on to it\r\n            clearTimeout(deferTimer);\r\n            deferTimer = setTimeout(invoke, threshhold);\r\n        };\r\n        \r\n        return _throttle;\r\n    }\r\n    \r\n    uuid() {\r\n        function replace(c) {\r\n        var r = Math.random() * 16 | 0, v = c == 'x' ? r : (r & 0x3 | 0x8);\r\n        return v.toString(16);\r\n        }\r\n        return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, replace);\r\n    }\r\n        \r\n    escapeHTML(s) {\r\n        return s.replace(/[&\"<>]/g, function (c) {\r\n            return {\r\n                '&': '&amp;',\r\n                '\"': '&quot;',\r\n                '<': '&lt;',\r\n                '>': '&gt;'\r\n            }[c];\r\n        });\r\n    }\r\n    \r\n    \r\n    drill(data: any, path: string): any {  // @usage: var x = drill('a.b.c.id', { a: { b: { c: { id: x } } } });\r\n        var keys = path.split('.'), key = keys.shift();\r\n        \r\n        if (!data) return undefined;  // not unlike an operation of { 'existent': true }[ 'absent' ] > undefined\r\n        if (!key) return data;  // data is final\r\n        \r\n        return this.drill( data[key], keys.join('.') );  // TCO/TCE\r\n    }\r\n\r\n\r\n    /**\r\n     * @ Inspiration: Douglas Crockford (String.prototype.supplant)\r\n     */\r\n    interpolate(str) {\r\n        return (o) => str.replace(/{{([^{}]*)}}/g, (a, b) => {\r\n            var value = this.drill(o, b), val = ''+value;  // default & convert to string\r\n            \r\n            if (!value) val = a;  // leave {{key[.x[.y[.z]]]}} syntax in string so that multiple iterations of interpolation may occur\r\n            else if (value.call) val = ''+value();  // get return value\r\n            \r\n            return this.escapeHTML(val);  // assume rational value for string result\r\n        });\r\n    }\r\n\r\n    /**\r\n     * @ THX: Douglas Crockford (String.prototype.supplant)\r\n     * @ INTERPOLATE\r\n     */\r\n    interpolateShallow(str) {\r\n        return (o) => {\r\n            return str.replace(/{{([^{}]*)}}/g, (a, b) => {\r\n                var val = ''+o[b];\r\n                return this.escapeHTML(val);  // TODO: escape HTML-Entities\r\n            });\r\n        };\r\n    }\r\n\r\n    /**\r\n     * @ THX: Douglas Crockford (String.prototype.supplant)\r\n     * @ INSECURE_INTERPOLATE\r\n     */\r\n    INSECURE_INTERPOLATE(str) {\r\n        return function interpolate(o) {\r\n            return str.replace(/{{([^{}]*)}}/g, function (a, b) {\r\n                var val = ''+o[b];\r\n                return val;  // TODO: escape HTML-Entities\r\n            });\r\n        }\r\n    }\r\n    \r\n    /**\r\n     * @ EXTERPOLATE | PARSE ROUTE-URI\r\n     */\r\n    exterpolate(str) {\r\n        var str = str || '';\r\n        var re = /:[^\\s/]+|{+[^\\s/]+}+/g;\r\n        var matcher = new RegExp(str.replace(re, '([\\\\w-]+)'));\r\n\r\n        return function getValues(string) {\r\n            if (!string.match(matcher)) return false;\r\n            var string = string || '';\r\n            var result = string.match(matcher);\r\n            var keys = str.match(re);\r\n            var values = result.slice(1);\r\n            var map = {};\r\n\r\n            if (keys && values) {\r\n                for (var i = 0, len = keys.length; i < len; i++) {\r\n                    var key = keys[i].replace(/[:{}]+/g, '');\r\n                    var val = values[i];\r\n                    if (key !== val) map[key] = val;\r\n                }\r\n            }\r\n\r\n            return map;\r\n        };\r\n    }\r\n    \r\n    parseURL(url) {\r\n        var a = document.createElement('a');\r\n        a.href = url;\r\n        \r\n        return {\r\n            hash: a.hash,\r\n            host: a.host,\r\n            hostname: a.hostname,\r\n            href: a.href,\r\n            origin: a.origin,\r\n            pathname: a.pathname,\r\n            port: a.port,\r\n            protocol: a.protocol,\r\n            search: a.search,\r\n        };\r\n    }\r\n    \r\n    sortByKey(k, a, b) {  // Sort by Multiple keys (Reusable) using sortByKey()\r\n        // USAGE:\r\n        // var sort = sortByKey.bind(collection, 'x');\r\n        // collection.sort(sort);\r\n        if (a[k] > b[k]) return  1;\r\n        if (a[k] < b[k]) return -1;\r\n        return 0;\r\n    }\r\n    \r\n    // Sort by Multiple keys (Reusable + Optimized) using Methods-Array\r\n    priorityMethodSort(methods, a, b) {\r\n        // USAGE:\r\n        // var sort = prioritySort.bind(collection, [ sort$A, sort$B, sort$C, sort$D ]);\r\n        // collection.sort(sort);\r\n        var i = 0, methods = Array.prototype.slice.call(methods || [ ], 0);\r\n        while (i === 0 && methods.length) i = methods.shift().call(this, a, b);\r\n        return i;\r\n    }\r\n    \r\n    priorityKeySort(keys, a, b) {  // Sort by Multiple keys (Reusable + Optimized) using Reusable prioritySort()\r\n        // USAGE:\r\n        // var sort = prioritySort.bind(collection, [ 'a', 'b', 'c', 'd' ]);\r\n        // collection.sort(sort);\r\n        // console.log('>', collection);\r\n        // >  [\r\n        //       { \"a\": 0, \"b\": 0, \"c\": 0, \"d\": 0 },\r\n        //       { \"a\": 0, \"b\": 1, \"c\": 2, \"d\": 2 },\r\n        //       { \"a\": 0, \"b\": 1, \"c\": 2, \"d\": 3 },\r\n        //       { \"a\": 1, \"b\": 1, \"c\": 1, \"d\": 1 },\r\n        //       { \"a\": 1, \"b\": 2, \"c\": 2, \"d\": 1 },\r\n        //       { \"a\": 1, \"b\": 2, \"c\": 3, \"d\": 1 },\r\n        //       { \"a\": 2, \"b\": 2, \"c\": 2, \"d\": 2 },\r\n        //       { \"a\": 3, \"b\": 3, \"c\": 3, \"d\": 3 }\r\n        //    ]\r\n        var i = 0, keys = Array.prototype.slice.call(keys || [ ], 0);\r\n        while (i === 0 && keys.length) i = this.sortByKey.call(this, keys.shift(), a, b);\r\n        return i;\r\n    }\r\n    \r\n    getFileSize(size, unit = 'auto') {  // size: number, unit: 'auto'|'byte'|'KB'|'MG'|'GB'|'TB'|'PB'\r\n        var $ = this.toFixed.bind(this);\r\n        var $bytes = $(size || 0), $KB = $($bytes / 1024), $MB = $($KB / 1024), $GB = $($MB / 1024), $TB = $($GB / 1024), $PB = $($TB / 1024);\r\n        var bytes = `${$bytes} bytes`, KB = `${$KB} KB`, MB = `${$MB} MB`, GB = `${$GB} GB`, TB = `${$TB} TB`, PB = `${$PB} PB`;\r\n        var $auto = $bytes;\r\n        var auto;\r\n        var values = { bytes, KB, MB, GB, TB, PB, auto: undefined };\r\n        var result = { unit: '', value: Infinity };\r\n        var datasets = [\r\n        { unit: 'bytes', value: $bytes },\r\n        { unit: 'KB', value: $KB },\r\n        { unit: 'MB', value: $MB },\r\n        { unit: 'GB', value: $GB },\r\n        { unit: 'TB', value: $TB },\r\n        { unit: 'PB', value: $PB },\r\n        ];\r\n        while ( (result.value / 1024) >= 1 && datasets.length ) result = datasets.shift();\r\n        values.auto = `${result.value} ${result.unit}`;\r\n        \r\n        \r\n        \r\n        return values[unit];\r\n    }\r\n    \r\n    toFixed(n) { return Number( Math.round(+(n + 'e2')) + 'e-2' ); }\r\n    \r\n    exists(n) { return !!~n; }\r\n    \r\n}\r\n\r\nexport { Utilities };\r\n","\r\n/**\r\n * @name: Deferred Promise\r\n * @intention\r\n *  * Externalize the function of a Promise's \"Executor\" parameters so that fulfillment & rejection\r\n *  * can be performed at a later time.\r\n */\r\nclass Deferred<T> {\r\n    private _resolve: Function = () => {};\r\n    private _reject: Function = () => {};\r\n    public promise: Promise<T> = new Promise<T>( this.exe.bind(this) );\r\n        \r\n    constructor() {}\r\n    \r\n    private exe(resolve, reject) {\r\n        this._resolve = resolve;\r\n        this._reject = reject;\r\n    }\r\n    \r\n    resolve(data) {\r\n        this._resolve(data);\r\n        return this.promise;\r\n    }\r\n    reject(data) {\r\n        this._reject(data);\r\n        return this.promise;\r\n    }\r\n    \r\n}\r\n\r\nexport { Deferred };\r\n","\r\nexport { Utilities } from './utilities';\r\nexport { keycodes } from './keycodes';\r\n// export { patterns } from './patterns';\r\n// export { ds } from './ds';\r\nexport { Deferred } from './patterns/other/deferred';\r\n","\r\nclass Handler {\r\n    respond(e: CustomEvent): any {\r\n        // e.preventDefault();\r\n        // e.stopPropagation();\r\n        // e.stopImmediatePropagation();\r\n        // return false;\r\n        return e.detail;\r\n    }\r\n}\r\n\r\n/**\r\n * @intention \r\n * @usage \r\n *  * var cor = new ChainOfResponsibility({ ... });  // see config/constructor\r\n *  * cor.push({ respond(e) {...} });\r\n *  * cor.push({ respond(e) { e.stopPropagation(); return false } }, { respond(e) {...} }, ...);\r\n *  * [EventTarget].addEventListener('click', cor.respond.bind(cor), false);  // only 1st 2 handlers get invoked\r\n *  * \r\n    * private nodeHandlers: ChainOfResponsibility = new ChainOfResponsibility({}, [\r\n    *     { respond: (e: CustomEvent) => console.log('COR: A', e) },\r\n          { respond: (e: CustomEvent) => console.log('COR: B', e) },\r\n          // { respond: (e: CustomEvent) => e.stopPropagation() },\r\n          { respond: ({ detail: value }: CustomEvent) => console.log('COR: C', value) },\r\n    * ]);\r\n */\r\nclass ChainOfResponsibility extends Array {\r\n    protected config: any = { cancelable: false, bubbles: true };\r\n        \r\n    constructor(config, responders: Handler[] = []) {\r\n        super();\r\n        var { bubbles, cancelBubble, cancelable, defaultPrevented } = config;\r\n        \r\n        this.config = { ...this.config, ...config };\r\n        this.push(...responders);\r\n        \r\n        return this;\r\n    }\r\n    \r\n    protected execute(e: CustomEvent, i: number = 0, handlers: Handler[] = this.slice()): CustomEvent {\r\n        var handler = handlers[i] || new Handler();\r\n        var result = this.propagate(e, handler, i, handlers);  // process & reassign in case of change\r\n        var event = new CustomEvent(e.type, { detail: result }), next = handlers[i + 1];\r\n        \r\n        if (e.cancelBubble) event.stopPropagation();\r\n        if (e.cancelBubble) return event;  // if cancelled, stop immediately. return with value from cancellor.\r\n        if (next) return this.execute(event, ++i);  // has sibling handler. continue with new detail.\r\n        return event;  // if end reached and event not cancelled\r\n    }\r\n    \r\n    protected propagate(e: CustomEvent|any, handler: Handler, i: number, handlers: Handler[]): any {  // TODO: use Recursion to avoid unnecessary iterations\r\n        if (e.cancelBubble) return e;\r\n        var { config } = this;\r\n        var value = handler.respond.call(handler, e)\r\n          , cancelBubble = !{ 'undefined': true, 'false': false }[ value ]\r\n          ;\r\n        if (config.cancelable && cancelBubble) ( e.stopPropagation(), e.stopImmediatePropagation() );\r\n        // e.eventPhase = i;\r\n        \r\n        return value;\r\n    }\r\n    \r\n    chain(handler: Handler, ...handlers: Handler[]): ChainOfResponsibility {\r\n        this.push(handler, ...handlers);\r\n        return this;\r\n    }\r\n    \r\n    respond(e: CustomEvent<any>): CustomEvent<any> {\r\n        var event = this.execute(e);\r\n        // var result = this.reduce( this.propagate.bind(this), e );\r\n        return event;  // subclasses can implement return result.cancelBubble or return false;\r\n    }\r\n    \r\n}\r\n\r\nexport { ChainOfResponsibility, Handler };\r\n","\r\n/**\r\n * @intention \r\n * @usage \r\n *  * var command = new Command(console, 'log');\r\n *  * command.execute('This gets logged by the console');\r\n */\r\nclass Command {\r\n    private context: any = null;\r\n    private action: string = '';\r\n        \r\n    constructor(context, action) {\r\n        this.context = context;\r\n        this.action = action;\r\n    }\r\n    \r\n    execute(...splat: any[]) {\r\n        var { context, action } = this;\r\n        var value = context[action](...splat);\r\n        return value;\r\n    }\r\n    \r\n}\r\n\r\nclass StrictCommand extends Command {\r\n    \r\n    public execute = (...splat: any[]) => super.execute(...splat);\r\n    \r\n}\r\n\r\nexport { Command, StrictCommand };\r\n","/**\r\n * THIS SHOULD ACTUALLY BE JUST AN EVENT-AGGREGATOR THAT CAN BE USED [PER USUAL] ACROSS\r\n * THE SYSTEM, WHILE A \"WebSocketDecorator\" CAN BE USED TO NORMALIZE THE EXTERNAL LIBRARY.\r\n */\r\nvar EventEmitter = EventTarget;\r\nclass EventHub extends EventEmitter {\r\n    \r\n    publish(channel, data) {\r\n        var e = new CustomEvent(channel, { detail: data });\r\n        this.dispatchEvent(e);\r\n        return this;\r\n    }\r\n    subscribe(channel, handler) {\r\n        this.addEventListener(channel, handler, false);\r\n        return this;\r\n    }\r\n    unsubscribe(channel, handler) {\r\n        this.removeEventListener(channel, handler, false);  // what is 3rd param again?\r\n        return this;\r\n    }\r\n    \r\n}\r\n\r\nexport { EventHub };\r\n","\r\nexport { ChainOfResponsibility } from './chainOfRespnsibility';\r\nexport { Command, StrictCommand } from './command';\r\nexport { Mediator } from './mediator';\r\nexport { Subject } from './observer';\r\n","\r\nfunction bootstrap(target) {\r\n    var element = target;\r\n    var selector = this.selector;\r\n    var data = element.dataset || {};\r\n    var ex = /[\\s]+/img;\r\n    var slug = data.behavior || element.v || '';\r\n    var components = slug.split(ex);\r\n    var children = element.children;// element.querySelectorAll(selector);\r\n    (this, document, data, slug, components, children);\r\n    \r\n    var resolveScope = function resolveScope(parent, child) {\r\n        var isDirectDescendant = (child.parentNode === parent);\r\n        if (isDirectDescendant) bootstrap.call(this, child);\r\n    }.bind(this, element);\r\n    \r\n    // components.forEach(this.bootstrap.bind(this, element));\r\n    // Array.prototype.forEach.call(children, resolveScope);\r\n    \r\n    // ... or? ...\r\n    \r\n    Array.prototype.forEach.call(children, resolveScope);  // TODO: Optimize!!!\r\n    if (!!slug) components.forEach(this.bootstrap.bind(this, element));\r\n}\r\n\r\nfunction $bootstrap(root, medium) {\r\n    var scopeSelector = '[data-behavior]'\r\n      , $root = $(root)\r\n      , $parent = $root.find(scopeSelector)\r\n      , hasBehavior = $root.is(scopeSelector)\r\n      ;\r\n    var slug = $root.attr('data-behavior')\r\n      , formattedSlug = slug && slug.replace(/^[,;\\s]+|[,;\\s]+$/g, '').replace(/[,;\\s]+/g, '|').replace(/[|]+$/g, '') || ''\r\n      , moduleIds = $.unique(formattedSlug.split('|')).sort()\r\n      , scopeId = moduleIds.join(' ')\r\n      ;\r\n    var childMedium = medium.$spawn(new function ChildScope() { this.element = root; });\r\n    \r\n\r\n    var resolveBehavior = function resolveBehavior(scope, behavior, i, a) {\r\n        var scope = ($root.is('html')) ? document : scope;\r\n        this.start(behavior, scope, scopeId, childMedium);\r\n    }.bind(this, $root[0]);\r\n\r\n    var resolveChildren = function resolveChildren(i, scope) {\r\n        var $firstScope = $(scope);\r\n        if (!$($firstScope.parent()).is($parent)) {\r\n            autoRegisterModules.call(this, $firstScope, childMedium);\r\n        }\r\n\r\n    }.bind(this);\r\n\r\n    moduleIds.forEach(resolveBehavior);\r\n    $parent.each(resolveChildren);\r\n\r\n}\r\n\r\nclass DefaultDirector {}\r\n\r\nfunction DefaultSandbox(anything) { return anything; }  // see The Decorator Pattern @GoF\r\nfunction DefaultServicesSandbox(utils) { return utils; }\r\nfunction DefaultNodeSandbox(element) { return element; }\r\n\r\nexport { bootstrap, $bootstrap, DefaultDirector, DefaultSandbox, DefaultServicesSandbox, DefaultNodeSandbox as DefaultComponentSandbox };\r\n","\r\nimport { Utilities, Deferred } from '@motorman/core/utilities';\r\nimport { IEventAggregator } from '@motorman/core/eventaggregator.interface';\r\nimport { bootstrap, $bootstrap, DefaultDirector, DefaultSandbox, DefaultComponentSandbox, DefaultServicesSandbox } from './defaults';\r\nimport { ElementEngine } from './element-engine';\r\n\r\n\r\nclass DOMUtilities {\r\n    \r\n    constructor(protected node: Node) {}\r\n    \r\n    forEach(node: Node): Node {\r\n        // var { isConnected, parentNode: parent, previousSibling: previous, nextSibling: next, firstChild: child } = result;\r\n        \r\n        // // RECURSION\r\n        // if (result !== node) return this.parseNode(result);  // reparse. assume replacement occurred. do not continue for next or child.\r\n        // if (child) this.parseNode(child);  // TCO???\r\n        // if (next) this.parseNode(next);  // TCO???\r\n        // this.dTemplateReady.resolve(true);  // gets fulfilled after last element processed. noop after that.\r\n        \r\n        return node;  // result can still equal node\r\n    }\r\n    \r\n}\r\n\r\n\r\ntype ModuleType = string | 'service'|'element'|'attribute'|'IoT' | ''|'component'|'directive'|'';\r\n\r\ninterface IModuleMetadata {\r\n    type: ModuleType;\r\n    selector: string;\r\n    Class: any;\r\n    Sandbox?: any;  // sandbox\r\n}\r\n\r\ninterface IBootstrap {  // Note similarity to The Command Pattern. implementer only needs Instance.execute and not necessarily an \"action\"\r\n    new(context: Core, action?: string);\r\n    execute(environment: any): any;\r\n}\r\ninterface IConfiguration {\r\n    environment: any;\r\n    director: IEventAggregator;  // maybe unnecessary. perhaps sandbox should be provided by V.register(metadata);\r\n    selector: string;\r\n    Sandbox: (typeof DefaultSandbox)|any;  // perhaps sandbox should be provided by V.register(metadata);\r\n    bootstrap: IBootstrap;\r\n}\r\n\r\nvar director = new DefaultDirector();\r\nvar DEFAULT_CONFIG = {  // ... defaults\r\n    director,\r\n    selector: '[data-v]' || '[data-behavior]',\r\n    datasets: '[v-attribute]',  // includes <script type=\"application/json\"> { items: [...] } </scrpt>\r\n    // bootstrap: bootstrap,\r\n    decorators: { services: DefaultServicesSandbox, components: DefaultComponentSandbox, },\r\n};\r\n\r\nclass Core {\r\n    private dConfiguration: Deferred<any> = new Deferred();\r\n    private pConfiguration: Promise<any> = this.dConfiguration.promise;\r\n    private dInitialization: Deferred<any> = new Deferred();\r\n    private pInitialization: Promise<any> = this.dInitialization.promise;\r\n    private utils: Utilities = new Utilities();\r\n    // private engine: ElementEngine = new ElementEngine(DefaultComponentSandbox, director);\r\n    public $instances: Map<any, any> = new Map();\r\n    public $nodes: Map<Node, any> = new Map();\r\n    public modules: any = { };\r\n    public configuration: any = DEFAULT_CONFIG;\r\n    \r\n    constructor() {\r\n        var { pConfiguration, pInitialization } = this;\r\n        \r\n        pConfiguration\r\n            .then( (config) => this.dInitialization.resolve(config) )\r\n            ;\r\n        pInitialization\r\n            .then( (config) => this.bootstrap(config) )\r\n            ;\r\n        return this;\r\n    }\r\n    \r\n    init(options) {\r\n        var { configuration } = this;\r\n        // this.dInitialization.resolve({ ...configuration, options });\r\n        return this;\r\n    }\r\n    \r\n    bootstrap(config: IConfiguration) {\r\n        var { environment, bootstrap } = config;\r\n        bootstrap.execute(this);\r\n    }\r\n    \r\n    configure(config) {\r\n        this.utils.extend(this.configuration, config);\r\n        // this.engine = new ElementEngine(this.configuration.decorators.components, this.configuration.director);\r\n        this.dConfiguration.resolve(this.configuration);\r\n        return this.utils.extend({ }, this.configuration);\r\n    }\r\n    \r\n    register(metadata: IModuleMetadata) {\r\n        var { pConfiguration } = this;\r\n        pConfiguration.then( (config: IConfiguration) => this.registerModule(config, metadata) );\r\n        return this;\r\n    }\r\n    private registerModule(config: IConfiguration, metadata: IModuleMetadata) {\r\n        var { modules } = this;\r\n        var { selector: _selector, Sandbox: _Sandbox } = config;\r\n        var { type, selector = _selector, Class, Sandbox = _Sandbox } = metadata;\r\n        \r\n        if ( !modules[type] ) modules[type] = new Map<string, IModuleMetadata>();\r\n        modules[type].set(selector, { type, selector, Class, Sandbox });\r\n        \r\n        return this;\r\n    }\r\n    \r\n    // define(definition) {\r\n    //     var { name, Class, options } = definition;\r\n    //     var { dConfiguration } = this, { promise: pConfiguration } = dConfiguration;\r\n        \r\n    //     pConfiguration\r\n    //         .then( (config) => this.engine.define(name, Class, options) )\r\n    //         ;\r\n    //     return this;\r\n    // }\r\n    \r\n    arm(options) {  // automatically register modules\r\n        var config = this.configuration\r\n          , bootstrap = config.bootstrap\r\n          , target = options.target\r\n          ;\r\n        \r\n        this.startServices();\r\n        bootstrap.call(config, target, this);\r\n    }\r\n    \r\n    startServices() {\r\n        var { configuration, modules } = this;\r\n        var { service: registry } = modules;\r\n        for (let i = 0, len = registry.length; i < len; i++) this.startService(registry[i], i, registry);\r\n        return this;\r\n    }\r\n    private startService(metadatum: IModuleMetadata, i: number, metadata: IModuleMetadata[]) {\r\n        // ...\r\n        // var { configuration, utils } = this, { director, decorators } = configuration;\r\n        // var { services: ServiceSandbox = DefaultServicesSandbox } = decorators;\r\n        // var Service = _service.Constructor\r\n        //   , sandbox = new ServiceSand?box(utils, director)\r\n        //   , service = new Service(sandbox)\r\n        //   ;\r\n        // service.init();\r\n    }\r\n    \r\n    /**\r\n     * Gets called by this.configuration.bootstrap\r\n     * TODO: Rename `details` to `api` and provide an API for mapping, starting, stopping & destroying (etc) modules.\r\n     */\r\n    bootstrapX(element, data, id) {\r\n        if (!element || !id) return null;\r\n        // if (!this.components[id]) return this.utils.console.warn(\"Unregistered Component: \" + id) && null || null;\r\n        \r\n        var { configuration: config } = this\r\n          , { director, decorators } = config\r\n          , { components: ComponentSandbox = DefaultComponentSandbox } = decorators\r\n          ;\r\n        // var component = this.components[id]\r\n        //   , Component = component.Constructor\r\n        //   , sandbox = new ComponentSandbox(element, director)\r\n        //   , instance = new Component(sandbox)\r\n        //   , data = data || { }\r\n        //   ;\r\n        var details = {\r\n            id: id,\r\n            // instance: instance,\r\n            element: element,\r\n            data: data,\r\n        };\r\n        // instance.init(data);\r\n        \r\n        return details;\r\n    }\r\n    \r\n}\r\n\r\nexport { Core };\r\n","\r\nimport { Core } from './core';\r\n\r\n\r\nvar Facade = function Facade(core) {\r\n    var thus = this;\r\n    \r\n    function configure() {\r\n        return core.configure.apply(core, arguments);\r\n    }\r\n    \r\n    function register(metadata) {\r\n        core.register(metadata);\r\n        // var type = { 'string': 'component', 'function': 'service', 'object': item.decorator }[ typeof item ];\r\n        // this[type].call(this, item, Class);\r\n        return this;\r\n    }\r\n    \r\n    function bootstrap(options) {\r\n        core.init(options);\r\n        return this;\r\n    }\r\n    \r\n    // export precepts\r\n    this.utils = core.utils;\r\n    this.config = configure;\r\n    this.register = register;\r\n    this.bootstrap = bootstrap;\r\n    \r\n    return this;\r\n};\r\n\r\n/**\r\n * API\r\n */\r\nvar Vertex = new (function Vertices(Core, Facade) {\r\n    \r\n    var V = Facade.call( function V() {\r\n        if (this instanceof V) return ( new Vertices(Core, Facade) );\r\n        return V.register.apply(V, arguments);\r\n    }, new Core() );\r\n    \r\n    return V;\r\n})(Core, Facade);\r\n\r\nexport { Vertex };\r\n","\r\nimport { Utilities, Deferred } from \"@motorman/core/utilities\";\r\nimport { IEventAggregator } from \"@motorman/core/eventaggregator.interface\";\r\nimport { StrictCommand as Command } from \"@motorman/core/utilities/patterns/behavioral\";\r\nimport { ChainOfResponsibility } from \"@motorman/core/utilities/patterns/behavioral\";\r\n\r\ntype ListenerMap = { type: string, name: string, handler: (e: Event, ...splat: any[]) => any };\r\ntype EventEmitter = IEventAggregator&(Comm|Hub);\r\n\r\nvar utils = new (class ElementUtilities extends Utilities {\r\n    \r\n    composeCommand(component: any, name: string) {\r\n        var command = new Command(component, name);\r\n        return command;\r\n    }\r\n    composeExecutor(component: any, name: string) {\r\n        var command = this.composeCommand(component, name), { execute } = command;\r\n        return execute;\r\n    }\r\n    mapExecutor(component: any, item: any) {\r\n        var { name } = item;\r\n        var handler = this.composeExecutor(component, name), details = { ...item, handler };\r\n        return details;\r\n    }\r\n    \r\n})();\r\n\r\nclass Channels {\r\n    ['LEFECYCLE:ELEMENT:CREATED'] = 'vcomm://created/element';\r\n    ['LEFECYCLE:ELEMENT:CONNECTED'] = 'vcomm://connected/element';\r\n    ['ELEMENT:TEMPLATE:FOUND'] = 'vcomm://found/element/template';\r\n    ['ELEMENT:MUTATION:OBSERVED'] = 'vcomm://observed/element/mutation';\r\n    ['PROXY:INVOKED'] = 'vcomm://invoked/proxy';\r\n    ['PROXY:CONSTRUCT:INVOKED'] = 'vcomm://invoked/proxy/construct';\r\n    ['PROXY:HAS:INVOKED'] = 'vcomm://invoked/proxy/has';\r\n    ['PROXY:GET:INVOKED'] = 'vcomm://invoked/proxy/get';\r\n    ['PROXY:SET:INVOKED'] = 'vcomm://invoked/proxy/set';\r\n    ['PROXY:DELETE:INVOKED'] = 'vcomm://invoked/proxy/delete';\r\n    ['PROXY:APPLY:INVOKED'] = 'vcomm://invoked/proxy/apply';\r\n    ['PROXY:MOCK:INVOKED'] = 'vcomm://invoked/proxy/mock';\r\n}\r\nclass Hub implements IEventAggregator {\r\n    private subscriptions: any = { };\r\n    public channels: Channels = new Channels();\r\n\r\n    constructor() {}\r\n    \r\n    private invoke(subscription, data) {\r\n        var { channel, handler, context } = subscription;\r\n        var e = new CustomEvent(channel, { detail: data });\r\n        handler.call(context, e);\r\n        return this;\r\n    }\r\n\r\n    publish(channel: string, data?: any, ...more: any[]) {\r\n        if (!this.subscriptions[channel]) this.subscriptions[channel] = [ ];\r\n        var subscriptions = this.subscriptions[channel];\r\n        for (let i = 0, len = subscriptions.length; i < len; i++) this.invoke(subscriptions[i], data);\r\n        return this;\r\n    }\r\n    subscribe(channel, handler) {\r\n        if (!this.subscriptions[channel]) this.subscriptions[channel] = [ ];\r\n        var subscription = { channel, handler, context: this };\r\n        this.subscriptions[channel].push(subscription);\r\n        return this;\r\n    }\r\n    unsubscribe(channel, handler) {\r\n        if (!this.subscriptions[channel]) this.subscriptions[channel] = [ ];\r\n        // this.target.removeEventListener(channel, handler, false);\r\n        return this;\r\n    }\r\n\r\n}\r\nclass Comm implements IEventAggregator {\r\n    private target = new EventTarget();\r\n    public channels: Channels = new Channels();\r\n\r\n    constructor() {}\r\n\r\n    publish(channel: string, data?: any, ...more: any[]) {\r\n        var e = new CustomEvent(channel, { detail: data });\r\n        this.target.dispatchEvent(e);\r\n        return this;\r\n    }\r\n    subscribe(channel, handler) {\r\n        this.target.addEventListener(channel, handler, false);\r\n        return this;\r\n    }\r\n    unsubscribe(channel, handler) {\r\n        this.target.removeEventListener(channel, handler, false);\r\n        return this;\r\n    }\r\n\r\n}\r\n\r\nclass ConstructorProxy {\r\n    private comm: any;\r\n    private Sandbox: any;\r\n    private element: HTMLElement;\r\n    private director: any;\r\n    public sandbox: any;\r\n\r\n    constructor({ comm, Sandbox, element, director }) {\r\n        this.comm = comm;\r\n        this.Sandbox = Sandbox;\r\n        this.element = element;\r\n        this.director = director;\r\n    }\r\n\r\n    construct(Target, args) {\r\n        var { Sandbox, comm, element, director } = this;\r\n        var sandbox = new Sandbox(element, comm, director);\r\n        var params = [].concat(sandbox, 'extra');\r\n        var data = { type: 'construct', Target, args };\r\n        var result = Reflect.construct(Target, params /*, PrototypeConstructor*/);\r\n        \r\n        this.sandbox = sandbox;\r\n        comm.publish(comm.channels['PROXY:INVOKED'], data);\r\n        comm.publish(comm.channels['PROXY:CONSTRUCT:INVOKED'], data);\r\n        \r\n        return result;\r\n    }\r\n    \r\n}\r\n\r\nclass MemberProxy {\r\n    private comm: any;\r\n    private source: any;\r\n    private element: HTMLElement;\r\n\r\n    constructor({ comm, source, element }) {\r\n        this.comm = comm;\r\n        this.source = source;\r\n        this.element = element;\r\n    }\r\n\r\n    has(target: any, key: any) {\r\n        var { source, comm } = this;\r\n        var data = { type: 'has', source, key };\r\n        var result = Reflect.has(source, key);\r\n        \r\n        comm.publish(comm.channels['PROXY:INVOKED'], data);\r\n        comm.publish(comm.channels['PROXY:HAS:INVOKED'], data);\r\n        \r\n        return result;\r\n    }\r\n\r\n    get(target: any, key: any, receiver: any) {\r\n        // if (target[key].call) return new Proxy( target[key], new MethodProxy({ comm: this.comm, source: this.source, element: this.element }) );\r\n        var { source, comm, element } = this;\r\n        var data = { type: 'get', source, key };\r\n        var result = Reflect.get(source, key);  // omit receiver to get key of source\r\n        \r\n        comm.publish(comm.channels['PROXY:INVOKED'], data);\r\n        comm.publish(comm.channels['PROXY:GET:INVOKED'], data);\r\n        \r\n        return result;\r\n    }\r\n\r\n    set(target: any, key: any, value: any, receiver: any) {\r\n        var { source, comm } = this;\r\n        var data = { type: 'set', source, key, value };\r\n        var result = Reflect.set(source, key, value);\r\n        \r\n        comm.publish(comm.channels['PROXY:INVOKED'], data);\r\n        comm.publish(comm.channels['PROXY:SET:INVOKED'], data);\r\n        \r\n        return result\r\n    }\r\n\r\n    deleteProperty(target: Function, key: any) {\r\n        var { source, comm } = this;\r\n        var data = { type: 'delete', source, key };\r\n        var result = Reflect.deleteProperty(source, key);\r\n        \r\n        comm.publish(comm.channels['PROXY:INVOKED'], data);\r\n        comm.publish(comm.channels['PROXY:DELETE:INVOKED'], data);\r\n        \r\n        return result;\r\n    }\r\n\r\n}\r\n\r\nclass MethodProxy {\r\n    private comm: any;\r\n    private source: any;\r\n    private element: HTMLElement;\r\n\r\n    constructor({ comm, source, element }) {\r\n        this.comm = comm;\r\n        this.source = source;\r\n        this.element = element;\r\n    }\r\n\r\n    apply(target, thus, args) {\r\n        var { source, comm } = this;\r\n        var data = { type: 'apply', source, target, thus, args };\r\n        var result = target.call(source, ...args);\r\n        // var result = source[target.name](...args);\r\n        // var result = target.call(thus, ...args);\r\n        // var result = Reflect.apply(target, thus, args);\r\n        \r\n        comm.publish(comm.channels['PROXY:INVOKED'], data);\r\n        comm.publish(comm.channels['PROXY:APPLY:INVOKED'], data);\r\n        \r\n        return result;\r\n    }\r\n\r\n}\r\n\r\nclass ProxyManager {  // sets up & manages proxy relationships\r\n    \r\n}\r\n\r\nclass Comparitor {\r\n    public previous: any = undefined;\r\n    get name(): string { return this.attr.name; }\r\n    get current(): any { return this.component[ this.name ]; }\r\n    set current(value: any) { this.attr.value = value; }\r\n    get equal(): boolean { return this.detect(); }\r\n    get dirty(): boolean { return !this.equal; }\r\n    \r\n    constructor(private comm: EventEmitter, private component: any, private attr: Attr) {\r\n        var { name, value } = attr;\r\n        this.previous = value;\r\n        return this;\r\n    }\r\n    \r\n    detect() {\r\n        var { comm, name, previous, current } = this;\r\n        var equal = (previous === current);\r\n        var details = { name, previous, current, equal };\r\n        \r\n        if (!equal) comm.publish(comm.channels['ELEMENT:ATTRIBUTE:CHANGE'], details);\r\n        return equal;\r\n    }\r\n    \r\n    update() {\r\n        var { name, component } = this;\r\n        this.previous = this.current = component[name];\r\n        return this;\r\n    }\r\n    \r\n}\r\n\r\nclass TemplateVariable {  // TODO: this could probably just have attr passed in while using getters for everything\r\n    name: string = '';\r\n    attr: Attr = null;\r\n    element: HTMLElement = null;\r\n    \r\n    constructor(options: any = {}) {\r\n        var { name, attr, element } = options;\r\n        \r\n        this.name = name || this.name;\r\n        this.attr = attr || this.attr;\r\n        this.element = element || this.element;\r\n        \r\n        return this;\r\n    }\r\n    \r\n}\r\nclass TemplateListener extends TemplateVariable {\r\n    type: string = '';\r\n    handler: (e: Event) => any;\r\n    \r\n    constructor(options: any = {}) {\r\n        super(options);\r\n        var { type, handler } = options;\r\n        \r\n        this.type = type || this.type;\r\n        this.handler = handler || this.handler;\r\n        \r\n        return this;\r\n    }\r\n    \r\n}\r\nclass TemplateManagementOptions {\r\n    // reReference: RegExp = /^#(.+)$/;\r\n    reAttrIn: RegExp = /\\[(\\w*)\\]/;\r\n    reStructural: RegExp = /^\\*(\\w*)$/;\r\n    reListener: RegExp = /\\((\\w*)\\)/;\r\n    reListenerValue: RegExp = /(\\w*)\\((.*)\\)/;\r\n    // reInterpolable: RegExp = /{{([^{}]*)}}/g;\r\n}\r\nclass AttributeManager {\r\n    get name() { return this.attr.name; }\r\n    get value() { return this.attr.value; }\r\n    get element() { return this.attr.ownerElement; }\r\n    \r\n    constructor(protected attr: Attr) {\r\n        var { name, value, ownerElement: element } = attr;\r\n        attr.addEventListener('attributechange', this.handleChange, true);\r\n        attr.addEventListener('mutation', (e) => console.log('MUTATION IS A NATIVE EVENT!'), true);\r\n        attr.addEventListener('attributechange', (e) => console.log('MUTATION EVENT!'), true);\r\n        return this;\r\n    }\r\n    \r\n    destroy() {\r\n        var { attr } = this;\r\n        attr.removeEventListener('change', this.handleChange, false);\r\n        return this;\r\n    }\r\n    \r\n    private handleChange = (e: CustomEvent) => {\r\n        var { name, value, element, attr } = this;\r\n        var detail = { name, value, element, attr }, event = new CustomEvent('attributechange', { detail });\r\n        console.log('@AttrManager # handleChange', e, this);\r\n        element.dispatchEvent(event);\r\n        \r\n    };\r\n    \r\n}\r\n\r\nclass MutationManager {\r\n    protected observer: MutationObserver = new MutationObserver( (r, o) => this.observe(r, o) );\r\n    protected element: Element;\r\n    \r\n    constructor(protected comm: EventEmitter, protected component: any) {}\r\n    \r\n    private observe(changes: MutationRecord[], observer: MutationObserver) {\r\n        for(let mutation of changes) this[mutation.type](mutation);\r\n    }\r\n    \r\n    private ['childList'](mutation: MutationRecord) {\r\n        var { element, component, comm } = this;\r\n        console.log('A child node has been added or removed.');\r\n        comm.publish(comm.channels[''], { mutation, element });\r\n    }\r\n    private ['attributes'](mutation: MutationRecord) {\r\n        var { component, comm } = this;\r\n        var { attributeName: name, target: element } = mutation;\r\n        var attr = (element as Element).getAttributeNode(name);\r\n        var detail = mutation, e = new CustomEvent('attributechange', { detail }), a = new CustomEvent('mutation', { detail });\r\n        \r\n        comm.publish(comm.channels['ELEMENT:MUTATION:OBSERVED'], mutation);\r\n        element.dispatchEvent(e);\r\n        attr.dispatchEvent(a);\r\n    }\r\n    private ['subtree'](mutation: MutationRecord) {\r\n        var { element, component, comm } = this;\r\n    }\r\n    \r\n    connect(element: Element, config?: any) {\r\n        var { observer } = this;\r\n        var config = { attributes: true, childList: true, subtree: true, ...config };\r\n        \r\n        this.element = element;\r\n        observer.observe(element, config);\r\n        \r\n        return this;\r\n    }\r\n    \r\n    destroy() {\r\n        this.observer.disconnect();\r\n        // destroy all attribute listeners as well\r\n    }\r\n    \r\n}\r\nclass ContentManager {\r\n    protected dTemplateReady: Deferred<boolean> = new Deferred();\r\n    protected $slots: Map<string, NodeList> = new Map();\r\n    // protected $variables: Map<string, Element> = new Map();\r\n    // protected attributes: AttributeManager[] = [ ];\r\n    protected templateListeners: TemplateListener[] = [];\r\n    protected activeListeners: { element, type, handler }[] = [ ];\r\n    protected mutations: MutationManager = new MutationManager(this.comm, this.component);\r\n    public fragment: DocumentFragment|Element = new DocumentFragment();\r\n    public template: string = '';\r\n    public content: string = '';\r\n    get component() { return this.element.component; }\r\n    get comm() { return this.element.comm; }\r\n    get $elementRefs() { return this.element.$elementRefs; }\r\n    get elementRefs() { return this.element.elementRefs; }\r\n    get $attrRefs() { return this.element.$attrRefs; }\r\n    get attrRefs() { return this.element.attrRefs; }\r\n    get listeners() { return this.element.listeners; }\r\n    get reAttrIn() { return this.options.reAttrIn; }\r\n    get reStructural() { return this.options.reStructural; }\r\n    get reListener() { return this.options.reListener; }\r\n    get reListenerValue() { return this.options.reListenerValue; }\r\n    protected pipeNodeHandler = (handler: Function) => (e: CustomEvent) => handler.call(this, e.detail, e);\r\n    protected nodeProcessors: ChainOfResponsibility = new ChainOfResponsibility({}, [\r\n        { respond: this.pipeNodeHandler(this.processSlotElementNode) },\r\n        { respond: this.pipeNodeHandler(this.processAttributeNodeRepeat) },  // note Execution Guards in method\r\n        { respond: this.pipeNodeHandler(this.processElementNode) },\r\n        { respond: this.pipeNodeHandler(this.processTextNode) },\r\n        { respond: this.pipeNodeHandler(this.processCommentNode) },\r\n    ]);\r\n    protected pipeAttributeHandler = (handler: Function) => (e: CustomEvent) => handler.call(this, e.detail, e);\r\n    protected attributeProcessors: ChainOfResponsibility = new ChainOfResponsibility({}, [\r\n        { respond: this.pipeAttributeHandler(this.handlePropertyBinding) },\r\n        { respond: this.pipeAttributeHandler(this.handleListenerBinding) },\r\n    ]);\r\n    \r\n    constructor(private element: HTMLElement&any, private options: TemplateManagementOptions) {\r\n        var { $slots } = this;\r\n        var container = document.createElement('div');\r\n        \r\n        container.innerHTML = element.innerHTML;  // this needs to be done at construction-time\r\n        $slots.clear();  // clear before each potential cycle\r\n        for (let i = 0, len = container.childNodes.length; i < len; i++) setSlot.call(this, $slots, <Node&Element>container.childNodes[i]);\r\n        \r\n        function setSlot($slots: Map<string, NodeList>, node: Node&Element) {  // Node.ELEMENT_NODE === 1\r\n            if (!{ '1': true }[ node.nodeType ]) return;\r\n            if ( !node.hasAttribute('slot') ) return;\r\n            if ( $slots.has(node.slot) ) return;  // if already set, skip. parent.querySelectorAll() gets siblings.\r\n            var { slot, parentElement: parent } = node;\r\n            var selector = `[slot=\"${slot}\"]`, all = parent.querySelectorAll(selector);\r\n            \r\n            if (all.length) $slots.set(slot, all);\r\n        }\r\n        \r\n    }\r\n    \r\n    parseNode(node: Node): Node {\r\n        var { nodeProcessors: cor } = this;\r\n        var e = new CustomEvent('domnodeprocess', { detail: <any>node })\r\n          , e = cor.respond(e)\r\n          , { detail: result } = e\r\n          ;\r\n        var { isConnected, parentNode: parent, previousSibling: previous, nextSibling: next, firstChild: child } = result;\r\n        \r\n        // RECURSION\r\n        if (result !== node) return this.parseNode(result);  // reparse. assume replacement occurred. do not continue for next or child.\r\n        if (child) this.parseNode(child);  // TCO???\r\n        if (next) this.parseNode(next);  // TCO???\r\n        this.dTemplateReady.resolve(true);  // gets fulfilled after last element processed. noop after that.\r\n        \r\n        return node;  // result can still equal node\r\n    }\r\n    \r\n    private processSlotElementNode(node: Node&Element&HTMLSlotElement, response: CustomEvent): Node&Element {  // Node.ELEMENT_NODE === 1\r\n        if (!{ '1': true }[ node.nodeType ]) return node;  // https://developer.mozilla.org/en-US/docs/Web/API/Node/nodeType\r\n        if (!{ 'SLOT': true }[ node.tagName ]) return node;\r\n        if ( !this.$slots.has(node.name) ) return node;  // only process if there are occupants\r\n        var { $slots } = this;\r\n        var { name, previousSibling: previous } = node;\r\n        var occupants: NodeList = $slots.get(name)\r\n          , container = document.createElement('div')\r\n          ;\r\n        occupants.forEach( (occupant) => container.appendChild(occupant) );\r\n        node.outerHTML = container.innerHTML;\r\n        response.stopPropagation();  // end responsibility processing. abort/break chain. do not pass into next process.\r\n        \r\n        return <Node&Element>previous.nextSibling;\r\n    }\r\n    \r\n    private processAttributeNodeRepeat(node: Node&Element, response: CustomEvent): Node&Element {\r\n        if (!{ '1': true }[ node.nodeType ]) return node;  // https://developer.mozilla.org/en-US/docs/Web/API/Node/nodeType\r\n        \r\n        if ( !node.hasAttribute('*each') ) return node;\r\n        else response.stopPropagation();  // end responsibility processing. abort/break chain. do not pass into next process.\r\n        \r\n        var attribute: Attr = node.getAttributeNode('*each')\r\n          , replacement: Node&Element = this.handleStructuralRepeat(attribute)\r\n          ;\r\n        return replacement;\r\n    }\r\n    private handleStructuralRepeat(attr: Attr): Node&Element {\r\n        var { reStructural, component } = this;\r\n        var { name, value, ownerElement: instructor } = <any>attr;\r\n        var { previousSibling: previous } = instructor;\r\n        var matches = reStructural.exec(name), [ match, type ] = matches;\r\n        var [ namespace, property ] = value.split(' of ');\r\n        var items = component[property] || [ { id: 3 }, { id: 2 }, { id: 1 } ];\r\n        var ignore = instructor.removeAttribute(match);  // avoid infinite loop\r\n        var clones = items.map( (item) => utils.interpolate(instructor.outerHTML)({ ...component, [namespace]: item }) )  // not working because utils.interpolate doesn't account for namespaces (x.y.z)\r\n          , elements = clones.join('\\n')\r\n          ;\r\n        instructor.outerHTML = elements;  // replace current element with clones. create real Nodes in DOM Tree & [Heap] memory.\r\n        \r\n        return previous.nextSibling;  // that node which now exists at instructor's index due to replacement\r\n    }\r\n    \r\n    private processElementNode(node: Node&Element): Node&Element {  // Node.ELEMENT_NODE === 1\r\n        if (!{ '1': true }[ node.nodeType ]) return node;  // https://developer.mozilla.org/en-US/docs/Web/API/Node/nodeType\r\n        var attributes: NamedNodeMap = node.attributes, attrs = Array.prototype.slice.call(attributes), attr = attrs.shift();\r\n        var result = this.processAttributeNode(attr, ...attrs);\r\n        \r\n        return node;\r\n    }\r\n    private processAttributeNode(node: Node&Attr, ...more: (Node&Attr)[]): Node&Attr {  // Node.ATTRIBUTE_NODE === 2\r\n        if (!node) return node;\r\n        if (!{ '2': true }[ node.nodeType ]) return node;  // https://developer.mozilla.org/en-US/docs/Web/API/Node/nodeType\r\n        var { name, value, ownerElement: owner } = node;\r\n        var { attributeProcessors: cor } = this;\r\n        var e = new CustomEvent('domnodeattributeprocess', { detail: <any>node })\r\n          , e = cor.respond(e)\r\n          , { detail: result } = e\r\n          ;\r\n        var next: Node&Attr = more.shift();\r\n        \r\n        if (next) this.processAttributeNode(next, ...more);  // TCO???\r\n        return node;\r\n    }\r\n    private handlePropertyBinding(node: Node&Attr): Node&Attr {\r\n        if (!{ '2': true }[ node.nodeType ]) return node;  // https://developer.mozilla.org/en-US/docs/Web/API/Node/nodeType\r\n        if ( !this.reAttrIn.test(node.name) ) return node;\r\n        var { reAttrIn, component } = this;\r\n        var { name, value, ownerElement: owner } = node;\r\n        var matches = reAttrIn.exec(name), [ match, property ] = matches;\r\n        var { [value]: datum } = component;\r\n        \r\n        // console.log('ATTR (IN) %O', node, property, node.value, datum);\r\n        // ownerElement.setAttribute(property, datum);\r\n        owner[property] = datum;\r\n        \r\n        return node;\r\n    }\r\n    private handleListenerBinding(node: Node&Attr): Node&Attr {\r\n        if (!{ '2': true }[ node.nodeType ]) return node;  // https://developer.mozilla.org/en-US/docs/Web/API/Node/nodeType\r\n        if ( !this.reListener.test(node.name) ) return node;\r\n        var { templateListeners, reListener } = this;\r\n        var { name, ownerElement: element } = node, matches = reListener.exec(name), [ match, type ] = matches;\r\n        var handler = this.createBindingInvoker(node);\r\n        var details = new TemplateListener({ name, type, node, element, handler });\r\n        // console.log('LISTENER %O', node);\r\n        \r\n        templateListeners.push(details);\r\n        return node;\r\n    }\r\n    private createBindingInvoker(attr: Attr): Function {\r\n        var { component, reListenerValue } = this;\r\n        var { name, value } = attr;\r\n        var [ match, method, args ] = value.match(reListenerValue);\r\n        var exe = utils.composeExecutor(component, method);\r\n        var op = `with($_) return eval(\"h(${args})\");`;\r\n        var fn = new Function('$_', 'h', '$event', op);\r\n        var f = (e) => fn(component, exe, e);\r\n        \r\n        return f;\r\n    }\r\n    \r\n    private processTextNode(node: Node&Text): Node&Text {  // Node.TEXT_NODE === 3\r\n        if (!{ '3': true }[ node.nodeType ]) return node;  // https://developer.mozilla.org/en-US/docs/Web/API/Node/nodeType\r\n        // var { component} = this;\r\n        // var { data } = node;\r\n        // var interpolated = utils.interpolate(data)(component);\r\n        \r\n        // console.log('TEXT %O', node);\r\n        // // node.replaceWith(interpolated);\r\n        // // console.log('TEXT %O', node, data, interpolated);\r\n        \r\n        return node;\r\n    }\r\n    \r\n    private processCommentNode(node: Node&Comment): Node&Comment {  // Node.COMMENT_NODE === 8\r\n        if (!{ '8': true }[ node.nodeType ]) return node;  // https://developer.mozilla.org/en-US/docs/Web/API/Node/nodeType\r\n        // var attrs: NamedNodeMap = node.attributes;\r\n        \r\n        // console.log('COMMENT %O', node);\r\n        // for (let i = 0, len = attrs.length; i < len; i++) this.parseChildAttr(attrs[i], i, attrs);\r\n        // this.parse(node.childNodes);\r\n        \r\n        return node;\r\n    }\r\n    \r\n    /**\r\n     * @intention : Leverage <template> &| DocumentFragment so that DOM objects do not change between parsing template variables & processing event-bindings.\r\n     */\r\n    refresh(template: string = '') {\r\n        var { component, element, dTemplateReady } = this;\r\n        var { shadow } = element;\r\n        var { promise: pTemplateReady } = dTemplateReady;\r\n        var innerHTML = utils.interpolate(template)(component);\r\n        \r\n        shadow.innerHTML = innerHTML;\r\n        pTemplateReady\r\n            .then( () => this.template = template )\r\n            .then( () => this.bindMutationObservers() )\r\n            .then( () => this.bindElementNodeRefs() )\r\n            .then( () => this.bindAttributeNodeRefs() )\r\n            .then( () => this.bindListeners() )\r\n            // .then( () => this.element.config.createSurrogate() )\r\n            .then( () => this.dTemplateReady = new Deferred() )\r\n            // .then( () => this.comm.publish(READY) )\r\n            ;\r\n        this.destroy()\r\n            .parseNode(shadow.firstChild)\r\n            ;\r\n        \r\n        return this;\r\n    }\r\n    \r\n    appendTo(element: Element) {\r\n        // var { content } = this;\r\n        // this.element = element;\r\n        // this.element.innerHTML = content;\r\n        \r\n        return this;\r\n    }\r\n    \r\n    bind() {  // convert all of this to Promises using new Deferred() at this.processNode Tail-Call.\r\n        this.bindMutationObservers()\r\n            .bindListeners()\r\n            .dTemplateReady = new Deferred()\r\n            ;\r\n        return this;\r\n    }\r\n    bindMutationObservers() {\r\n        var { element, mutations } = this;\r\n        mutations.connect(element);\r\n        mutations.connect(element.shadow);\r\n        return this;\r\n    }\r\n    bindElementNodeRefs() {\r\n        var { element, component, elementRefs } = this;\r\n        // element.matches(selector);\r\n        for (let { isHost, selector, key } of elementRefs) if (!{ 'function': true }[ typeof component[key] ]) isHost ? component[key] = element : component[key] = element.querySelector(selector);\r\n        return this;\r\n    }\r\n    bindAttributeNodeRefs() {\r\n        var { element, component, attrRefs } = this;\r\n        for (let { isHost, selector, key, name } of attrRefs) if (!{ 'function': true }[ typeof component[key] ]) isHost ? component[key] = element.getAttributeNode(name) : component[key] = element.querySelector(selector).getAttributeNode(name);\r\n        return this;\r\n    }\r\n    bindListeners() {\r\n        var { element, listeners, templateListeners, $elementRefs } = this;\r\n        listeners.forEach( ({ key, type, handler }) => this.addNodeListener(key, type, handler ) );\r\n        templateListeners.forEach( ({ element: target, type, handler }) => target.addEventListener(type, handler, false) );\r\n        return this;\r\n    }\r\n    addNodeListener(key: string, type: string, handler: Function) {\r\n        var { element, $elementRefs, $attrRefs, activeListeners } = this;\r\n        var metadata = $elementRefs.get(key) || $attrRefs.get(key) || { };\r\n        var { decorator, selector, isHost, name } = metadata;\r\n        var target = {\r\n            'true': element,\r\n            'false': element.shadow['querySelector'](selector),\r\n        }[ isHost ];\r\n        var node = {\r\n            'reference:element': target,\r\n            'reference:attribute': target['getAttributeNode'](name),\r\n        }[ decorator ];\r\n        \r\n        if ( !$elementRefs.get(key) && !$attrRefs.get(key) ) return this;\r\n        if (  $elementRefs.get(key) &&  $attrRefs.get(key) ) return this;\r\n        \r\n        node.addEventListener(type, handler, false);\r\n        activeListeners.push({ element: node, type, handler });\r\n    }\r\n    \r\n    destroy() {\r\n        var { element, mutations, listeners, templateListeners, activeListeners } = this;\r\n        \r\n        mutations.destroy();\r\n        templateListeners.forEach( ({ element, type, handler }) => element.removeEventListener(type, handler, false) );\r\n        activeListeners.forEach( ({ element, type, handler }) => element.removeEventListener(type, handler, false) );\r\n        templateListeners.length = 0;\r\n        activeListeners.length = 0;\r\n        \r\n        return this;\r\n    }\r\n    \r\n}\r\n\r\n\r\nclass ElementEngine {\r\n    \r\n    constructor(private Sandbox: any, private director: any) {}\r\n    \r\n    private getConfig(Class, element) {  // TODO: fractionate routine\r\n        var { director, Sandbox } = this;\r\n        var { metadata } = Class;\r\n        var { $members, $observedAttributes, $watchers, $elements: $elementRefs, $attrs: $attrRefs, $listeners, $subscriptions } = metadata;\r\n        \r\n        var comm = new Comm();\r\n        var construction = new ConstructorProxy({ comm, Sandbox, element, director }); \r\n        var ClassProxy = new Proxy(Class, construction);\r\n        var component = new ClassProxy({ state: false });\r\n        var membersProxy = new MemberProxy({ comm, source: component, element });\r\n        var methodsProxy = new MethodProxy({ comm, source: component, element });\r\n        var proxy = new Proxy(component, membersProxy);\r\n        var properties = Object.getOwnPropertyNames(Class.prototype);\r\n        var methodBlacklist = { 'constructor': true, 'connectedCallback': true, 'attributeChangedCallback': true, 'disconnectedCallback': true, 'adoptedCallback': true };\r\n        \r\n        var members = Array.from( $members.values() )\r\n          , watchers = Array.from( $watchers.values() )\r\n          , elementRefs = Array.from( $elementRefs.values() )\r\n          , attrRefs = Array.from( $attrRefs.values() )\r\n          , listeners = Array.from( $listeners.values() ).map( (item) => utils.mapExecutor(component, item) )  // map each handler to a handler bound to \"component\"\r\n          , subscriptions = Array.from( $subscriptions.values() ).map( (item) => utils.mapExecutor(component, item) )  // map each handler to a handler bound to \"component\"\r\n          ;\r\n        var shadow = element;\r\n        // var shadow = element.attachShadow({ mode: 'open' });\r\n        \r\n        var createSurrogate = _createSurrogate.bind(this, { proxy, component, methodsProxy, methodBlacklist });\r\n        \r\n        // TODO!!! THIS NEEDS TO BE PERFORMED REPEATEDLY OnRecycle (and surrogate destroyed) MAY OBVIATE INFINITE LOOP.\r\n        function _createSurrogate({ proxy, component, methodsProxy, methodBlacklist }) {\r\n            var surrogate = Object.create(proxy);  // use Object.create to carry over get|set; spread op fails to do so\r\n            for (let key in proxy) if (proxy[key] && proxy[key].call) surrogate[key] = new Proxy(proxy[key], methodsProxy);\r\n            properties.forEach( (key) => { if (!!component[key] && component[key].call && !methodBlacklist[key]) surrogate[key] = new Proxy(component[key], methodsProxy); });\r\n            return surrogate;\r\n        }\r\n        \r\n        var config = {  // TODO: create fn\r\n            comm,\r\n            director,\r\n            Sandbox,\r\n            Class,\r\n            ...{\r\n                shadow,\r\n            },\r\n            ...{\r\n                sandbox: construction.sandbox,\r\n            },\r\n            ...{\r\n                $members, members,\r\n            },\r\n            ...{\r\n                $watchers, watchers,\r\n            },\r\n            ...{\r\n                $elementRefs, elementRefs,\r\n                $attrRefs, attrRefs,\r\n            },\r\n            ...{\r\n                $listeners, listeners,\r\n                $subscriptions, subscriptions,\r\n            },\r\n            ...{\r\n                component,\r\n                // surrogate,\r\n                createSurrogate,\r\n            },\r\n        };\r\n        \r\n        return config;\r\n    }\r\n    \r\n    private prepare(Class) {\r\n        var thus = this;\r\n        var { metadata } = Class;\r\n        var { $observedAttributes } = metadata;\r\n        var observedAttributes = Array.from( $observedAttributes.values() ).map( ({ name }) => name )\r\n        var templateOptions = new TemplateManagementOptions();\r\n        \r\n        return class Element extends HTMLElement {  // https://alligator.io/web-components/attributes-properties/\r\n            static get observedAttributes(): string[] { return observedAttributes }  // native HTML Custom Elements\r\n            protected $utils: Utilities = new Utilities();\r\n            private config: any = thus.getConfig(Class, this);\r\n            private comm: EventEmitter = this.config.comm;\r\n            private $: any = this.config.sandbox;\r\n            private component: any = this.config.component;\r\n            // private surrogate: any = this.config.surrogate;\r\n            // private createSurrogate: any = this.config.createSurrogate;\r\n            //\r\n            private shadow: ShadowRoot = this.config.shadow;\r\n            //\r\n            private $observedAttributes: Map<string, any> = this.config.$observedAttributes;\r\n            private observedAttributes: any[] = this.config.observedAttributes;\r\n            private $watchers: Map<string, any> = this.config.$watchers;\r\n            private watchers: any[] = this.config.watchers;\r\n            private $elementRefs: Map<string, any> = this.config.$elementRefs;\r\n            private elementRefs: any[] = this.config.elementRefs;\r\n            private $attrRefs: Map<string, any> = this.config.$attrRefs;\r\n            private attrRefs: any[] = this.config.attrRefs;\r\n            private $listeners: Map<string, any> = this.config.$listeners;\r\n            private listeners: ListenerMap[] = this.config.listeners;\r\n            private $subscriptions: Map<string, any> = this.config.$subscriptions;\r\n            private subscriptions: any[] = this.config.subscriptions;\r\n            //\r\n            private $content: ContentManager = new ContentManager(this, templateOptions);\r\n            private template: string = '';  // this.config.template;\r\n            // private pTemplate: Promise<string> = this.config.pTemplate;\r\n            // private $comparitors: Map<string, Comparitor> = new Map();\r\n            private handlers: any[] = [ ];\r\n            // get comparitors(): Comparitor[] { return Array.from( this.$comparitors.values() ); }\r\n            // get content(): string { return this.$utils.interpolate(this.template)(this.component); }\r\n            // set content(value: string) { this.innerHTML = value; }\r\n            get attrs() { return observedAttributes; }\r\n            get channels() { return this.comm.channels; }\r\n            // get $elements() { return this.$content.$elements; }\r\n            \r\n            constructor() {\r\n                super();\r\n                console.log('CONSTRUCTOR');\r\n                var { comm } = this;\r\n                \r\n                this.bind();\r\n                comm.subscribe(comm.channels['ELEMENT:MUTATION:OBSERVED'], (e) => console.log('@MUTATION', e) );\r\n                comm.subscribe(comm.channels['ELEMENT:TEMPLATE:FOUND'], this.handleTemplate );\r\n                // comm.subscribe(comm.channels['PROXY:INVOKED'], this.handleProxyInvokation);\r\n                comm.subscribe(comm.channels['PROXY:APPLY:INVOKED'], this.handleProxyInvokation);\r\n                // comm.subscribe(comm.channels['PROXY:MOCK:INVOKED'], this.handleProxyInvokation);\r\n                comm.publish(comm.channels['LEFECYCLE:ELEMENT:CREATED']);\r\n                \r\n                return this;\r\n            }\r\n            \r\n            private bind() {\r\n                var { comm, component, subscriptions } = this;\r\n                var { observedAttributes: attributes } = Element;\r\n                \r\n                attributes.forEach( (key) => this.bindAttribute(key) );\r\n                subscriptions.forEach( ({ type, handler }) => comm.subscribe(comm.channels[type], handler) );\r\n                \r\n                return this;\r\n            }\r\n            private bindAttribute(key: string) {  // KEEP?!!!\r\n                var { component } = this;\r\n                var descriptor = Object.getOwnPropertyDescriptor(Class.prototype, key)\r\n                  , descriptor = { ...descriptor }\r\n                  , { get, set } = descriptor\r\n                  ;\r\n                var value = this.getAttribute(key);\r\n                if (!value) this.setAttribute(key, component[key]);\r\n                if (descriptor.get && descriptor.set) descriptor = { get, set };\r\n                else if (!descriptor.get && !descriptor.set) descriptor = { get: () => this.getAttribute(key), set: (v) => this.setAttribute(key, v) };\r\n                else if (!descriptor.get && descriptor.set) descriptor = { get: () => this.getAttribute(key), set };\r\n                else if (descriptor.get && !descriptor.set) descriptor = { get, set: () => this.setAttribute(key, component[key]) };\r\n                Object.defineProperty(component, key, descriptor);\r\n                \r\n                return this;\r\n            }\r\n            \r\n            // https://developer.mozilla.org/en-US/docs/Web/Web_Components/Using_custom_elements#Using_the_lifecycle_callbacks\r\n            connectedCallback() {\r\n                var { comm, component } = this;\r\n                console.log('connectedCallback');\r\n                // if (component.attachedCallback) component.connectedCallback();\r\n                // this.$load();\r\n                comm.publish(comm.channels['LEFECYCLE:ELEMENT:CONNECTED']);\r\n            }\r\n            attributeChangedCallback(attrName: string, oldVal: string, newVal: string) {\r\n                var { component, $watchers } = this;\r\n                // // var action = `[${attrName}]`, handler = component[action];\r\n                // // var any = `[*]`, all = component[any];\r\n                var $watcher = $watchers.get(attrName);\r\n                \r\n                // // if (component.attributeChangedCallback) component.attributeChangedCallback(attrName, oldVal, newVal);\r\n                // // if (all) all.call(component, attrName, oldVal, newVal);\r\n                // // if (handler) handler.call(component, newVal, oldVal);\r\n                if ($watcher) $watcher.handler.call(component, newVal, oldVal);\r\n            }\r\n            disconnectedCallback() {\r\n                var { component, listeners, subscriptions } = this;\r\n                if (component.detachedCallback) component.disconnectedCallback();\r\n                // listeners.forEach( (map) => this.unbindListener(component, map) );\r\n                // subscriptions.forEach( (map) => this.unbindMessageHandler(component, map) );\r\n                // this.$unload();\r\n            }\r\n            adoptedCallback() {\r\n                var { component } = this;\r\n                // if (component.adoptedCallback) component.adoptedCallback();\r\n                // this.$load();\r\n                console.log('--adoptedCallback--');\r\n            }\r\n            \r\n            cycle() {\r\n                var { template } = this;\r\n                setTimeout( () => this.$content.refresh(template), 0 );  // let current callStack clear while element may still be mounting\r\n            }\r\n            \r\n            private handleTemplate = (e: CustomEvent) => {\r\n                var { type, detail: template } = e;\r\n                this.template = template;\r\n                this.cycle();\r\n                // console.log('\\n\\n', 'WORKING ON TEMPLATE-HANDLING', '\\n', template, '\\n\\n');\r\n            };\r\n            \r\n            private handleProxyInvokation = (e: CustomEvent) => {  // KEEP?\r\n                // var { component, attributes, content } = this;\r\n                // var { type, detail } = e, { type: method } = detail;\r\n                // var dirty = this.getDirtyAttributeStates(this.comparitors);\r\n                \r\n                // dirty.forEach( ({ name }) => this.initAttribute(component, attributes[name]) );\r\n                console.log('--handleProxyInvokation--');\r\n                setTimeout( () => this.cycle(), (1000 * 3) );\r\n            };\r\n            \r\n        };\r\n    }\r\n    \r\n    define(name, Class, options?: any) {\r\n        if ( !!customElements.get(name) ) return this;\r\n        var Element = this.prepare(Class);\r\n        window.customElements.define(name, Element, options);\r\n        \r\n        return this;\r\n    }\r\n    \r\n}\r\n\r\nexport { ElementEngine };\r\n\r\n/* ================================================================================================================================\r\nTODO\r\n\r\nORDER OF OPERATIONS\r\nOnInitialization:\r\n    getOccupants()\r\n        .then( trigger('onchange') )\r\nOnChange:\r\n    pTemplateReady\r\n        .then( () => this.template = template )\r\n        .then( () => this.bindMutationObservers() )\r\n        .then( () => this.bindElementNodeRefs() )\r\n        .then( () => this.bindAttributeNodeRefs() )\r\n        .then( () => this.bindListeners() )\r\n\r\n\r\nRefactor\r\nDo less; simplify. Use EDA for more. Lifecycle Hooks should be CustomEvents from Comm.\r\n - ProxyManager: Create \"ProxyManager\" class -- passing in comm -- to manage Proxy operations & triggers.\r\n - AttributeValueProxy: R&D; see if a Proxy Trap can be set on attributes so that Events can be setup on `set()` for `.value`.\r\n    - @watch: @watch Decorator should STILL be used ONLY for Host's observedAttributes -- BUT it should drive a subscription to an event\r\n              published from attributeChangedCallback, which can be on the same or similar channel as other AttrValProxy events.\r\n    - MutationObserver: R&D https://developer.mozilla.org/en-US/docs/Web/API/MutationObserver\r\n - Lifecycle Hooks: Lifecycle Hooks should be driven through Comm.\r\n    - TODO: Define Lifecycle Flow.\r\n - @message: @message Decorator should be used for subscribing to Comm; leave assumption about Sandbox alone!\r\n    - Operators: This will obviate the complexity around operators/operands etc! :-D\r\n - Comm: Comm should remain as disperate EventTarget as to not conflate DOM events with Object-to-Object tether.\r\n - Templates: Templates should have their own Channel while `component` is responsible for BOTH getting AND `.publish`ing a template. This\r\n              way, components have control over lazyLoading and swapping out the template on the fly.\r\n    - Templates should be loaded into a detached element, such as a DOMFragment, before interations to discover template refs, \r\n      bindings, and other variables.\r\n    - TemplateRefs should be accessed through the element's $children Map.\r\n - Event Listeners: If there is a way to bind event-handlers before appending Content to DOM, after interpolation, this would be helpful.\r\n - Comm & Channels: Comm should be phased out using an @Decorator for subscriptions while providing access to Comm AND comm Channels ONLY\r\n                    through methods (get|set for channels) on element.\r\n - Slots: Need <slot>s\r\n \r\n - EDA\r\n    - Events can be published for TemplateRef variables while letting Developer decide what to do with them & their .ownerElement.\r\n    \r\n - LEFECYCLE EVENTS & CHANNELS\r\n    - ELEMENT:TEMPLATE:FOUND (watch out for Race Conditions)\r\n    - ELEMENT:CREATED (constructor)\r\n    - ELEMENT:TEMPLATE:CHECKED (DOM Fragment evaluation)\r\n        // -? ELEMENT:TEMPLATE:VARIABLE:FOUND (DOM Fragment evaluation, TemplateRef)\r\n        // -? ELEMENT:TEMPLATE:VARIABLES:FOUND (DOM Fragment evaluation, TemplateRef)\r\n    - ELEMENT:CONTENT:CREATED (interpolated)\r\n    - ELEMENT:CONTENT:CHECKED (injected/appended)\r\n        // -? ELEMENT:TEMPLATE:LISTENER:BOUND (DOM Fragment evaluation, event-handler bound)\r\n        // -? ELEMENT:TEMPLATE:LISTENERS:BOUND (DOM Fragment evaluation, event-handlers bound)\r\n        // -? ELEMENT:TEMPLATE:ATTRIBUTE:BOUND (DOM Fragment evaluation, AttrValTrap & Listener bound)\r\n        // -? ELEMENT:TEMPLATE:ATTRIBUTES:BOUND (DOM Fragment evaluation, AttrValTraps & Listeners bound)\r\n    - ELEMENT:CONTENT:READY (checked + bound)\r\n    - ELEMENT:READY (everything in its right place)\r\n      [ADDITIONAL] ... which part of the sequence do these fall in?\r\n    - ELEMENT:CONNECTED (LIFECYCLE METHOD)\r\n    - ELEMENT:DISCONNECTED (LIFECYCLE METHOD)\r\n    - ELEMENT:ADOPTED (LIFECYCLE METHOD)\r\n    - ELEMENT:ATTRIBUTE:CHANGED (LIFECYCLE METHOD, could be same channel as AttrValTraps, but could also or instead be ELEMENT:OBSERBED-ATTRIBUTE:CHANGED)\r\n\r\n\r\nREFACTOR 2\r\n\r\n\r\nSyntax\r\n\r\nTemplate (<input {{attr}}=\"{{variable}}\"  />)\r\nEvent: Uses (click)=\"handle($event, variable, 'literal')\"\r\nAttribute: type=\"text\", type=\"{{var}}\", {{var}}=\"literal\", {{attr}}=\"{{var}}\"\r\nProperty I (ctrl -> el): [value]=\"var\" (update element)\r\n// Property O (el -> ctrl): {value}=\"var\" (update controller)\r\nTextNode: {{interpolation}}\r\n\r\n\r\nBehavior\r\n\r\nTemplate: Template gets inserted into element and immediately crawled.\r\nParsing: Parsing crawls element.childNodes to include TextNodes, crawls child.attributes, and recurses from child.childNodes.\r\nAttributes: Each attribute is tested for its binding type, handled accordingly, and evaluated using an \"evaluator\".\r\nTextNodes: TextNodes always get interpolated using an \"evaluator\".\r\nChildNodes: ChildNodes are parsed using strategy above.\r\nEvaluator: Evaluator\r\n\r\n\r\nChange Detection\r\n\r\n\r\n\r\n\r\nDecorators\r\n\r\nClass decorators should always contain a \"meta\" property (on their descriptor, Class, or [root] Prototype) with a \"members\" object.\r\nMember decorators always assign metadata to a \"meta\" object on their Class under members[key] providing data for their purpose.\r\nDecorators should have the capability to be leveraged compositively with each other, adding \"meta\" data to the descriptor.\r\n\r\n@observe('prop') x: any;  // prepares metadata for observedAttributes (of \"prop\" with alias \"x\")\r\n@observer('prop') handleChange(...?) {}  // prepares metadata for handler called from attributedChangedCallback\r\n@element('tagName.class[attr]') element: HTMLElement;  // prepares metadata to select & bind an element to component['element'] (if not arguments.length then return HostElement or FirstChild or querySelector('*') or descriptor.name)\r\n@attr('tagName.class[attr]') attr: Attr;  // prepares metadata to select & bind an element's attribute-node to component['attr'] (if not \"[attr]\" then return descriptor.name)\r\n@listener('click') handleClick() {}  // prepares metadata to handle \"click\" on HostElement\r\n@dispatcher('some-type') unique: EventTarget<CustomElement, 'some-type'>; this.unique.dispatchEvent(detail);\r\n----\r\n@listener('click') @element('tagName.class[attr]') handleClick({ target }) {}  // prepares metadata to handle \"click\" on metadata.selector of type \"element\"\r\n@listener('change') @attr('tagName.class[attr]') handleChange({ ownerElement }) {}  // prepares metadata to handle \"change\" on metadata.selector of type \"attr\"\r\n\r\n\r\nMISC\r\nhttps://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/setPrototypeOf\r\n\r\n\r\n\r\nRESOURCES\r\nMutationObserver (AttrValProxy): https://developer.mozilla.org/en-US/docs/Web/API/MutationObserver\r\nDocumentFragment (Preparations): https://developer.mozilla.org/en-US/docs/Web/API/DocumentFragment\r\nShodowDOM: https://developer.mozilla.org/en-US/docs/Web/Web_Components/Using_shadow_DOM\r\n================================================================================================================================ */\r\n","\r\nexport { Vertex as V } from './core';\r\nexport { Element, Attribute, Pipe, Service } from './core';\r\nexport { observe, observee, observer, element, attr, listener, message } from './core';\r\n","\r\ninterface IObserver {\r\n    update(state?: any): any;\r\n}\r\n\r\n/**\r\n * @deviations \r\n *  * @param #this: key\r\n *  *   * Demarcates a given datum to use as an instance's \"state\".\r\n *  * @param #this: observation\r\n *  *   * Provides convenience for getting an instance's state based upon `key`.\r\n *  *   * @reasoning\r\n *  *   *   * The key-name `state` is common between problem-domains; as so, objects such as an Address may \r\n *  *   *   * naturally encapsulate a datum named `state`. This allows the subclass to override `get key() {}` \r\n *  *   *   * to provide that of their own. The words \"key\" & \"observation\" are assumed to \r\n *  *   *   * be less common than \"state\", and preferred over [modified] words like \"$state\". In the case\r\n *  *   *   * that `this` is to be returned as \"state\", omitting `key` from the constructor provides the\r\n *  *   *   * implementor opportunity to define `get undefined() { return this; }` (accommodated by setter)\r\n *  *   *   * because, in which case,\r\n *  *   *   * `get observation() { return this[this.key]; }`\r\n *  *   *   * `===`\r\n *  *   *   * `get observation() { return this.undefined; }`\r\n *  *   *   * `===`\r\n *  *   *   * `get undefined() { return this; }`\r\n *  * @param #attach(): notify\r\n *  *   *   Type: Boolean\r\n *  *   *   Allows for any given Observer to declare whether or not it's `update()` method should be invoked\r\n *  *   *   upon attachment, in order to obtain the Subject's current state.\r\n */\r\nclass Subject {\r\n    private observers: IObserver[] = [ ];\r\n    get observation() { return this[this.key]; }  // (aliases Observer Pattern \"state\" datum) uses given datum for state\r\n    set observation(value) { this[this.key] = value; this.notify(); }  // manually sets state & notifies observers\r\n    \r\n    constructor(private key?: any) {}\r\n    \r\n    attach(observer: IObserver, notify?: boolean): Subject {\r\n        var { observers, observation } = this;\r\n        observers.push(observer);\r\n        if (notify) observer.update(observation);\r\n        return this;\r\n    }\r\n    \r\n    detach(observer: IObserver): Subject {\r\n        var { observers } = this;\r\n        for (let i = observers.length; i--;) if (observers[i] === observer) observers.splice(i, 1);\r\n        return this;\r\n    }\r\n    \r\n    notify(state?: any): Subject {\r\n        var { observers, observation } = this, state = state || observation;\r\n        for (let i = 0, len = observers.length; i < len; i++) observers[i].update(state);\r\n        return this;\r\n    }\r\n    \r\n}\r\n\r\nexport { Subject, IObserver };\r\n","\"use strict\";\n\nvar isOldIE = function isOldIE() {\n  var memo;\n  return function memorize() {\n    if (typeof memo === 'undefined') {\n      // Test for IE <= 9 as proposed by Browserhacks\n      // @see http://browserhacks.com/#hack-e71d8692f65334173fee715c222cb805\n      // Tests for existence of standard globals is to allow style-loader\n      // to operate correctly into non-standard environments\n      // @see https://github.com/webpack-contrib/style-loader/issues/177\n      memo = Boolean(window && document && document.all && !window.atob);\n    }\n\n    return memo;\n  };\n}();\n\nvar getTarget = function getTarget() {\n  var memo = {};\n  return function memorize(target) {\n    if (typeof memo[target] === 'undefined') {\n      var styleTarget = document.querySelector(target); // Special case to return head of iframe instead of iframe itself\n\n      if (window.HTMLIFrameElement && styleTarget instanceof window.HTMLIFrameElement) {\n        try {\n          // This will throw an exception if access to iframe is blocked\n          // due to cross-origin restrictions\n          styleTarget = styleTarget.contentDocument.head;\n        } catch (e) {\n          // istanbul ignore next\n          styleTarget = null;\n        }\n      }\n\n      memo[target] = styleTarget;\n    }\n\n    return memo[target];\n  };\n}();\n\nvar stylesInDom = {};\n\nfunction modulesToDom(moduleId, list, options) {\n  for (var i = 0; i < list.length; i++) {\n    var part = {\n      css: list[i][1],\n      media: list[i][2],\n      sourceMap: list[i][3]\n    };\n\n    if (stylesInDom[moduleId][i]) {\n      stylesInDom[moduleId][i](part);\n    } else {\n      stylesInDom[moduleId].push(addStyle(part, options));\n    }\n  }\n}\n\nfunction insertStyleElement(options) {\n  var style = document.createElement('style');\n  var attributes = options.attributes || {};\n\n  if (typeof attributes.nonce === 'undefined') {\n    var nonce = typeof __webpack_nonce__ !== 'undefined' ? __webpack_nonce__ : null;\n\n    if (nonce) {\n      attributes.nonce = nonce;\n    }\n  }\n\n  Object.keys(attributes).forEach(function (key) {\n    style.setAttribute(key, attributes[key]);\n  });\n\n  if (typeof options.insert === 'function') {\n    options.insert(style);\n  } else {\n    var target = getTarget(options.insert || 'head');\n\n    if (!target) {\n      throw new Error(\"Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.\");\n    }\n\n    target.appendChild(style);\n  }\n\n  return style;\n}\n\nfunction removeStyleElement(style) {\n  // istanbul ignore if\n  if (style.parentNode === null) {\n    return false;\n  }\n\n  style.parentNode.removeChild(style);\n}\n/* istanbul ignore next  */\n\n\nvar replaceText = function replaceText() {\n  var textStore = [];\n  return function replace(index, replacement) {\n    textStore[index] = replacement;\n    return textStore.filter(Boolean).join('\\n');\n  };\n}();\n\nfunction applyToSingletonTag(style, index, remove, obj) {\n  var css = remove ? '' : obj.css; // For old IE\n\n  /* istanbul ignore if  */\n\n  if (style.styleSheet) {\n    style.styleSheet.cssText = replaceText(index, css);\n  } else {\n    var cssNode = document.createTextNode(css);\n    var childNodes = style.childNodes;\n\n    if (childNodes[index]) {\n      style.removeChild(childNodes[index]);\n    }\n\n    if (childNodes.length) {\n      style.insertBefore(cssNode, childNodes[index]);\n    } else {\n      style.appendChild(cssNode);\n    }\n  }\n}\n\nfunction applyToTag(style, options, obj) {\n  var css = obj.css;\n  var media = obj.media;\n  var sourceMap = obj.sourceMap;\n\n  if (media) {\n    style.setAttribute('media', media);\n  } else {\n    style.removeAttribute('media');\n  }\n\n  if (sourceMap && btoa) {\n    css += \"\\n/*# sourceMappingURL=data:application/json;base64,\".concat(btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))), \" */\");\n  } // For old IE\n\n  /* istanbul ignore if  */\n\n\n  if (style.styleSheet) {\n    style.styleSheet.cssText = css;\n  } else {\n    while (style.firstChild) {\n      style.removeChild(style.firstChild);\n    }\n\n    style.appendChild(document.createTextNode(css));\n  }\n}\n\nvar singleton = null;\nvar singletonCounter = 0;\n\nfunction addStyle(obj, options) {\n  var style;\n  var update;\n  var remove;\n\n  if (options.singleton) {\n    var styleIndex = singletonCounter++;\n    style = singleton || (singleton = insertStyleElement(options));\n    update = applyToSingletonTag.bind(null, style, styleIndex, false);\n    remove = applyToSingletonTag.bind(null, style, styleIndex, true);\n  } else {\n    style = insertStyleElement(options);\n    update = applyToTag.bind(null, style, options);\n\n    remove = function remove() {\n      removeStyleElement(style);\n    };\n  }\n\n  update(obj);\n  return function updateStyle(newObj) {\n    if (newObj) {\n      if (newObj.css === obj.css && newObj.media === obj.media && newObj.sourceMap === obj.sourceMap) {\n        return;\n      }\n\n      update(obj = newObj);\n    } else {\n      remove();\n    }\n  };\n}\n\nmodule.exports = function (moduleId, list, options) {\n  options = options || {}; // Force single-tag solution on IE6-9, which has a hard limit on the # of <style>\n  // tags it will allow on a page\n\n  if (!options.singleton && typeof options.singleton !== 'boolean') {\n    options.singleton = isOldIE();\n  }\n\n  moduleId = options.base ? moduleId + options.base : moduleId;\n  list = list || [];\n\n  if (!stylesInDom[moduleId]) {\n    stylesInDom[moduleId] = [];\n  }\n\n  modulesToDom(moduleId, list, options);\n  return function update(newList) {\n    newList = newList || [];\n\n    if (Object.prototype.toString.call(newList) !== '[object Array]') {\n      return;\n    }\n\n    if (!stylesInDom[moduleId]) {\n      stylesInDom[moduleId] = [];\n    }\n\n    modulesToDom(moduleId, newList, options);\n\n    for (var j = newList.length; j < stylesInDom[moduleId].length; j++) {\n      stylesInDom[moduleId][j]();\n    }\n\n    stylesInDom[moduleId].length = newList.length;\n\n    if (stylesInDom[moduleId].length === 0) {\n      delete stylesInDom[moduleId];\n    }\n  };\n};","\"use strict\";\n\n/*\n  MIT License http://www.opensource.org/licenses/mit-license.php\n  Author Tobias Koppers @sokra\n*/\n// css base code, injected by the css-loader\n// eslint-disable-next-line func-names\nmodule.exports = function (useSourceMap) {\n  var list = []; // return the list of modules as css string\n\n  list.toString = function toString() {\n    return this.map(function (item) {\n      var content = cssWithMappingToString(item, useSourceMap);\n\n      if (item[2]) {\n        return \"@media \".concat(item[2], \" {\").concat(content, \"}\");\n      }\n\n      return content;\n    }).join('');\n  }; // import a list of modules into the list\n  // eslint-disable-next-line func-names\n\n\n  list.i = function (modules, mediaQuery) {\n    if (typeof modules === 'string') {\n      // eslint-disable-next-line no-param-reassign\n      modules = [[null, modules, '']];\n    }\n\n    for (var i = 0; i < modules.length; i++) {\n      var item = [].concat(modules[i]);\n\n      if (mediaQuery) {\n        if (!item[2]) {\n          item[2] = mediaQuery;\n        } else {\n          item[2] = \"\".concat(mediaQuery, \" and \").concat(item[2]);\n        }\n      }\n\n      list.push(item);\n    }\n  };\n\n  return list;\n};\n\nfunction cssWithMappingToString(item, useSourceMap) {\n  var content = item[1] || ''; // eslint-disable-next-line prefer-destructuring\n\n  var cssMapping = item[3];\n\n  if (!cssMapping) {\n    return content;\n  }\n\n  if (useSourceMap && typeof btoa === 'function') {\n    var sourceMapping = toComment(cssMapping);\n    var sourceURLs = cssMapping.sources.map(function (source) {\n      return \"/*# sourceURL=\".concat(cssMapping.sourceRoot || '').concat(source, \" */\");\n    });\n    return [content].concat(sourceURLs).concat([sourceMapping]).join('\\n');\n  }\n\n  return [content].join('\\n');\n} // Adapted from convert-source-map (MIT)\n\n\nfunction toComment(sourceMap) {\n  // eslint-disable-next-line no-undef\n  var base64 = btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap))));\n  var data = \"sourceMappingURL=data:application/json;charset=utf-8;base64,\".concat(base64);\n  return \"/*# \".concat(data, \" */\");\n}","\r\nimport { Queue } from '@motorman/core/utilities/ds';\r\nimport { V } from '@motorman/vertices';\r\n// import { Element, attr, watch, bind, handle } from '@motorman/vertices/core/decorators';\r\nimport { Element, observe, element, attr, listener, message } from '@motorman/vertices/core/decorators';\r\nimport { Sandbox } from '../../../../../app/core';\r\nimport template from './modal.component.html';\r\n\r\nclass SingletonComponentRequest { constructor(options: any = {}) {} }  // MOCK/TEMP\r\n\r\nclass ModalRequest extends SingletonComponentRequest {\r\n    id: string = '';\r\n    template: string = '';  // <template id=\"selector\">\r\n    \r\n    constructor(options: any = {}) {\r\n        super(options);\r\n        var { id } = options;\r\n        this.id = id || this.id;\r\n        return this;\r\n    }\r\n    \r\n}\r\n\r\n@Element({ selector: 'v-modal' })\r\nclass ModalComponent {\r\n    active = 'YO!';\r\n    \r\n    constructor(private $: Sandbox) {\r\n        console.log(`@Element({ selector: 'v-modal' })`, $);\r\n        // comm.subscribe(comm.channels['ELEMENT:CREATED'], () => comm.publish(comm.channels['ELEMENT:TEMPLATE:FOUND'], template) );\r\n        // $.in($.channels['MODAL:REQUESTED']).subscribe(this.handleRequest);\r\n        // $.in($.channels['MODAL:DISMISSED']).subscribe(this.handleDismiss);\r\n        $.content.set(template);\r\n        setTimeout( () => $.publish('OUTPUT', { key: 'data-poop', value: 'turdz' }), (1000 * 5) );\r\n        // setTimeout( () => $.template.set('...loading...'), (1000 * 5) );\r\n        // setTimeout( () => $.template.set(template), (1000 * 8) );\r\n    }\r\n    \r\n    handleClique(e: Event, x, y) {\r\n        console.log('MODAL', x, y);\r\n        return false;\r\n    }\r\n    \r\n    // @message('LEFECYCLE:ELEMENT:CREATED') onConnected = () => this.comm.publish(this.comm.channels['ELEMENT:TEMPLATE:FOUND'], template);\r\n    // @message('ELEMENT:MUTATION:OBSERVED') handleMutation(e: CustomEvent) {\r\n    //     console.log('HANDLING MUTATION', e);\r\n    // }\r\n    \r\n    // private handleRequest = (e: CustomEvent) => {\r\n    //     var { $, requests } = this;\r\n    //     var { type, detail }: { type: string, detail: ModalRequest } = e;\r\n    //     requests.enqueue(detail);\r\n    //     $.publish($.channels['BACKDROP:REQUESTED'], { test: true });\r\n    // };\r\n    \r\n    // private handleDismiss = (e: CustomEvent) => {\r\n    //     var { $, requests } = this;\r\n    //     var { type, detail } = e;\r\n    //     console.log('@ ModalComponent', type, detail);\r\n    //     requests.dequeue();\r\n    // };\r\n    \r\n}\r\n\r\nexport { ModalComponent };\r\n","export default \"\\r\\n<div #container id=\\\"test\\\" class=\\\"vertices modal\\\">\\r\\n    <div class=\\\"id\\\" data-test>\\r\\n        ...\\r\\n        <slot name=\\\"some-slot\\\">PLACEHOLDER</slot>\\r\\n        <slot name=\\\"some-slot-x\\\">PLACEHOLDER-s-s-x</slot>\\r\\n        <slot name=\\\"some-slot\\\">PLACEHOLDER</slot>\\r\\n        <hr />\\r\\n        <span>A <slot>PLACEHOLDER-Y</slot></span>\\r\\n        <span>B <slot>PLACEHOLDER-Y</slot></span>\\r\\n    </div>\\r\\n    <div id=\\\"wrap\\\" class=\\\"modal container\\\" (click)=\\\"handleClique($event, active, 'other')\\\">\\r\\n        Modal is active: {{active}} {{test}}\\r\\n        <p><span><b>Bolder!</b><b>Boulder!</b></span></p>\\r\\n    </div>\\r\\n    <input id=\\\"{{item.id}}\\\" type=\\\"literal\\\" [value]=\\\"test\\\" {{key}}=\\\"{{value}}\\\" (input)=\\\"type($event)\\\" foreach=\\\"item of items\\\" />\\r\\n    <input id=\\\"xxx\\\" type=\\\"input\\\" value=\\\"test\\\" {{key}}=\\\"{{value}}\\\" (input)=\\\"type($event)\\\" />\\r\\n</div>\\r\\n<!-- My Comment has=\\\"attr\\\" -->\\r\\n<div class=\\\"another\\\">...</div>\\r\\n\";","var api = require(\"!../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../node_modules/css-loader/dist/cjs.js!../node_modules/sass-loader/dist/cjs.js!./main.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(module.id, content, options);\n\nvar exported = content.locals ? content.locals : {};\n\n\n\nmodule.exports = exported;","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \"body{background:#ddd}\\n\", \"\"]);\n// Exports\nmodule.exports = exports;\n","\r\nimport { Environment } from '@motorman/models';\r\n\r\nvar environment = new Environment({\r\n    type: 'PROD',\r\n});\r\n\r\nexport { environment };\r\n","\r\nclass Environment {\r\n    type: string = '';\r\n    get production() { return !!{ 'production': true }[ this.type ]; }\r\n    \r\n    constructor(options: any = { }) {\r\n        var { type } = options;\r\n        \r\n        this.type = type || this.type;\r\n        \r\n        return this;\r\n    }\r\n    \r\n}\r\n\r\nexport { Environment };\r\n","\r\nclass Channels {\r\n    ['BACKDROP:REQUESTED'] = 'v://requested/backdrop';\r\n    ['BACKDROP:INSPECTED'] = 'v://inspected/backdrop';\r\n    ['BACKDROP:DISMISSED'] = 'v://dismissed/backdrop';\r\n    ['MODAL:REQUESTED'] = 'v://requested/modal';\r\n    ['MODAL:DISMISSED'] = 'v://dismissed/modal';\r\n}\r\n\r\nvar channels = new Channels();\r\nexport { Channels, channels };\r\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","/** PURE_IMPORTS_START  PURE_IMPORTS_END */\nexport function isFunction(x) {\n    return typeof x === 'function';\n}\n//# sourceMappingURL=isFunction.js.map\n","/** PURE_IMPORTS_START  PURE_IMPORTS_END */\nvar _enable_super_gross_mode_that_will_cause_bad_things = false;\nexport var config = {\n    Promise: undefined,\n    set useDeprecatedSynchronousErrorHandling(value) {\n        if (value) {\n            var error = /*@__PURE__*/ new Error();\n            /*@__PURE__*/ console.warn('DEPRECATED! RxJS was set to use deprecated synchronous error handling behavior by code at: \\n' + error.stack);\n        }\n        else if (_enable_super_gross_mode_that_will_cause_bad_things) {\n            /*@__PURE__*/ console.log('RxJS: Back to a better error behavior. Thank you. <3');\n        }\n        _enable_super_gross_mode_that_will_cause_bad_things = value;\n    },\n    get useDeprecatedSynchronousErrorHandling() {\n        return _enable_super_gross_mode_that_will_cause_bad_things;\n    },\n};\n//# sourceMappingURL=config.js.map\n","/** PURE_IMPORTS_START  PURE_IMPORTS_END */\nexport function hostReportError(err) {\n    setTimeout(function () { throw err; }, 0);\n}\n//# sourceMappingURL=hostReportError.js.map\n","/** PURE_IMPORTS_START _config,_util_hostReportError PURE_IMPORTS_END */\nimport { config } from './config';\nimport { hostReportError } from './util/hostReportError';\nexport var empty = {\n    closed: true,\n    next: function (value) { },\n    error: function (err) {\n        if (config.useDeprecatedSynchronousErrorHandling) {\n            throw err;\n        }\n        else {\n            hostReportError(err);\n        }\n    },\n    complete: function () { }\n};\n//# sourceMappingURL=Observer.js.map\n","/** PURE_IMPORTS_START  PURE_IMPORTS_END */\nexport var isArray = /*@__PURE__*/ (function () { return Array.isArray || (function (x) { return x && typeof x.length === 'number'; }); })();\n//# sourceMappingURL=isArray.js.map\n","/** PURE_IMPORTS_START  PURE_IMPORTS_END */\nvar UnsubscriptionErrorImpl = /*@__PURE__*/ (function () {\n    function UnsubscriptionErrorImpl(errors) {\n        Error.call(this);\n        this.message = errors ?\n            errors.length + \" errors occurred during unsubscription:\\n\" + errors.map(function (err, i) { return i + 1 + \") \" + err.toString(); }).join('\\n  ') : '';\n        this.name = 'UnsubscriptionError';\n        this.errors = errors;\n        return this;\n    }\n    UnsubscriptionErrorImpl.prototype = /*@__PURE__*/ Object.create(Error.prototype);\n    return UnsubscriptionErrorImpl;\n})();\nexport var UnsubscriptionError = UnsubscriptionErrorImpl;\n//# sourceMappingURL=UnsubscriptionError.js.map\n","/** PURE_IMPORTS_START _util_isArray,_util_isObject,_util_isFunction,_util_UnsubscriptionError PURE_IMPORTS_END */\nimport { isArray } from './util/isArray';\nimport { isObject } from './util/isObject';\nimport { isFunction } from './util/isFunction';\nimport { UnsubscriptionError } from './util/UnsubscriptionError';\nvar Subscription = /*@__PURE__*/ (function () {\n    function Subscription(unsubscribe) {\n        this.closed = false;\n        this._parentOrParents = null;\n        this._subscriptions = null;\n        if (unsubscribe) {\n            this._unsubscribe = unsubscribe;\n        }\n    }\n    Subscription.prototype.unsubscribe = function () {\n        var errors;\n        if (this.closed) {\n            return;\n        }\n        var _a = this, _parentOrParents = _a._parentOrParents, _unsubscribe = _a._unsubscribe, _subscriptions = _a._subscriptions;\n        this.closed = true;\n        this._parentOrParents = null;\n        this._subscriptions = null;\n        if (_parentOrParents instanceof Subscription) {\n            _parentOrParents.remove(this);\n        }\n        else if (_parentOrParents !== null) {\n            for (var index = 0; index < _parentOrParents.length; ++index) {\n                var parent_1 = _parentOrParents[index];\n                parent_1.remove(this);\n            }\n        }\n        if (isFunction(_unsubscribe)) {\n            try {\n                _unsubscribe.call(this);\n            }\n            catch (e) {\n                errors = e instanceof UnsubscriptionError ? flattenUnsubscriptionErrors(e.errors) : [e];\n            }\n        }\n        if (isArray(_subscriptions)) {\n            var index = -1;\n            var len = _subscriptions.length;\n            while (++index < len) {\n                var sub = _subscriptions[index];\n                if (isObject(sub)) {\n                    try {\n                        sub.unsubscribe();\n                    }\n                    catch (e) {\n                        errors = errors || [];\n                        if (e instanceof UnsubscriptionError) {\n                            errors = errors.concat(flattenUnsubscriptionErrors(e.errors));\n                        }\n                        else {\n                            errors.push(e);\n                        }\n                    }\n                }\n            }\n        }\n        if (errors) {\n            throw new UnsubscriptionError(errors);\n        }\n    };\n    Subscription.prototype.add = function (teardown) {\n        var subscription = teardown;\n        if (!teardown) {\n            return Subscription.EMPTY;\n        }\n        switch (typeof teardown) {\n            case 'function':\n                subscription = new Subscription(teardown);\n            case 'object':\n                if (subscription === this || subscription.closed || typeof subscription.unsubscribe !== 'function') {\n                    return subscription;\n                }\n                else if (this.closed) {\n                    subscription.unsubscribe();\n                    return subscription;\n                }\n                else if (!(subscription instanceof Subscription)) {\n                    var tmp = subscription;\n                    subscription = new Subscription();\n                    subscription._subscriptions = [tmp];\n                }\n                break;\n            default: {\n                throw new Error('unrecognized teardown ' + teardown + ' added to Subscription.');\n            }\n        }\n        var _parentOrParents = subscription._parentOrParents;\n        if (_parentOrParents === null) {\n            subscription._parentOrParents = this;\n        }\n        else if (_parentOrParents instanceof Subscription) {\n            if (_parentOrParents === this) {\n                return subscription;\n            }\n            subscription._parentOrParents = [_parentOrParents, this];\n        }\n        else if (_parentOrParents.indexOf(this) === -1) {\n            _parentOrParents.push(this);\n        }\n        else {\n            return subscription;\n        }\n        var subscriptions = this._subscriptions;\n        if (subscriptions === null) {\n            this._subscriptions = [subscription];\n        }\n        else {\n            subscriptions.push(subscription);\n        }\n        return subscription;\n    };\n    Subscription.prototype.remove = function (subscription) {\n        var subscriptions = this._subscriptions;\n        if (subscriptions) {\n            var subscriptionIndex = subscriptions.indexOf(subscription);\n            if (subscriptionIndex !== -1) {\n                subscriptions.splice(subscriptionIndex, 1);\n            }\n        }\n    };\n    Subscription.EMPTY = (function (empty) {\n        empty.closed = true;\n        return empty;\n    }(new Subscription()));\n    return Subscription;\n}());\nexport { Subscription };\nfunction flattenUnsubscriptionErrors(errors) {\n    return errors.reduce(function (errs, err) { return errs.concat((err instanceof UnsubscriptionError) ? err.errors : err); }, []);\n}\n//# sourceMappingURL=Subscription.js.map\n","/** PURE_IMPORTS_START  PURE_IMPORTS_END */\nexport function isObject(x) {\n    return x !== null && typeof x === 'object';\n}\n//# sourceMappingURL=isObject.js.map\n","/** PURE_IMPORTS_START  PURE_IMPORTS_END */\nexport var rxSubscriber = /*@__PURE__*/ (function () {\n    return typeof Symbol === 'function'\n        ? /*@__PURE__*/ Symbol('rxSubscriber')\n        : '@@rxSubscriber_' + /*@__PURE__*/ Math.random();\n})();\nexport var $$rxSubscriber = rxSubscriber;\n//# sourceMappingURL=rxSubscriber.js.map\n","/** PURE_IMPORTS_START tslib,_util_isFunction,_Observer,_Subscription,_internal_symbol_rxSubscriber,_config,_util_hostReportError PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { isFunction } from './util/isFunction';\nimport { empty as emptyObserver } from './Observer';\nimport { Subscription } from './Subscription';\nimport { rxSubscriber as rxSubscriberSymbol } from '../internal/symbol/rxSubscriber';\nimport { config } from './config';\nimport { hostReportError } from './util/hostReportError';\nvar Subscriber = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(Subscriber, _super);\n    function Subscriber(destinationOrNext, error, complete) {\n        var _this = _super.call(this) || this;\n        _this.syncErrorValue = null;\n        _this.syncErrorThrown = false;\n        _this.syncErrorThrowable = false;\n        _this.isStopped = false;\n        switch (arguments.length) {\n            case 0:\n                _this.destination = emptyObserver;\n                break;\n            case 1:\n                if (!destinationOrNext) {\n                    _this.destination = emptyObserver;\n                    break;\n                }\n                if (typeof destinationOrNext === 'object') {\n                    if (destinationOrNext instanceof Subscriber) {\n                        _this.syncErrorThrowable = destinationOrNext.syncErrorThrowable;\n                        _this.destination = destinationOrNext;\n                        destinationOrNext.add(_this);\n                    }\n                    else {\n                        _this.syncErrorThrowable = true;\n                        _this.destination = new SafeSubscriber(_this, destinationOrNext);\n                    }\n                    break;\n                }\n            default:\n                _this.syncErrorThrowable = true;\n                _this.destination = new SafeSubscriber(_this, destinationOrNext, error, complete);\n                break;\n        }\n        return _this;\n    }\n    Subscriber.prototype[rxSubscriberSymbol] = function () { return this; };\n    Subscriber.create = function (next, error, complete) {\n        var subscriber = new Subscriber(next, error, complete);\n        subscriber.syncErrorThrowable = false;\n        return subscriber;\n    };\n    Subscriber.prototype.next = function (value) {\n        if (!this.isStopped) {\n            this._next(value);\n        }\n    };\n    Subscriber.prototype.error = function (err) {\n        if (!this.isStopped) {\n            this.isStopped = true;\n            this._error(err);\n        }\n    };\n    Subscriber.prototype.complete = function () {\n        if (!this.isStopped) {\n            this.isStopped = true;\n            this._complete();\n        }\n    };\n    Subscriber.prototype.unsubscribe = function () {\n        if (this.closed) {\n            return;\n        }\n        this.isStopped = true;\n        _super.prototype.unsubscribe.call(this);\n    };\n    Subscriber.prototype._next = function (value) {\n        this.destination.next(value);\n    };\n    Subscriber.prototype._error = function (err) {\n        this.destination.error(err);\n        this.unsubscribe();\n    };\n    Subscriber.prototype._complete = function () {\n        this.destination.complete();\n        this.unsubscribe();\n    };\n    Subscriber.prototype._unsubscribeAndRecycle = function () {\n        var _parentOrParents = this._parentOrParents;\n        this._parentOrParents = null;\n        this.unsubscribe();\n        this.closed = false;\n        this.isStopped = false;\n        this._parentOrParents = _parentOrParents;\n        return this;\n    };\n    return Subscriber;\n}(Subscription));\nexport { Subscriber };\nvar SafeSubscriber = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(SafeSubscriber, _super);\n    function SafeSubscriber(_parentSubscriber, observerOrNext, error, complete) {\n        var _this = _super.call(this) || this;\n        _this._parentSubscriber = _parentSubscriber;\n        var next;\n        var context = _this;\n        if (isFunction(observerOrNext)) {\n            next = observerOrNext;\n        }\n        else if (observerOrNext) {\n            next = observerOrNext.next;\n            error = observerOrNext.error;\n            complete = observerOrNext.complete;\n            if (observerOrNext !== emptyObserver) {\n                context = Object.create(observerOrNext);\n                if (isFunction(context.unsubscribe)) {\n                    _this.add(context.unsubscribe.bind(context));\n                }\n                context.unsubscribe = _this.unsubscribe.bind(_this);\n            }\n        }\n        _this._context = context;\n        _this._next = next;\n        _this._error = error;\n        _this._complete = complete;\n        return _this;\n    }\n    SafeSubscriber.prototype.next = function (value) {\n        if (!this.isStopped && this._next) {\n            var _parentSubscriber = this._parentSubscriber;\n            if (!config.useDeprecatedSynchronousErrorHandling || !_parentSubscriber.syncErrorThrowable) {\n                this.__tryOrUnsub(this._next, value);\n            }\n            else if (this.__tryOrSetError(_parentSubscriber, this._next, value)) {\n                this.unsubscribe();\n            }\n        }\n    };\n    SafeSubscriber.prototype.error = function (err) {\n        if (!this.isStopped) {\n            var _parentSubscriber = this._parentSubscriber;\n            var useDeprecatedSynchronousErrorHandling = config.useDeprecatedSynchronousErrorHandling;\n            if (this._error) {\n                if (!useDeprecatedSynchronousErrorHandling || !_parentSubscriber.syncErrorThrowable) {\n                    this.__tryOrUnsub(this._error, err);\n                    this.unsubscribe();\n                }\n                else {\n                    this.__tryOrSetError(_parentSubscriber, this._error, err);\n                    this.unsubscribe();\n                }\n            }\n            else if (!_parentSubscriber.syncErrorThrowable) {\n                this.unsubscribe();\n                if (useDeprecatedSynchronousErrorHandling) {\n                    throw err;\n                }\n                hostReportError(err);\n            }\n            else {\n                if (useDeprecatedSynchronousErrorHandling) {\n                    _parentSubscriber.syncErrorValue = err;\n                    _parentSubscriber.syncErrorThrown = true;\n                }\n                else {\n                    hostReportError(err);\n                }\n                this.unsubscribe();\n            }\n        }\n    };\n    SafeSubscriber.prototype.complete = function () {\n        var _this = this;\n        if (!this.isStopped) {\n            var _parentSubscriber = this._parentSubscriber;\n            if (this._complete) {\n                var wrappedComplete = function () { return _this._complete.call(_this._context); };\n                if (!config.useDeprecatedSynchronousErrorHandling || !_parentSubscriber.syncErrorThrowable) {\n                    this.__tryOrUnsub(wrappedComplete);\n                    this.unsubscribe();\n                }\n                else {\n                    this.__tryOrSetError(_parentSubscriber, wrappedComplete);\n                    this.unsubscribe();\n                }\n            }\n            else {\n                this.unsubscribe();\n            }\n        }\n    };\n    SafeSubscriber.prototype.__tryOrUnsub = function (fn, value) {\n        try {\n            fn.call(this._context, value);\n        }\n        catch (err) {\n            this.unsubscribe();\n            if (config.useDeprecatedSynchronousErrorHandling) {\n                throw err;\n            }\n            else {\n                hostReportError(err);\n            }\n        }\n    };\n    SafeSubscriber.prototype.__tryOrSetError = function (parent, fn, value) {\n        if (!config.useDeprecatedSynchronousErrorHandling) {\n            throw new Error('bad call');\n        }\n        try {\n            fn.call(this._context, value);\n        }\n        catch (err) {\n            if (config.useDeprecatedSynchronousErrorHandling) {\n                parent.syncErrorValue = err;\n                parent.syncErrorThrown = true;\n                return true;\n            }\n            else {\n                hostReportError(err);\n                return true;\n            }\n        }\n        return false;\n    };\n    SafeSubscriber.prototype._unsubscribe = function () {\n        var _parentSubscriber = this._parentSubscriber;\n        this._context = null;\n        this._parentSubscriber = null;\n        _parentSubscriber.unsubscribe();\n    };\n    return SafeSubscriber;\n}(Subscriber));\nexport { SafeSubscriber };\n//# sourceMappingURL=Subscriber.js.map\n","/** PURE_IMPORTS_START  PURE_IMPORTS_END */\nexport var observable = /*@__PURE__*/ (function () { return typeof Symbol === 'function' && Symbol.observable || '@@observable'; })();\n//# sourceMappingURL=observable.js.map\n","/** PURE_IMPORTS_START  PURE_IMPORTS_END */\nexport function noop() { }\n//# sourceMappingURL=noop.js.map\n","/** PURE_IMPORTS_START _noop PURE_IMPORTS_END */\nimport { noop } from './noop';\nexport function pipe() {\n    var fns = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        fns[_i] = arguments[_i];\n    }\n    return pipeFromArray(fns);\n}\nexport function pipeFromArray(fns) {\n    if (!fns) {\n        return noop;\n    }\n    if (fns.length === 1) {\n        return fns[0];\n    }\n    return function piped(input) {\n        return fns.reduce(function (prev, fn) { return fn(prev); }, input);\n    };\n}\n//# sourceMappingURL=pipe.js.map\n","/** PURE_IMPORTS_START _util_canReportError,_util_toSubscriber,_symbol_observable,_util_pipe,_config PURE_IMPORTS_END */\nimport { canReportError } from './util/canReportError';\nimport { toSubscriber } from './util/toSubscriber';\nimport { observable as Symbol_observable } from './symbol/observable';\nimport { pipeFromArray } from './util/pipe';\nimport { config } from './config';\nvar Observable = /*@__PURE__*/ (function () {\n    function Observable(subscribe) {\n        this._isScalar = false;\n        if (subscribe) {\n            this._subscribe = subscribe;\n        }\n    }\n    Observable.prototype.lift = function (operator) {\n        var observable = new Observable();\n        observable.source = this;\n        observable.operator = operator;\n        return observable;\n    };\n    Observable.prototype.subscribe = function (observerOrNext, error, complete) {\n        var operator = this.operator;\n        var sink = toSubscriber(observerOrNext, error, complete);\n        if (operator) {\n            sink.add(operator.call(sink, this.source));\n        }\n        else {\n            sink.add(this.source || (config.useDeprecatedSynchronousErrorHandling && !sink.syncErrorThrowable) ?\n                this._subscribe(sink) :\n                this._trySubscribe(sink));\n        }\n        if (config.useDeprecatedSynchronousErrorHandling) {\n            if (sink.syncErrorThrowable) {\n                sink.syncErrorThrowable = false;\n                if (sink.syncErrorThrown) {\n                    throw sink.syncErrorValue;\n                }\n            }\n        }\n        return sink;\n    };\n    Observable.prototype._trySubscribe = function (sink) {\n        try {\n            return this._subscribe(sink);\n        }\n        catch (err) {\n            if (config.useDeprecatedSynchronousErrorHandling) {\n                sink.syncErrorThrown = true;\n                sink.syncErrorValue = err;\n            }\n            if (canReportError(sink)) {\n                sink.error(err);\n            }\n            else {\n                console.warn(err);\n            }\n        }\n    };\n    Observable.prototype.forEach = function (next, promiseCtor) {\n        var _this = this;\n        promiseCtor = getPromiseCtor(promiseCtor);\n        return new promiseCtor(function (resolve, reject) {\n            var subscription;\n            subscription = _this.subscribe(function (value) {\n                try {\n                    next(value);\n                }\n                catch (err) {\n                    reject(err);\n                    if (subscription) {\n                        subscription.unsubscribe();\n                    }\n                }\n            }, reject, resolve);\n        });\n    };\n    Observable.prototype._subscribe = function (subscriber) {\n        var source = this.source;\n        return source && source.subscribe(subscriber);\n    };\n    Observable.prototype[Symbol_observable] = function () {\n        return this;\n    };\n    Observable.prototype.pipe = function () {\n        var operations = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            operations[_i] = arguments[_i];\n        }\n        if (operations.length === 0) {\n            return this;\n        }\n        return pipeFromArray(operations)(this);\n    };\n    Observable.prototype.toPromise = function (promiseCtor) {\n        var _this = this;\n        promiseCtor = getPromiseCtor(promiseCtor);\n        return new promiseCtor(function (resolve, reject) {\n            var value;\n            _this.subscribe(function (x) { return value = x; }, function (err) { return reject(err); }, function () { return resolve(value); });\n        });\n    };\n    Observable.create = function (subscribe) {\n        return new Observable(subscribe);\n    };\n    return Observable;\n}());\nexport { Observable };\nfunction getPromiseCtor(promiseCtor) {\n    if (!promiseCtor) {\n        promiseCtor = config.Promise || Promise;\n    }\n    if (!promiseCtor) {\n        throw new Error('no Promise impl found');\n    }\n    return promiseCtor;\n}\n//# sourceMappingURL=Observable.js.map\n","/** PURE_IMPORTS_START _Subscriber,_symbol_rxSubscriber,_Observer PURE_IMPORTS_END */\nimport { Subscriber } from '../Subscriber';\nimport { rxSubscriber as rxSubscriberSymbol } from '../symbol/rxSubscriber';\nimport { empty as emptyObserver } from '../Observer';\nexport function toSubscriber(nextOrObserver, error, complete) {\n    if (nextOrObserver) {\n        if (nextOrObserver instanceof Subscriber) {\n            return nextOrObserver;\n        }\n        if (nextOrObserver[rxSubscriberSymbol]) {\n            return nextOrObserver[rxSubscriberSymbol]();\n        }\n    }\n    if (!nextOrObserver && !error && !complete) {\n        return new Subscriber(emptyObserver);\n    }\n    return new Subscriber(nextOrObserver, error, complete);\n}\n//# sourceMappingURL=toSubscriber.js.map\n","/** PURE_IMPORTS_START _Subscriber PURE_IMPORTS_END */\nimport { Subscriber } from '../Subscriber';\nexport function canReportError(observer) {\n    while (observer) {\n        var _a = observer, closed_1 = _a.closed, destination = _a.destination, isStopped = _a.isStopped;\n        if (closed_1 || isStopped) {\n            return false;\n        }\n        else if (destination && destination instanceof Subscriber) {\n            observer = destination;\n        }\n        else {\n            observer = null;\n        }\n    }\n    return true;\n}\n//# sourceMappingURL=canReportError.js.map\n","/** PURE_IMPORTS_START  PURE_IMPORTS_END */\nvar ObjectUnsubscribedErrorImpl = /*@__PURE__*/ (function () {\n    function ObjectUnsubscribedErrorImpl() {\n        Error.call(this);\n        this.message = 'object unsubscribed';\n        this.name = 'ObjectUnsubscribedError';\n        return this;\n    }\n    ObjectUnsubscribedErrorImpl.prototype = /*@__PURE__*/ Object.create(Error.prototype);\n    return ObjectUnsubscribedErrorImpl;\n})();\nexport var ObjectUnsubscribedError = ObjectUnsubscribedErrorImpl;\n//# sourceMappingURL=ObjectUnsubscribedError.js.map\n","/** PURE_IMPORTS_START tslib,_Subscription PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { Subscription } from './Subscription';\nvar SubjectSubscription = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(SubjectSubscription, _super);\n    function SubjectSubscription(subject, subscriber) {\n        var _this = _super.call(this) || this;\n        _this.subject = subject;\n        _this.subscriber = subscriber;\n        _this.closed = false;\n        return _this;\n    }\n    SubjectSubscription.prototype.unsubscribe = function () {\n        if (this.closed) {\n            return;\n        }\n        this.closed = true;\n        var subject = this.subject;\n        var observers = subject.observers;\n        this.subject = null;\n        if (!observers || observers.length === 0 || subject.isStopped || subject.closed) {\n            return;\n        }\n        var subscriberIndex = observers.indexOf(this.subscriber);\n        if (subscriberIndex !== -1) {\n            observers.splice(subscriberIndex, 1);\n        }\n    };\n    return SubjectSubscription;\n}(Subscription));\nexport { SubjectSubscription };\n//# sourceMappingURL=SubjectSubscription.js.map\n","/** PURE_IMPORTS_START tslib,_Observable,_Subscriber,_Subscription,_util_ObjectUnsubscribedError,_SubjectSubscription,_internal_symbol_rxSubscriber PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { Observable } from './Observable';\nimport { Subscriber } from './Subscriber';\nimport { Subscription } from './Subscription';\nimport { ObjectUnsubscribedError } from './util/ObjectUnsubscribedError';\nimport { SubjectSubscription } from './SubjectSubscription';\nimport { rxSubscriber as rxSubscriberSymbol } from '../internal/symbol/rxSubscriber';\nvar SubjectSubscriber = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(SubjectSubscriber, _super);\n    function SubjectSubscriber(destination) {\n        var _this = _super.call(this, destination) || this;\n        _this.destination = destination;\n        return _this;\n    }\n    return SubjectSubscriber;\n}(Subscriber));\nexport { SubjectSubscriber };\nvar Subject = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(Subject, _super);\n    function Subject() {\n        var _this = _super.call(this) || this;\n        _this.observers = [];\n        _this.closed = false;\n        _this.isStopped = false;\n        _this.hasError = false;\n        _this.thrownError = null;\n        return _this;\n    }\n    Subject.prototype[rxSubscriberSymbol] = function () {\n        return new SubjectSubscriber(this);\n    };\n    Subject.prototype.lift = function (operator) {\n        var subject = new AnonymousSubject(this, this);\n        subject.operator = operator;\n        return subject;\n    };\n    Subject.prototype.next = function (value) {\n        if (this.closed) {\n            throw new ObjectUnsubscribedError();\n        }\n        if (!this.isStopped) {\n            var observers = this.observers;\n            var len = observers.length;\n            var copy = observers.slice();\n            for (var i = 0; i < len; i++) {\n                copy[i].next(value);\n            }\n        }\n    };\n    Subject.prototype.error = function (err) {\n        if (this.closed) {\n            throw new ObjectUnsubscribedError();\n        }\n        this.hasError = true;\n        this.thrownError = err;\n        this.isStopped = true;\n        var observers = this.observers;\n        var len = observers.length;\n        var copy = observers.slice();\n        for (var i = 0; i < len; i++) {\n            copy[i].error(err);\n        }\n        this.observers.length = 0;\n    };\n    Subject.prototype.complete = function () {\n        if (this.closed) {\n            throw new ObjectUnsubscribedError();\n        }\n        this.isStopped = true;\n        var observers = this.observers;\n        var len = observers.length;\n        var copy = observers.slice();\n        for (var i = 0; i < len; i++) {\n            copy[i].complete();\n        }\n        this.observers.length = 0;\n    };\n    Subject.prototype.unsubscribe = function () {\n        this.isStopped = true;\n        this.closed = true;\n        this.observers = null;\n    };\n    Subject.prototype._trySubscribe = function (subscriber) {\n        if (this.closed) {\n            throw new ObjectUnsubscribedError();\n        }\n        else {\n            return _super.prototype._trySubscribe.call(this, subscriber);\n        }\n    };\n    Subject.prototype._subscribe = function (subscriber) {\n        if (this.closed) {\n            throw new ObjectUnsubscribedError();\n        }\n        else if (this.hasError) {\n            subscriber.error(this.thrownError);\n            return Subscription.EMPTY;\n        }\n        else if (this.isStopped) {\n            subscriber.complete();\n            return Subscription.EMPTY;\n        }\n        else {\n            this.observers.push(subscriber);\n            return new SubjectSubscription(this, subscriber);\n        }\n    };\n    Subject.prototype.asObservable = function () {\n        var observable = new Observable();\n        observable.source = this;\n        return observable;\n    };\n    Subject.create = function (destination, source) {\n        return new AnonymousSubject(destination, source);\n    };\n    return Subject;\n}(Observable));\nexport { Subject };\nvar AnonymousSubject = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(AnonymousSubject, _super);\n    function AnonymousSubject(destination, source) {\n        var _this = _super.call(this) || this;\n        _this.destination = destination;\n        _this.source = source;\n        return _this;\n    }\n    AnonymousSubject.prototype.next = function (value) {\n        var destination = this.destination;\n        if (destination && destination.next) {\n            destination.next(value);\n        }\n    };\n    AnonymousSubject.prototype.error = function (err) {\n        var destination = this.destination;\n        if (destination && destination.error) {\n            this.destination.error(err);\n        }\n    };\n    AnonymousSubject.prototype.complete = function () {\n        var destination = this.destination;\n        if (destination && destination.complete) {\n            this.destination.complete();\n        }\n    };\n    AnonymousSubject.prototype._subscribe = function (subscriber) {\n        var source = this.source;\n        if (source) {\n            return this.source.subscribe(subscriber);\n        }\n        else {\n            return Subscription.EMPTY;\n        }\n    };\n    return AnonymousSubject;\n}(Subject));\nexport { AnonymousSubject };\n//# sourceMappingURL=Subject.js.map\n","/** PURE_IMPORTS_START tslib,_AsyncAction PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { AsyncAction } from './AsyncAction';\nvar QueueAction = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(QueueAction, _super);\n    function QueueAction(scheduler, work) {\n        var _this = _super.call(this, scheduler, work) || this;\n        _this.scheduler = scheduler;\n        _this.work = work;\n        return _this;\n    }\n    QueueAction.prototype.schedule = function (state, delay) {\n        if (delay === void 0) {\n            delay = 0;\n        }\n        if (delay > 0) {\n            return _super.prototype.schedule.call(this, state, delay);\n        }\n        this.delay = delay;\n        this.state = state;\n        this.scheduler.flush(this);\n        return this;\n    };\n    QueueAction.prototype.execute = function (state, delay) {\n        return (delay > 0 || this.closed) ?\n            _super.prototype.execute.call(this, state, delay) :\n            this._execute(state, delay);\n    };\n    QueueAction.prototype.requestAsyncId = function (scheduler, id, delay) {\n        if (delay === void 0) {\n            delay = 0;\n        }\n        if ((delay !== null && delay > 0) || (delay === null && this.delay > 0)) {\n            return _super.prototype.requestAsyncId.call(this, scheduler, id, delay);\n        }\n        return scheduler.flush(this);\n    };\n    return QueueAction;\n}(AsyncAction));\nexport { QueueAction };\n//# sourceMappingURL=QueueAction.js.map\n","/** PURE_IMPORTS_START tslib,_Action PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { Action } from './Action';\nvar AsyncAction = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(AsyncAction, _super);\n    function AsyncAction(scheduler, work) {\n        var _this = _super.call(this, scheduler, work) || this;\n        _this.scheduler = scheduler;\n        _this.work = work;\n        _this.pending = false;\n        return _this;\n    }\n    AsyncAction.prototype.schedule = function (state, delay) {\n        if (delay === void 0) {\n            delay = 0;\n        }\n        if (this.closed) {\n            return this;\n        }\n        this.state = state;\n        var id = this.id;\n        var scheduler = this.scheduler;\n        if (id != null) {\n            this.id = this.recycleAsyncId(scheduler, id, delay);\n        }\n        this.pending = true;\n        this.delay = delay;\n        this.id = this.id || this.requestAsyncId(scheduler, this.id, delay);\n        return this;\n    };\n    AsyncAction.prototype.requestAsyncId = function (scheduler, id, delay) {\n        if (delay === void 0) {\n            delay = 0;\n        }\n        return setInterval(scheduler.flush.bind(scheduler, this), delay);\n    };\n    AsyncAction.prototype.recycleAsyncId = function (scheduler, id, delay) {\n        if (delay === void 0) {\n            delay = 0;\n        }\n        if (delay !== null && this.delay === delay && this.pending === false) {\n            return id;\n        }\n        clearInterval(id);\n        return undefined;\n    };\n    AsyncAction.prototype.execute = function (state, delay) {\n        if (this.closed) {\n            return new Error('executing a cancelled action');\n        }\n        this.pending = false;\n        var error = this._execute(state, delay);\n        if (error) {\n            return error;\n        }\n        else if (this.pending === false && this.id != null) {\n            this.id = this.recycleAsyncId(this.scheduler, this.id, null);\n        }\n    };\n    AsyncAction.prototype._execute = function (state, delay) {\n        var errored = false;\n        var errorValue = undefined;\n        try {\n            this.work(state);\n        }\n        catch (e) {\n            errored = true;\n            errorValue = !!e && e || new Error(e);\n        }\n        if (errored) {\n            this.unsubscribe();\n            return errorValue;\n        }\n    };\n    AsyncAction.prototype._unsubscribe = function () {\n        var id = this.id;\n        var scheduler = this.scheduler;\n        var actions = scheduler.actions;\n        var index = actions.indexOf(this);\n        this.work = null;\n        this.state = null;\n        this.pending = false;\n        this.scheduler = null;\n        if (index !== -1) {\n            actions.splice(index, 1);\n        }\n        if (id != null) {\n            this.id = this.recycleAsyncId(scheduler, id, null);\n        }\n        this.delay = null;\n    };\n    return AsyncAction;\n}(Action));\nexport { AsyncAction };\n//# sourceMappingURL=AsyncAction.js.map\n","/** PURE_IMPORTS_START tslib,_Subscription PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { Subscription } from '../Subscription';\nvar Action = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(Action, _super);\n    function Action(scheduler, work) {\n        return _super.call(this) || this;\n    }\n    Action.prototype.schedule = function (state, delay) {\n        if (delay === void 0) {\n            delay = 0;\n        }\n        return this;\n    };\n    return Action;\n}(Subscription));\nexport { Action };\n//# sourceMappingURL=Action.js.map\n","var Scheduler = /*@__PURE__*/ (function () {\n    function Scheduler(SchedulerAction, now) {\n        if (now === void 0) {\n            now = Scheduler.now;\n        }\n        this.SchedulerAction = SchedulerAction;\n        this.now = now;\n    }\n    Scheduler.prototype.schedule = function (work, delay, state) {\n        if (delay === void 0) {\n            delay = 0;\n        }\n        return new this.SchedulerAction(this, work).schedule(state, delay);\n    };\n    Scheduler.now = function () { return Date.now(); };\n    return Scheduler;\n}());\nexport { Scheduler };\n//# sourceMappingURL=Scheduler.js.map\n","/** PURE_IMPORTS_START _QueueAction,_QueueScheduler PURE_IMPORTS_END */\nimport { QueueAction } from './QueueAction';\nimport { QueueScheduler } from './QueueScheduler';\nexport var queue = /*@__PURE__*/ new QueueScheduler(QueueAction);\n//# sourceMappingURL=queue.js.map\n","/** PURE_IMPORTS_START tslib,_AsyncScheduler PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { AsyncScheduler } from './AsyncScheduler';\nvar QueueScheduler = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(QueueScheduler, _super);\n    function QueueScheduler() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    return QueueScheduler;\n}(AsyncScheduler));\nexport { QueueScheduler };\n//# sourceMappingURL=QueueScheduler.js.map\n","/** PURE_IMPORTS_START tslib,_Scheduler PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { Scheduler } from '../Scheduler';\nvar AsyncScheduler = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(AsyncScheduler, _super);\n    function AsyncScheduler(SchedulerAction, now) {\n        if (now === void 0) {\n            now = Scheduler.now;\n        }\n        var _this = _super.call(this, SchedulerAction, function () {\n            if (AsyncScheduler.delegate && AsyncScheduler.delegate !== _this) {\n                return AsyncScheduler.delegate.now();\n            }\n            else {\n                return now();\n            }\n        }) || this;\n        _this.actions = [];\n        _this.active = false;\n        _this.scheduled = undefined;\n        return _this;\n    }\n    AsyncScheduler.prototype.schedule = function (work, delay, state) {\n        if (delay === void 0) {\n            delay = 0;\n        }\n        if (AsyncScheduler.delegate && AsyncScheduler.delegate !== this) {\n            return AsyncScheduler.delegate.schedule(work, delay, state);\n        }\n        else {\n            return _super.prototype.schedule.call(this, work, delay, state);\n        }\n    };\n    AsyncScheduler.prototype.flush = function (action) {\n        var actions = this.actions;\n        if (this.active) {\n            actions.push(action);\n            return;\n        }\n        var error;\n        this.active = true;\n        do {\n            if (error = action.execute(action.state, action.delay)) {\n                break;\n            }\n        } while (action = actions.shift());\n        this.active = false;\n        if (error) {\n            while (action = actions.shift()) {\n                action.unsubscribe();\n            }\n            throw error;\n        }\n    };\n    return AsyncScheduler;\n}(Scheduler));\nexport { AsyncScheduler };\n//# sourceMappingURL=AsyncScheduler.js.map\n","/** PURE_IMPORTS_START _Observable PURE_IMPORTS_END */\nimport { Observable } from '../Observable';\nexport var EMPTY = /*@__PURE__*/ new Observable(function (subscriber) { return subscriber.complete(); });\nexport function empty(scheduler) {\n    return scheduler ? emptyScheduled(scheduler) : EMPTY;\n}\nfunction emptyScheduled(scheduler) {\n    return new Observable(function (subscriber) { return scheduler.schedule(function () { return subscriber.complete(); }); });\n}\n//# sourceMappingURL=empty.js.map\n","/** PURE_IMPORTS_START  PURE_IMPORTS_END */\nexport function isScheduler(value) {\n    return value && typeof value.schedule === 'function';\n}\n//# sourceMappingURL=isScheduler.js.map\n","/** PURE_IMPORTS_START  PURE_IMPORTS_END */\nexport var subscribeToArray = function (array) {\n    return function (subscriber) {\n        for (var i = 0, len = array.length; i < len && !subscriber.closed; i++) {\n            subscriber.next(array[i]);\n        }\n        subscriber.complete();\n    };\n};\n//# sourceMappingURL=subscribeToArray.js.map\n","/** PURE_IMPORTS_START _observable_empty,_observable_of,_observable_throwError PURE_IMPORTS_END */\nimport { empty } from './observable/empty';\nimport { of } from './observable/of';\nimport { throwError } from './observable/throwError';\nexport var NotificationKind;\n/*@__PURE__*/ (function (NotificationKind) {\n    NotificationKind[\"NEXT\"] = \"N\";\n    NotificationKind[\"ERROR\"] = \"E\";\n    NotificationKind[\"COMPLETE\"] = \"C\";\n})(NotificationKind || (NotificationKind = {}));\nvar Notification = /*@__PURE__*/ (function () {\n    function Notification(kind, value, error) {\n        this.kind = kind;\n        this.value = value;\n        this.error = error;\n        this.hasValue = kind === 'N';\n    }\n    Notification.prototype.observe = function (observer) {\n        switch (this.kind) {\n            case 'N':\n                return observer.next && observer.next(this.value);\n            case 'E':\n                return observer.error && observer.error(this.error);\n            case 'C':\n                return observer.complete && observer.complete();\n        }\n    };\n    Notification.prototype.do = function (next, error, complete) {\n        var kind = this.kind;\n        switch (kind) {\n            case 'N':\n                return next && next(this.value);\n            case 'E':\n                return error && error(this.error);\n            case 'C':\n                return complete && complete();\n        }\n    };\n    Notification.prototype.accept = function (nextOrObserver, error, complete) {\n        if (nextOrObserver && typeof nextOrObserver.next === 'function') {\n            return this.observe(nextOrObserver);\n        }\n        else {\n            return this.do(nextOrObserver, error, complete);\n        }\n    };\n    Notification.prototype.toObservable = function () {\n        var kind = this.kind;\n        switch (kind) {\n            case 'N':\n                return of(this.value);\n            case 'E':\n                return throwError(this.error);\n            case 'C':\n                return empty();\n        }\n        throw new Error('unexpected notification kind value');\n    };\n    Notification.createNext = function (value) {\n        if (typeof value !== 'undefined') {\n            return new Notification('N', value);\n        }\n        return Notification.undefinedValueNotification;\n    };\n    Notification.createError = function (err) {\n        return new Notification('E', undefined, err);\n    };\n    Notification.createComplete = function () {\n        return Notification.completeNotification;\n    };\n    Notification.completeNotification = new Notification('C');\n    Notification.undefinedValueNotification = new Notification('N', undefined);\n    return Notification;\n}());\nexport { Notification };\n//# sourceMappingURL=Notification.js.map\n","/** PURE_IMPORTS_START _Observable,_Subscription PURE_IMPORTS_END */\nimport { Observable } from '../Observable';\nimport { Subscription } from '../Subscription';\nexport function scheduleArray(input, scheduler) {\n    return new Observable(function (subscriber) {\n        var sub = new Subscription();\n        var i = 0;\n        sub.add(scheduler.schedule(function () {\n            if (i === input.length) {\n                subscriber.complete();\n                return;\n            }\n            subscriber.next(input[i++]);\n            if (!subscriber.closed) {\n                sub.add(this.schedule());\n            }\n        }));\n        return sub;\n    });\n}\n//# sourceMappingURL=scheduleArray.js.map\n","/** PURE_IMPORTS_START _Observable,_util_subscribeToArray,_scheduled_scheduleArray PURE_IMPORTS_END */\nimport { Observable } from '../Observable';\nimport { subscribeToArray } from '../util/subscribeToArray';\nimport { scheduleArray } from '../scheduled/scheduleArray';\nexport function fromArray(input, scheduler) {\n    if (!scheduler) {\n        return new Observable(subscribeToArray(input));\n    }\n    else {\n        return scheduleArray(input, scheduler);\n    }\n}\n//# sourceMappingURL=fromArray.js.map\n","/** PURE_IMPORTS_START _Observable PURE_IMPORTS_END */\nimport { Observable } from '../Observable';\nexport function throwError(error, scheduler) {\n    if (!scheduler) {\n        return new Observable(function (subscriber) { return subscriber.error(error); });\n    }\n    else {\n        return new Observable(function (subscriber) { return scheduler.schedule(dispatch, 0, { error: error, subscriber: subscriber }); });\n    }\n}\nfunction dispatch(_a) {\n    var error = _a.error, subscriber = _a.subscriber;\n    subscriber.error(error);\n}\n//# sourceMappingURL=throwError.js.map\n","/** PURE_IMPORTS_START _util_isScheduler,_fromArray,_scheduled_scheduleArray PURE_IMPORTS_END */\nimport { isScheduler } from '../util/isScheduler';\nimport { fromArray } from './fromArray';\nimport { scheduleArray } from '../scheduled/scheduleArray';\nexport function of() {\n    var args = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        args[_i] = arguments[_i];\n    }\n    var scheduler = args[args.length - 1];\n    if (isScheduler(scheduler)) {\n        args.pop();\n        return scheduleArray(args, scheduler);\n    }\n    else {\n        return fromArray(args);\n    }\n}\n//# sourceMappingURL=of.js.map\n","/** PURE_IMPORTS_START tslib,_Subscriber,_Notification PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { Subscriber } from '../Subscriber';\nimport { Notification } from '../Notification';\nexport function observeOn(scheduler, delay) {\n    if (delay === void 0) {\n        delay = 0;\n    }\n    return function observeOnOperatorFunction(source) {\n        return source.lift(new ObserveOnOperator(scheduler, delay));\n    };\n}\nvar ObserveOnOperator = /*@__PURE__*/ (function () {\n    function ObserveOnOperator(scheduler, delay) {\n        if (delay === void 0) {\n            delay = 0;\n        }\n        this.scheduler = scheduler;\n        this.delay = delay;\n    }\n    ObserveOnOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new ObserveOnSubscriber(subscriber, this.scheduler, this.delay));\n    };\n    return ObserveOnOperator;\n}());\nexport { ObserveOnOperator };\nvar ObserveOnSubscriber = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(ObserveOnSubscriber, _super);\n    function ObserveOnSubscriber(destination, scheduler, delay) {\n        if (delay === void 0) {\n            delay = 0;\n        }\n        var _this = _super.call(this, destination) || this;\n        _this.scheduler = scheduler;\n        _this.delay = delay;\n        return _this;\n    }\n    ObserveOnSubscriber.dispatch = function (arg) {\n        var notification = arg.notification, destination = arg.destination;\n        notification.observe(destination);\n        this.unsubscribe();\n    };\n    ObserveOnSubscriber.prototype.scheduleMessage = function (notification) {\n        var destination = this.destination;\n        destination.add(this.scheduler.schedule(ObserveOnSubscriber.dispatch, this.delay, new ObserveOnMessage(notification, this.destination)));\n    };\n    ObserveOnSubscriber.prototype._next = function (value) {\n        this.scheduleMessage(Notification.createNext(value));\n    };\n    ObserveOnSubscriber.prototype._error = function (err) {\n        this.scheduleMessage(Notification.createError(err));\n        this.unsubscribe();\n    };\n    ObserveOnSubscriber.prototype._complete = function () {\n        this.scheduleMessage(Notification.createComplete());\n        this.unsubscribe();\n    };\n    return ObserveOnSubscriber;\n}(Subscriber));\nexport { ObserveOnSubscriber };\nvar ObserveOnMessage = /*@__PURE__*/ (function () {\n    function ObserveOnMessage(notification, destination) {\n        this.notification = notification;\n        this.destination = destination;\n    }\n    return ObserveOnMessage;\n}());\nexport { ObserveOnMessage };\n//# sourceMappingURL=observeOn.js.map\n","/** PURE_IMPORTS_START tslib,_Subject,_scheduler_queue,_Subscription,_operators_observeOn,_util_ObjectUnsubscribedError,_SubjectSubscription PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { Subject } from './Subject';\nimport { queue } from './scheduler/queue';\nimport { Subscription } from './Subscription';\nimport { ObserveOnSubscriber } from './operators/observeOn';\nimport { ObjectUnsubscribedError } from './util/ObjectUnsubscribedError';\nimport { SubjectSubscription } from './SubjectSubscription';\nvar ReplaySubject = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(ReplaySubject, _super);\n    function ReplaySubject(bufferSize, windowTime, scheduler) {\n        if (bufferSize === void 0) {\n            bufferSize = Number.POSITIVE_INFINITY;\n        }\n        if (windowTime === void 0) {\n            windowTime = Number.POSITIVE_INFINITY;\n        }\n        var _this = _super.call(this) || this;\n        _this.scheduler = scheduler;\n        _this._events = [];\n        _this._infiniteTimeWindow = false;\n        _this._bufferSize = bufferSize < 1 ? 1 : bufferSize;\n        _this._windowTime = windowTime < 1 ? 1 : windowTime;\n        if (windowTime === Number.POSITIVE_INFINITY) {\n            _this._infiniteTimeWindow = true;\n            _this.next = _this.nextInfiniteTimeWindow;\n        }\n        else {\n            _this.next = _this.nextTimeWindow;\n        }\n        return _this;\n    }\n    ReplaySubject.prototype.nextInfiniteTimeWindow = function (value) {\n        var _events = this._events;\n        _events.push(value);\n        if (_events.length > this._bufferSize) {\n            _events.shift();\n        }\n        _super.prototype.next.call(this, value);\n    };\n    ReplaySubject.prototype.nextTimeWindow = function (value) {\n        this._events.push(new ReplayEvent(this._getNow(), value));\n        this._trimBufferThenGetEvents();\n        _super.prototype.next.call(this, value);\n    };\n    ReplaySubject.prototype._subscribe = function (subscriber) {\n        var _infiniteTimeWindow = this._infiniteTimeWindow;\n        var _events = _infiniteTimeWindow ? this._events : this._trimBufferThenGetEvents();\n        var scheduler = this.scheduler;\n        var len = _events.length;\n        var subscription;\n        if (this.closed) {\n            throw new ObjectUnsubscribedError();\n        }\n        else if (this.isStopped || this.hasError) {\n            subscription = Subscription.EMPTY;\n        }\n        else {\n            this.observers.push(subscriber);\n            subscription = new SubjectSubscription(this, subscriber);\n        }\n        if (scheduler) {\n            subscriber.add(subscriber = new ObserveOnSubscriber(subscriber, scheduler));\n        }\n        if (_infiniteTimeWindow) {\n            for (var i = 0; i < len && !subscriber.closed; i++) {\n                subscriber.next(_events[i]);\n            }\n        }\n        else {\n            for (var i = 0; i < len && !subscriber.closed; i++) {\n                subscriber.next(_events[i].value);\n            }\n        }\n        if (this.hasError) {\n            subscriber.error(this.thrownError);\n        }\n        else if (this.isStopped) {\n            subscriber.complete();\n        }\n        return subscription;\n    };\n    ReplaySubject.prototype._getNow = function () {\n        return (this.scheduler || queue).now();\n    };\n    ReplaySubject.prototype._trimBufferThenGetEvents = function () {\n        var now = this._getNow();\n        var _bufferSize = this._bufferSize;\n        var _windowTime = this._windowTime;\n        var _events = this._events;\n        var eventsCount = _events.length;\n        var spliceCount = 0;\n        while (spliceCount < eventsCount) {\n            if ((now - _events[spliceCount].time) < _windowTime) {\n                break;\n            }\n            spliceCount++;\n        }\n        if (eventsCount > _bufferSize) {\n            spliceCount = Math.max(spliceCount, eventsCount - _bufferSize);\n        }\n        if (spliceCount > 0) {\n            _events.splice(0, spliceCount);\n        }\n        return _events;\n    };\n    return ReplaySubject;\n}(Subject));\nexport { ReplaySubject };\nvar ReplayEvent = /*@__PURE__*/ (function () {\n    function ReplayEvent(time, value) {\n        this.time = time;\n        this.value = value;\n    }\n    return ReplayEvent;\n}());\n//# sourceMappingURL=ReplaySubject.js.map\n","/** PURE_IMPORTS_START tslib,_Subscriber PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { Subscriber } from '../Subscriber';\nexport function filter(predicate, thisArg) {\n    return function filterOperatorFunction(source) {\n        return source.lift(new FilterOperator(predicate, thisArg));\n    };\n}\nvar FilterOperator = /*@__PURE__*/ (function () {\n    function FilterOperator(predicate, thisArg) {\n        this.predicate = predicate;\n        this.thisArg = thisArg;\n    }\n    FilterOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new FilterSubscriber(subscriber, this.predicate, this.thisArg));\n    };\n    return FilterOperator;\n}());\nvar FilterSubscriber = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(FilterSubscriber, _super);\n    function FilterSubscriber(destination, predicate, thisArg) {\n        var _this = _super.call(this, destination) || this;\n        _this.predicate = predicate;\n        _this.thisArg = thisArg;\n        _this.count = 0;\n        return _this;\n    }\n    FilterSubscriber.prototype._next = function (value) {\n        var result;\n        try {\n            result = this.predicate.call(this.thisArg, value, this.count++);\n        }\n        catch (err) {\n            this.destination.error(err);\n            return;\n        }\n        if (result) {\n            this.destination.next(value);\n        }\n    };\n    return FilterSubscriber;\n}(Subscriber));\n//# sourceMappingURL=filter.js.map\n","/** PURE_IMPORTS_START tslib,_Subscriber PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { Subscriber } from '../Subscriber';\nexport function map(project, thisArg) {\n    return function mapOperation(source) {\n        if (typeof project !== 'function') {\n            throw new TypeError('argument is not a function. Are you looking for `mapTo()`?');\n        }\n        return source.lift(new MapOperator(project, thisArg));\n    };\n}\nvar MapOperator = /*@__PURE__*/ (function () {\n    function MapOperator(project, thisArg) {\n        this.project = project;\n        this.thisArg = thisArg;\n    }\n    MapOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new MapSubscriber(subscriber, this.project, this.thisArg));\n    };\n    return MapOperator;\n}());\nexport { MapOperator };\nvar MapSubscriber = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(MapSubscriber, _super);\n    function MapSubscriber(destination, project, thisArg) {\n        var _this = _super.call(this, destination) || this;\n        _this.project = project;\n        _this.count = 0;\n        _this.thisArg = thisArg || _this;\n        return _this;\n    }\n    MapSubscriber.prototype._next = function (value) {\n        var result;\n        try {\n            result = this.project.call(this.thisArg, value, this.count++);\n        }\n        catch (err) {\n            this.destination.error(err);\n            return;\n        }\n        this.destination.next(result);\n    };\n    return MapSubscriber;\n}(Subscriber));\n//# sourceMappingURL=map.js.map\n","\r\nimport { Reactive as Mediator } from '../mediator';\r\n\r\n\r\nclass Store extends Mediator {\r\n    private $data: Map<any, any> = new Map();\r\n    public id: string;\r\n\r\n    constructor(options: any = {}) {\r\n        super();\r\n        var { id } = options;\r\n        this.id = id;\r\n\r\n        return this;\r\n    }\r\n\r\n    next(e: CustomEvent, key: any) {\r\n        var { type, detail } = e;\r\n        var child = this.get(key)\r\n          , data = child.data()\r\n          ;\r\n        var paths = {\r\n            'parent/child/datum': `${this.id}/${key}/${type}`,\r\n            'parent/*/datum': `${this.id}/*/${type}`,\r\n            '**/child/datum': `**/${key}/${type}`,\r\n            '**/*/datum': `**/*/${type}`,\r\n        };\r\n        \r\n        this.publish(paths['parent/child/datum'], detail);\r\n        this.publish(paths['parent/*/datum'], detail);\r\n        this.publish(paths['**/child/datum'], detail);\r\n        this.publish(paths['**/*/datum'], detail);\r\n    }\r\n    error(error: Error) {}\r\n    complete() {}\r\n\r\n    has(key: any) {\r\n        var has = this.$data.has(key);\r\n        return has;\r\n    }\r\n\r\n    get(key: any) {\r\n        var value = this.$data.get(key);\r\n        return value;\r\n    }\r\n\r\n    set(key: any, value: any) {\r\n        this.$data.set(key, value);\r\n        this.publish(key, value);\r\n        this.publish('*', value);\r\n        this.publish('**/*', value);\r\n        this.publish(`**/${key}`, value);\r\n        if (value instanceof Store) value.attach({ next: (e) => this.next(e, key) });\r\n        \r\n        return this;\r\n    }\r\n\r\n    data() {\r\n        var entries = Array.from( this.$data.entries() ), o = { };\r\n        for (let [key, value] of entries) o[key] = value;\r\n        return o;\r\n    }\r\n\r\n    toJSON() {\r\n        return this.data();\r\n    }\r\n\r\n}\r\n\r\nexport { Store };\r\n","\r\nimport { IEventAggregator } from '../eventaggregator.interface';\r\nimport { Reactive as EventHub } from '../eventhub';\r\n\r\n\r\nclass Mediator extends EventHub implements IEventAggregator {\r\n    private publishers: any = { };\r\n    private context: any = this;\r\n    \r\n    constructor() {\r\n        super();\r\n    }\r\n    \r\n    private registerPublishers(handlers: any) {\r\n        this.publishers = handlers;\r\n        return this;\r\n    }\r\n    protected register(type: 'publishers', handlers: any) {\r\n        var action = { 'publishers': 'registerPublishers' }[ type ];\r\n        this[action](handlers);\r\n        return this;\r\n    }\r\n  \r\n    protected dispatch(channel: string, data?: any, ...more: any[]) {\r\n      super.publish.call(this, channel, data, ...more);\r\n      return this;\r\n    }\r\n    \r\n    publish(channel: string, data?: any, ...more: any[]) {\r\n        var { publishers } = this;\r\n        if (!channel) console.warn(`Mediator.publish expected a channel-value but got \"${channel}\". Please check the spelling of your channel-key.`);\r\n        if (channel in publishers) publishers[channel].call(publishers, channel, data, ...more);\r\n        else this.dispatch.call(this, channel, data, ...more);\r\n        \r\n        return this;\r\n    }\r\n    \r\n}\r\n\r\nexport { Mediator };\r\n","\r\n// https://stackblitz.com/edit/rxjs-mediator-with-operators?file=index.ts\r\nimport { of, from } from 'rxjs';\r\nimport { Observable, Subject, BehaviorSubject, ReplaySubject } from 'rxjs';\r\nimport { map, filter, last } from 'rxjs/operators';\r\n//\r\nimport { ISubscriber } from '../subscriber.interface';\r\nimport { IEventAggregator } from '../eventaggregator.interface';\r\n\r\nclass EventHub implements IEventAggregator {\r\n  private initializations: object = { errors: 0 };\r\n  private initialized: CustomEvent = new CustomEvent('$initialized', { detail: this.initializations });\r\n  public channels$: ReplaySubject<CustomEvent> = new ReplaySubject(1);\r\n\r\n  in(channel: string): Observable<CustomEvent> {\r\n    var filterChannel = filter( (o: CustomEvent) => channel === o.type )\r\n      , mapData = map( (o: CustomEvent) => o )\r\n      ;\r\n    var subscription = this.channels$.pipe(filterChannel).pipe(mapData);\r\n\r\n    return subscription;\r\n  }\r\n  \r\n  publish(channel: string, data: any = {}, ...more: any[]): IEventAggregator {\r\n    var event = new CustomEvent(channel, { detail: data });\r\n    this.channels$.next(event);\r\n    return this;\r\n  }\r\n\r\n  subscribe(channel: string, handler?: (data?: any) => {}): Observable<CustomEvent> {\r\n    var subscription = this.in(channel);\r\n    if (handler) subscription.subscribe(handler);\r\n    return subscription;\r\n  }\r\n\r\n  unsubscribe(channel: string, handler: (data?: any) => {}): IEventAggregator {\r\n    // this.channels$.unsubscribe();\r\n    return this;\r\n  }\r\n\r\n  attach(observer: ISubscriber): Observable<CustomEvent> {\r\n    var subscription = this.channels$;\r\n    if (observer) subscription.subscribe(observer);\r\n    return subscription;\r\n  }\r\n  \r\n  detach(observer: ISubscriber) {\r\n    // this.channels$.unsubscribe();\r\n    return this;\r\n  }\r\n\r\n}\r\n\r\nexport { EventHub };\r\n","\r\nimport { IEventAggregator } from '../eventaggregator.interface';\r\nimport { IDirectorOptions } from './options.interface';\r\nimport { Reactive as Store } from '../store';\r\nimport { Utilities } from '../utilities';\r\n\r\n\r\nclass Director extends Store implements IEventAggregator {\r\n    private dependencies: IDirectorOptions;\r\n    private actionHandlers: any;\r\n    private stateHandlers: any;\r\n    public utils: Utilities = new Utilities();\r\n    public channels: any;\r\n\r\n    constructor(options: IDirectorOptions) {\r\n        super({ id: 'app' });\r\n        var { channels, ActionHandlers, StateHandlers, Dependencies } = options;\r\n        var dependencies = new Dependencies(this);\r\n        var actionHandlers = new ActionHandlers(this, dependencies)\r\n          , stateHandlers = new StateHandlers(this, dependencies)\r\n          ;\r\n        \r\n        this.channels = channels;\r\n        this.dependencies = dependencies;\r\n        this.actionHandlers = actionHandlers;\r\n        this.stateHandlers = stateHandlers;\r\n        this.register('publishers', actionHandlers);\r\n        this.attach({ next: this.handleState });\r\n    }\r\n\r\n    private handleState = (e: CustomEvent) => {\r\n        var { type, detail } = e;\r\n        var { stateHandlers: handlers } = this;\r\n        var action = handlers[type];\r\n\r\n        if (action) action.call(handlers, e);\r\n        // else setTimeout( () => console.log('@ OBSERVED STATE', type, detail), (1000 * 10) );\r\n    };\r\n\r\n    emit(channel: string, data?: any) {\r\n        this.dispatch(channel, data);\r\n        return this;\r\n    }\r\n\r\n}\r\n\r\nexport { Director };\r\n","\r\nimport { Director as CommonDirector } from '@motorman/core';\r\n\r\nclass Director extends CommonDirector {}\r\n\r\nexport { Director };\r\n","\r\nimport { Director as CommonDirector } from '@motorman/vertices/director';\r\n\r\n\r\nclass Director extends CommonDirector {}\r\n\r\nexport { Director };\r\n","\r\nimport { Channels as CommonChannels } from '@motorman/vertices/director';\r\n\r\nclass Channels extends CommonChannels {\r\n    ['JOHN:WILL:LIKE:THIS:STRATEGY'] = 'app://preferred-by-john/this/strategy';\r\n    ['SOMETHING:ELSE:HAPPENED'] = 'app://happened/something/else';\r\n    ['ELEMENT:MUTATION:ATTRIBUTE:OBSERVED'] = 'v://observed/element/attribute/mutation';\r\n}\r\n\r\nvar channels = new Channels();\r\n\r\nexport { Channels, channels };\r\n","\r\nimport { ActionHandlers as CommonHandlers } from '@motorman/vertices/director';\r\nimport { channels as e } from '../channels';\r\nimport { Director } from '../director';\r\n\r\nclass Dependencies {\r\n    public stats: Console = console;\r\n\r\n    constructor(private Director: Director) {}\r\n}\r\n\r\nclass ActionHandlers extends CommonHandlers {\r\n    \r\n    constructor(director: Director, $: Dependencies) {\r\n        super(director, $);\r\n    }\r\n    \r\n    [ e['JOHN:WILL:LIKE:THIS:STRATEGY'] ](channel: string, data: { id: number, datum: string }) {\r\n        var { id, datum } = data;\r\n        if ({ '999': true }[ id ]) console.log('@ Director: Caught', data.id);\r\n        this.director.set(datum, data);\r\n        this.director.emit(channel, data);\r\n    }\r\n    \r\n}\r\n\r\nexport { ActionHandlers };\r\n","\r\nimport { channels as e } from '../channels';\r\nimport { Director } from '../director';\r\n\r\n\r\nclass Dependencies {}\r\nclass ActionHandlers {\r\n    \r\n    constructor(protected director: Director, protected $: Dependencies) {}\r\n    \r\n    [ e['BACKDROP:INSPECTED'] ](channel: string, request: any) {\r\n        var { id } = request;\r\n        console.log('V:Director; modal dismissed', id, request);\r\n        if ({ 'some:nondismissable:ui': true }[ id ]) return;\r\n        this.director.emit(channel, request);\r\n        this.director.publish(e['BACKDROP:DISMISSED'], request);\r\n        this.director.publish(e['MODAL:DISMISSED'], request);\r\n    }\r\n    \r\n}\r\n\r\nexport { ActionHandlers };\r\n","\r\nimport { Reactive as Store } from '@motorman/core/store';\r\nimport { Director } from '../director';\r\n\r\nclass Dependencies {\r\n    public stats: Console = console;\r\n\r\n    constructor(private Director: Director) {}\r\n}\r\n\r\nclass StateHandlers {\r\n    \r\n    constructor(private director: Director, private $: Dependencies) {\r\n        setTimeout( () => this.init(), (1000 * 2) );\r\n    }\r\n    \r\n    init() {\r\n        var settings: Store = new Store({ id: 'settings' });\r\n        var token = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwiaWF0IjoxNTE2MjM5MDIyLCJ1c2VyIjp7Im5hbWUiOnsiZmlyc3QiOiJDb2R5IiwibGFzdCI6IkNhcmxzb24ifSwidXNlcm5hbWUiOiJvdG9jYXJsc29uQGdtYWlsLmNvbSJ9fQ._XjXROxwEV6iJTsgkTVjVfJt4K-ojw8IbHzvkauqfFU';\r\n        var user = {\r\n            \"name\": { \"first\": \"Cody\", \"last\": \"Carlson\" },\r\n            \"username\": \"otocarlson@gmail.com\"\r\n        };\r\n        this.director.set('token', token);\r\n        this.director.set('user', user);\r\n        // this.in('settings[bbbb]').subscribe(this.handleState);\r\n        this.director.set(settings.id, settings);\r\n        [\r\n            { id: 0, name: 'aaaa' },\r\n            { id: 1, name: 'bbbb' },\r\n            { id: 2, name: 'cccc' },\r\n        ].forEach( (d) => settings.set(d.name, d) );\r\n    }\r\n    \r\n    log(e: CustomEvent, ...more: any[]) {\r\n        var { type, detail } = e;\r\n        console.log('@ STATE', type, detail);\r\n    }\r\n\r\n    // 'token': log,\r\n    // 'user': log,\r\n    ['app/settings'](e: CustomEvent) {\r\n        this.log(e);\r\n    }\r\n    ['app/settings/aaaa'](e: CustomEvent) {\r\n        this.log(e, '<-- specifically targeted');\r\n    }\r\n    ['app/settings/*'](e: CustomEvent) {\r\n        this.log(e);\r\n    }\r\n    ['**/settings/*'](e: CustomEvent) {\r\n        this.log(e);\r\n    }\r\n    ['**/*/*'](e: CustomEvent) {\r\n        this.log(e);\r\n    }\r\n    ['A'](e: CustomEvent) {\r\n        this.log(e);\r\n    }\r\n\r\n}\r\n\r\nexport { StateHandlers };\r\n","\r\nimport { IEventAggregator } from '@motorman/core/eventaggregator.interface';\r\nimport { Core } from '@motorman/vertices/core/core';\r\nimport { Reactive as CommonSandbox } from '@motorman/core/sandbox';\r\nimport { Sandbox as CommonComponentSandbox } from '@motorman/vertices/sandbox';\r\nimport { Utilities } from '@motorman/core/utilities';\r\nimport { Subject } from '@motorman/core/utilities/patterns/behavioral/observer';\r\nimport { Director, ActionHandlers, StateHandlers, channels } from './director';\r\n\r\n// class Dependencies {};  // mock\r\n// var director = new Director({ channels, Dependencies, ActionHandlers, StateHandlers });\r\n\r\n\r\nclass TemplateSubject extends Subject {\r\n    private template: string = '';\r\n    private repository: Node&DocumentFragment = new DocumentFragment();\r\n    private digestion: Node&HTMLDivElement = document.createElement('div');\r\n    public content: NodeList|Node[] = [ ];\r\n    \r\n    constructor(private sandbox: ElementSandboxState) {\r\n        super('content');\r\n        var { repository, digestion } = this;\r\n        repository.appendChild(digestion);\r\n    }\r\n    \r\n    set(template: string = '') {\r\n        var { digestion } = this;\r\n        \r\n        digestion.innerHTML = template;\r\n        this.template = template;\r\n        this.observation = this.content = Array.prototype.slice.call(digestion.childNodes);\r\n        \r\n        return this;\r\n    }\r\n    \r\n}\r\n\r\nclass MutationManager {\r\n    protected observer: MutationObserver = new MutationObserver( (r, o) => this.observe(r, o) );\r\n    protected get node(): Node { return this.sandbox.node; }\r\n    protected get precepts(): any { return this.core.$nodes.get(this.node); }\r\n    protected get selector(): string { return this.precepts.selector; }\r\n    protected get instance(): string { return this.precepts.instance; }\r\n    \r\n    constructor(private sandbox: ElementSandboxState, public core: Core) {}\r\n    \r\n    private observe(changes: MutationRecord[], observer: MutationObserver) {\r\n        for(let mutation of changes) this[mutation.type](mutation);\r\n    }\r\n    \r\n    private ['childList'](mutation: MutationRecord) {\r\n        var { sandbox, node } = this;\r\n        console.log('MutationManager - childList', mutation);\r\n    }\r\n    private ['attributes'](mutation: MutationRecord) {\r\n        var { sandbox, node, selector, instance } = this;\r\n        var { attributeName: name, target: element } = mutation;\r\n        var attr = (element as Element).getAttributeNode(name);\r\n        var isIO = ( (element as Element).matches(selector) && node.isSameNode(element) )  // source of change occurred on host-element\r\n          ;\r\n        var detail = mutation\r\n          , a = new CustomEvent('mutation', { detail })\r\n          , e = new CustomEvent('mutation:attribute', { detail })\r\n          , io = new CustomEvent('mutation:io', { detail })\r\n          , i = new CustomEvent('mutation:input', { detail })\r\n          , o = new CustomEvent('mutation:output', { detail })\r\n          ;\r\n        \r\n        if (isIO) element.dispatchEvent(io);  // check instance to see if scope is already updated? if not, dispatch mutation:input event?\r\n        attr.dispatchEvent(a);\r\n        element.dispatchEvent(e);\r\n    }\r\n    private ['subtree'](mutation: MutationRecord) {\r\n        var { sandbox, node } = this;\r\n        console.log('MutationManager - subtree', mutation);\r\n    }\r\n    \r\n    connect(config?: any) {\r\n        var { observer, node } = this;\r\n        var config = { attributes: true, childList: true, subtree: true, ...config };\r\n        \r\n        observer.observe(node, config);\r\n        \r\n        return this;\r\n    }\r\n    \r\n    disconnect() {\r\n        var { observer } = this;\r\n        observer.disconnect();\r\n        return this;\r\n    }\r\n    \r\n}\r\n\r\nclass EventManager {\r\n    private emit: (e: Event|CustomEvent) => any;\r\n    private $events: Map<string, any> = new Map();\r\n    get events(): string[] { return Array.from( this.$events.keys() ); }\r\n    get node(): Node { return this.sandbox.node; }\r\n    get proxy(): EventTarget { return EventTarget.prototype; }\r\n    // get proxy(): EventTarget { return this.node; }\r\n    get precepts(): any { return this.core.$nodes.get(this.node); }\r\n    get instance(): any { return this.precepts.instance; }\r\n    \r\n    constructor(private sandbox: ElementSandboxState, public core: Core) {}\r\n    \r\n    private proxyEventTargetSource(source: EventTarget): boolean {\r\n        var { node } = this;\r\n        \r\n        this.getEventTypes(<Element>node);\r\n        this.events.forEach( (type) => node.addEventListener(type, this.handleAll, true) );\r\n        \r\n        return !!this.events.length;\r\n    }\r\n    \r\n    /**\r\n     * @param : source := EventTarget\r\n     *  *   EventTarget.prototype\r\n     *  *   Node (Element, Attr, etc)\r\n     * @usage : [Node].addEventListener('*', ({ detail: e }) => {...}, false);\r\n     */\r\n    private proxyEventTargetSource_IDEAL(source: EventTarget) {\r\n        var emit = source.dispatchEvent;  // obtain reference\r\n\r\n        function proxy(e: Event|CustomEvent) {\r\n            var { type } = e, any = new CustomEvent('*', { detail: e });  // use original event as detail\r\n            if (!{ '*': true }[ type ]) emit.call(this, any);  // only emit \"any\" if type is not any.type ('*')\r\n            return emit.call(this, e);\r\n        }\r\n\r\n        if ({ 'dispatchEvent': true }[ emit.name ]) source.dispatchEvent = proxy;  // attempt overwrite only if not already set (avoid rewrapping)\r\n        this.emit = emit;\r\n\r\n        return (source.dispatchEvent === proxy);  // indicate if its set after we try to\r\n    }\r\n    \r\n    private getEventTypes(node: Node&Element): Node {\r\n        if ( !{ [1]: true }[ node.nodeType ] ) return node;\r\n        var { attributes, tagName } = node, re = /^\\((.*)\\)$/;\r\n        \r\n        for (let i = 0, len = attributes.length; i < len; i++) this.checkAttrNode(attributes[i], i, attributes);\r\n        if (node.firstElementChild) this.getEventTypes(node.firstElementChild);\r\n        if (node.nextElementSibling) this.getEventTypes(node.nextElementSibling);\r\n        \r\n        return node;\r\n    }\r\n    \r\n    private checkAttrNode(attribute: Attr, i: number, attributes: NamedNodeMap) {\r\n        var { name, value } = attribute, re = /^\\((.*)\\)$/;\r\n        var match = re.test(name), matches = name.match(re), full, type;\r\n        if (matches && matches.length) [ full, type ] = matches;\r\n        if (matches && matches.length) this.$events.set(type, true);\r\n    }\r\n    \r\n    connect() {\r\n        var { node, proxy } = this;\r\n        var successful = this.proxyEventTargetSource(proxy);\r\n        \r\n        node.addEventListener('*', this.handleAny, true);  // `useCapture`\r\n        \r\n        return this;\r\n    }\r\n    \r\n    disconnect() {\r\n        var { node, proxy } = this;\r\n        \r\n        node.removeEventListener('*', this.handleAll);\r\n        proxy.dispatchEvent = this.emit;\r\n        \r\n        return this;\r\n    }\r\n    \r\n    public handleAll = (e: Event|CustomEvent) => {\r\n        var { type, target } = e, any = new CustomEvent('*', { detail: e });  // use original event as detail\r\n        return target.dispatchEvent(any);\r\n    };\r\n    \r\n    public handleAny = (any: CustomEvent) => {\r\n        if ( !any.detail.target.attributes[`(${any.detail.type})`] ) return;\r\n        var { instance } = this;\r\n        var { detail: e } = any\r\n          , { type, target } = <Event>e\r\n          , property = `(${type})`\r\n          , attr = (target as Element).attributes[property]\r\n          , { name, value }: Attr = attr\r\n          ;\r\n        var re = /^(\\w+)\\((.*)\\)$/\r\n          , matches = value.match(re) || [ ]\r\n          , [ full, action, params ] = matches\r\n          ;\r\n        var method = instance[action]\r\n          , invoke = new Function('fn', 'ctx', '$event', `with (ctx) return fn.call(ctx, ${params})`)\r\n          , result = invoke(method, instance, e)\r\n          ;\r\n        return result;\r\n    };\r\n    \r\n}\r\n\r\ninterface ISandboxState extends IEventAggregator {\r\n    // details: any;\r\n    // core: any;\r\n    // config: any;\r\n    // director: Director;\r\n    // target: any;\r\n    // channels: any;\r\n    // template: any;\r\n}\r\ninterface INodeSandboxState extends ISandboxState {\r\n}\r\n\r\nclass Sandbox implements ISandboxState {\r\n    protected get core() { return this.details.core; }\r\n    protected get target() { return this.details.target; }\r\n    protected get config() { return this.core.configuration; }\r\n    protected get director() { return this.config.director; }\r\n    public content: Subject;\r\n    \r\n    constructor(protected details: { type, target: TPrecept, core: Core }) {}\r\n    \r\n    publish(channel: string, data?: any, ...more: any[]): ISandboxState {\r\n        var { director } = this;\r\n        director.publish(channel, data, ...more);\r\n        return this;\r\n    }\r\n    subscribe(channel: string, handler: Function, ...more: any[]): ISandboxState {\r\n        var { director } = this;\r\n        director.subscribe(channel, handler, ...more);\r\n        return this;\r\n    }\r\n    unsubscribe(channel: string, handler: Function, ...more: any[]): ISandboxState {\r\n        var { director } = this;\r\n        director.unsubscribe(channel, handler, ...more);\r\n        return this;\r\n    }\r\n    \r\n}\r\n\r\nclass ElementSandboxState extends Sandbox implements ISandboxState {\r\n    private delegations: EventManager = new EventManager(this, this.core);\r\n    private mutations: MutationManager = new MutationManager(this, this.core);\r\n    public content: TemplateSubject = new TemplateSubject(this);\r\n    public get channels() { return this.director.channels; }\r\n    public get node(): Node&Element { return <Element>this.target; }\r\n    \r\n    constructor(node: Node&Element, core: Core) {\r\n        super({ type: node.nodeType, target: node, core });\r\n        this.content.attach(this);\r\n        this.mutations.connect();\r\n        // this.subscribe(this.channels['ELEMENT:MUTATION:ATTRIBUTE:OBSERVED'], (m) => console.log('ELEMENT:MUTATION:ATTRIBUTE:OBSERVED', m) );\r\n        // this.node.addEventListener('OUTPUT', (e) => console.log('OUTPUT', e), false );\r\n        // this.node.addEventListener('mutation:io', (e) => console.log('IO (io)', e), false);\r\n        return this;\r\n    }\r\n    \r\n    update(state: NamedNodeMap) {  // Chain of Responsibility Pattern\r\n        var { mutations, delegations, node } = this;\r\n        mutations.disconnect();  // reconnect after to avoid mutation events\r\n        node.innerHTML = '';  // clear current contents\r\n        for (let child of state) node.appendChild(child);\r\n        mutations.connect();  // reconnect after to avoid mutation events\r\n        delegations.connect();\r\n    }\r\n    \r\n}\r\n\r\n\r\nclass AttributeSandboxState extends Sandbox implements ISandboxState {\r\n    public get channels() { return this.director.channels; }\r\n    public get node(): Node&Attr { return <Attr>this.target; }\r\n    \r\n    constructor(node: Node&Attr, core: Core) {\r\n        super({ type: node.nodeType, target: node, core });\r\n        return this;\r\n    }\r\n    \r\n}\r\n\r\n\r\nclass TextSandboxState {}\r\nclass CommentSandboxState {}\r\n\r\nclass PipeSandboxState {}\r\nclass ServiceSandboxState implements ISandboxState {\r\n    private get config() { return this.core.configuration; }\r\n    private get director() { return this.config.director; }\r\n    public get channels() { return this.director.channels; }\r\n    \r\n    constructor(private utils: Utilities, private core: Core) {\r\n        return this;\r\n    }\r\n    \r\n    publish(channel: string, data?: any, ...more: any[]): ISandboxState {\r\n        var { director } = this;\r\n        director.publish(channel, data, ...more);\r\n        return this;\r\n    }\r\n    subscribe(channel: string, handler: Function): ISandboxState {\r\n        var { director } = this;\r\n        director.subscribe(channel, handler);\r\n        return this;\r\n    }\r\n    unsubscribe(channel: string, handler: Function): ISandboxState {\r\n        var { director } = this;\r\n        director.unsubscribe(channel, handler);\r\n        return this;\r\n    }\r\n    \r\n}\r\nclass MicroserviceSandboxState {}\r\nclass IoTSandboxState {}\r\n\r\ntype TPipe = 'pipe';\r\ntype TService = 'service';\r\ntype TMicroService = 'microservice';\r\ntype TIoT = 'iot';\r\ntype TPreceptType = Node['ELEMENT_NODE'] | Node['ATTRIBUTE_NODE'] | Node['TEXT_NODE'] | Node['COMMENT_NODE'] | TPipe | TService | TMicroService | TIoT;\r\ntype TPrecept = (Node&Element) | (Node&Attr) | Utilities;\r\n\r\n\r\nfunction select(details: { type, target: TPrecept, core: Core }): any {\r\n    var { type, target, core } = details;\r\n    var Sandbox = {\r\n        [Node.ELEMENT_NODE]: ElementSandboxState,\r\n        [Node.ATTRIBUTE_NODE]: AttributeSandboxState,\r\n        [Node.TEXT_NODE]: TextSandboxState,\r\n        [Node.COMMENT_NODE]: CommentSandboxState,\r\n        ['pipe']: PipeSandboxState,\r\n        ['service']: ServiceSandboxState,\r\n        ['microservice']: MicroserviceSandboxState,\r\n        ['iot']: IoTSandboxState,\r\n    }[ type ] as any;\r\n    var sandbox = new Sandbox(target, core);\r\n    \r\n    return sandbox;\r\n}\r\n\r\n\r\nclass SandboxContext extends Sandbox implements ISandboxState {\r\n    public content: TemplateSubject;  // stub\r\n    \r\n    constructor(details: { type, target: TPrecept, core: Core }) {\r\n        super(details);\r\n        var sandbox = select(details);\r\n        return sandbox;\r\n    }\r\n    \r\n}\r\n\r\nexport {\r\n    SandboxContext as Sandbox,\r\n    ServiceSandboxState as ServiceSandbox,\r\n    ElementSandboxState as ComponentSandbox,\r\n};\r\n","\r\nimport { Utilities as CommonUtilities } from '@motorman/core/utilities';\r\n\r\nclass Utilities extends CommonUtilities {}\r\n\r\nexport { Utilities };\r\n","\r\nclass CONSTANTS {\r\n    static readonly SELECTOR: string = 'v';\r\n}\r\n\r\nexport { CONSTANTS };\r\n","\r\nimport { Utilities } from '@motorman/core/utilities';\r\nimport { CONSTANTS } from './constants';\r\n\r\nconst {\r\n    SELECTOR,\r\n} = CONSTANTS;\r\n\r\nvar utils = new Utilities();\r\nclass DataDecorator {\r\n    \r\n    constructor(private dataset: any = {}) {\r\n        utils.extend(this, dataset);\r\n        return this;\r\n    }\r\n    \r\n}\r\n\r\nfunction bootstrap(target, core) {\r\n    var element = target;\r\n    var selector = this.selector;\r\n    var data: any = new DataDecorator(element.dataset);\r\n    var ex = /[\\s]+/img;\r\n    var slug = data[SELECTOR] || '';\r\n    var ids = slug.split(ex);\r\n    var children = element.children;// element.querySelectorAll(selector);\r\n    var components = [ ];\r\n    \r\n    var resolveScope = function resolveScope(parent, child) {\r\n        var isDirectDescendant = (child.parentNode === parent);\r\n        if (isDirectDescendant) bootstrap.call(this, child, this);\r\n    }.bind(core, element);\r\n    \r\n    if (!!slug) components = ids.map(core.bootstrap.bind(core, element, data));\r\n    Array.prototype.forEach.call(children, resolveScope);  // TODO: Optimize!!!\r\n    components.forEach( mountComponent.bind(core) );\r\n    \r\n    function mountComponent(component) {\r\n        if (!component) return;\r\n        var instance = component.instance, handleMount = instance.handleMount;\r\n        if (handleMount) handleMount.call(instance);\r\n    }\r\n    \r\n}\r\n\r\nexport { bootstrap };\r\n","\r\nimport { filter } from 'rxjs/operators';\r\n//\r\nimport { Environment } from '@motorman/models';\r\nimport { V, Element, Attribute, Service } from '@motorman/vertices';\r\nimport { Core } from '@motorman/vertices/core/core';\r\nimport { ChainOfResponsibility } from '@motorman/core/utilities/patterns/behavioral';\r\nimport { BackdropComponent } from '@motorman/vertices/sdk/components/backdrop/backdrop.component';\r\nimport { ModalComponent } from '@motorman/vertices/sdk/components/modal/modal.component';\r\nimport { Deferred } from '@motorman/core/utilities';\r\n//\r\nimport { environment } from '../environments/environment';\r\nimport { Sandbox } from './core';\r\nimport { Director, ActionHandlers, StateHandlers, channels } from './core';\r\nimport { CONSTANTS, Utilities, bootstrap } from './core';\r\n// import { AppComponent } from './app.component';\r\n\r\n\r\nvar app = new (class Application {\r\n    \r\n    constructor(env: Environment) {\r\n        \r\n        var utils = new Utilities();\r\n        const {\r\n            SELECTOR,\r\n        } = CONSTANTS;\r\n        \r\n        type IMetadata = { type: string, selector: string, Class: any, Sandbox: typeof Sandbox };\r\n        type IReferenceInstance = IMetadata & {\r\n            target: Node | Utilities,\r\n            instance: any,\r\n            sandbox: Sandbox,\r\n            occupants: Node[],\r\n            occupee: Node,\r\n            $occupants: Map<string, Node>,\r\n        };\r\n        \r\n        class Bootstrap {\r\n            private core: Core = null;  // assume !null if pEnvironment.[[status]] !== pending\r\n            public dEnvironment: Deferred<any> = new Deferred();  // resolver must set this.core before invoking resolve()\r\n            public pEnvironment: Promise<any> = this.dEnvironment.promise;\r\n            get modules() { if (this.core) return this.core.modules; else return null; }\r\n            protected pipeNodeHandler = (handler: Function) => (e: CustomEvent) => handler.call(this, e.detail, e);\r\n            protected nodeProcessors: ChainOfResponsibility = new ChainOfResponsibility({}, [\r\n                { respond: this.pipeNodeHandler(this.processElementNode) },\r\n                { respond: this.pipeNodeHandler(this.processTextNode) },\r\n                { respond: this.pipeNodeHandler(this.processCommentNode) },\r\n            ]);\r\n            \r\n            constructor(options: any = {}) {\r\n                var { pEnvironment } = this;\r\n                \r\n                pEnvironment\r\n                    // .then( (env) => this.bootstrapDirector(env) )\r\n                    .then( (env) => this.bootstrapServices(env) )\r\n                    .then( (env) => this.parseNode(env) )\r\n                    ;\r\n                return this;\r\n            }\r\n            \r\n            execute(core: Core): Node&Document {\r\n                var { configuration } = core;\r\n                var { environment } = configuration;\r\n                \r\n                this.core = core;\r\n                this.dEnvironment.resolve(environment);\r\n                \r\n                return environment;\r\n            }\r\n            \r\n            bootstrapServices(env: Document): Node&Document {\r\n                var { core } = this;\r\n                var { modules } = core;\r\n                var { service: $services = new Map() } = modules;\r\n                \r\n                for (let [key, val] of $services) this.bootstrapService(val, key, $services);\r\n                \r\n                return env;\r\n            }\r\n            bootstrapService(metadata: IMetadata, key: string, $services: Map<string, IMetadata>) {\r\n                var { core } = this;\r\n                var { $instances } = core;\r\n                var { Sandbox, Class, selector } = metadata;\r\n                var sandbox = new Sandbox({ type: 'service', target: utils, core });\r\n                var instance = new Class(sandbox);\r\n                var data: IReferenceInstance = { target: utils, instance, selector, sandbox, occupants: null, occupee: null, $occupants: null, ...metadata };\r\n            }\r\n            \r\n            parseNode(node: Node): Node {\r\n                var { nodeProcessors: cor } = this;\r\n                var e = new CustomEvent('domnodeprocess', { detail: <any>node })\r\n                  , e = cor.respond(e)\r\n                  , { detail: result } = e\r\n                  ;\r\n                var { isConnected, parentNode: parent, previousSibling: previous, nextSibling: next, firstChild: child } = result;\r\n                \r\n                // RECURSION\r\n                // if (result !== node) return this.parseNode(result);  // reparse. assume replacement occurred. do not continue for next or child.\r\n                if (child) this.parseNode(child);  // TCO???\r\n                if (next) this.parseNode(next);  // TCO???\r\n                return node;  // result can still equal node\r\n            }\r\n                \r\n            private processMetadata(node: Node&Element, metadata: IMetadata, selector: string, $elements: Map<string, IMetadata>) {\r\n                if ( !node.matches(selector) ) return;\r\n                var { core } = this;\r\n                var { $instances, $nodes } = core;\r\n                var { Class, Sandbox } = metadata;\r\n                var { nodeType, childNodes } = node;\r\n                var occupants = Array.prototype.slice.call(childNodes);\r\n                var occupee = new DocumentFragment();\r\n                var $occupants = new Map();\r\n                \r\n                function addOccupant($occupants: Map<string, Node[]>, occupee: DocumentFragment, node: Node&HTMLSlotElement) {\r\n                    var { slot: name = '' } = node;\r\n                    if ( !$occupants.has(name) ) $occupants.set(name, [ ]);\r\n                    $occupants.get(name).push(node);\r\n                    occupee.appendChild(node);\r\n                }\r\n                \r\n                while (node.lastChild) node.firstChild.remove();  // clear from original parent to obviate child.cloneNode and maintain same object in Heap\r\n                let sandbox = new Sandbox({ type: nodeType, target: node, core });  // must be constructed after node is emptied to avoid mutation events.\r\n                let instance = new Class(sandbox);\r\n                let data: IReferenceInstance = { target: node, instance, selector, sandbox, occupants, occupee, $occupants, ...metadata };\r\n                occupants.forEach( c => addOccupant($occupants, occupee, c) );\r\n                \r\n                $nodes.set(node, data);\r\n                $instances.set(instance, data);\r\n            }\r\n            \r\n            private processElementNode(node: Node&Element): Node&Element {  // Node.ELEMENT_NODE === 1\r\n                if ( !{ '1': true }[ node.nodeType ] ) return node;  // https://developer.mozilla.org/en-US/docs/Web/API/Node/nodeType\r\n                var { modules = {} } = this;\r\n                var { element: $elements = new Map() } = modules;\r\n                var { attributes } = node;\r\n                var attribute = attributes[0];\r\n                \r\n                for (let [key, val] of $elements) this.processMetadata(node, val, key, $elements);\r\n                if (attribute) this.processAttributeNode(attribute, ...node.attributes);\r\n                \r\n                return node;\r\n            }\r\n            \r\n            private processTextNode(node: Node&Text): Node&Text {  // Node.TEXT_NODE === 3\r\n                if (!{ '3': true }[ node.nodeType ]) return node;  // https://developer.mozilla.org/en-US/docs/Web/API/Node/nodeType\r\n                // var { component} = this;\r\n                // var { data } = node;\r\n                // var interpolated = utils.interpolate(data)(component);\r\n                \r\n                // console.log('TEXT %O', node);\r\n                // // node.replaceWith(interpolated);\r\n                // // console.log('TEXT %O', node, data, interpolated);\r\n                \r\n                return node;\r\n            }\r\n            \r\n            private processCommentNode(node: Node&Comment): Node&Comment {  // Node.COMMENT_NODE === 8\r\n                if (!{ '8': true }[ node.nodeType ]) return node;  // https://developer.mozilla.org/en-US/docs/Web/API/Node/nodeType\r\n                // var attrs: NamedNodeMap = node.attributes;\r\n                \r\n                // console.log('COMMENT %O', node);\r\n                // for (let i = 0, len = attrs.length; i < len; i++) this.parseChildAttr(attrs[i], i, attrs);\r\n                // this.parse(node.childNodes);\r\n                \r\n                return node;\r\n            }\r\n            \r\n            private processAttributeNode(node?: Node&Attr, ...more: (Node&Attr)[]): Node&Attr {\r\n                if ( !node ) return node;\r\n                if ( !{ [Node.ATTRIBUTE_NODE]: true }[ node.nodeType ] ) return node;\r\n                if ( !this.modules.attribute.has(node.name) ) return this.processAttributeNode(...more);\r\n                var { core, modules = {} } = this;\r\n                var { $nodes, $instances } = core;\r\n                var { attribute: $attributes = new Map() } = modules;\r\n                var { nodeType, name } = node, metadata = $attributes.get(name);\r\n                var { Sandbox, Class, selector }: IMetadata = metadata;\r\n                var owner = this.getOwnerInstance(node);\r\n                \r\n                let sandbox = new Sandbox({ type: nodeType, target: node, core });  // must be constructed after node is emptied to avoid mutation events.\r\n                let instance = new Class(sandbox);\r\n                let data: IReferenceInstance = { node, instance, selector, sandbox, owner, ...metadata, occupants: null, occupee: null, $occupants: null };\r\n                $nodes.set(node, data);\r\n                $instances.set(instance, data);\r\n                \r\n                if ( !more.length ) return node;\r\n                return this.processAttributeNode(...more);\r\n            }\r\n            private getOwnerInstance(node: Node&Attr, owner: Element = node.ownerElement): any {\r\n                if ( !owner ) return null;\r\n                if ( !this.core.$nodes.has(owner) ) return this.getOwnerInstance(null, owner.parentElement);\r\n                var { core } = this;\r\n                var { $nodes } = core, metadata = $nodes.get(owner);\r\n                var { instance } = metadata;\r\n                \r\n                return instance;\r\n            }\r\n            \r\n        }\r\n        \r\n        class Dependencies {};  // mock\r\n        var director = new Director({ channels, Dependencies, ActionHandlers, StateHandlers });\r\n        var config = {\r\n            environment: document,\r\n            director,\r\n            Sandbox,\r\n            bootstrap: new Bootstrap({}),\r\n            // selector: `[data-${SELECTOR}]`,\r\n            // datasets: '[data-attribute]',\r\n            // decorators: { services: Sandbox, components: Sandbox },\r\n        };\r\n        \r\n        @Service({}) class TestService {\r\n            \r\n            constructor(private $: any) {\r\n                console.log(`@Service({ id: 'foreach' })`, $);\r\n            }\r\n            \r\n        }\r\n        \r\n        @Attribute({ selector: 'foreach' }) class TemplateRepeatDirective {\r\n            \r\n            constructor(private $: any) {\r\n                console.log(`@Attribute({ selector: 'foreach' })`, $);\r\n            }\r\n            \r\n        }\r\n        \r\n        V(TestService);\r\n        V(ModalComponent);\r\n        V(TemplateRepeatDirective);\r\n        alert(' | \\n | Look at the comment below me! \\n | \\n V ');\r\n        /*\r\n            {   [Element]:   [ Element[] ]:    [selector]  }\r\n               \\            /\\             \\  /\r\n                \\ keyRefTo /  \\  keyRefTo   \\/ <-keyRefTo\r\n            ...\r\n            $selectors: Map<selector, Element[]>\r\n            $types: Map<Element[], Element>\r\n            $elements: Map<Element, selector>\r\n            let selector = $a.get( b.get( c.get(x) ) )\r\n            OR\r\n            $selectors: Map<selector, LinkedList<Element>>\r\n            ...\r\n        */ \r\n        \r\n        window.addEventListener( 'load', () => console.log('ON-LOAD?') );\r\n        window.addEventListener( 'load', () => V.config(config) );\r\n        \r\n    }\r\n    \r\n})(environment);\r\n\r\nexport { app };\r\n","\r\nimport { app } from './app/app';\r\nconsole.log(`app:`, app);\r\n"],"sourceRoot":""}