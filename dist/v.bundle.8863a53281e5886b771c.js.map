{"version":3,"sources":["webpack:///./src/@motorman/vertices/core/defaults.js","webpack:///./src/@motorman/vertices/core/element-engine.ts","webpack:///./src/@motorman/vertices/core/core.ts","webpack:///./src/@motorman/vertices/core/api.js","webpack:///./src/@motorman/vertices/core/decorators.ts","webpack:///./src/@motorman/vertices/index.ts","webpack:///./src/@motorman/core/utilities/utilities.ts","webpack:///./src/@motorman/core/utilities/patterns/other/deferred.ts","webpack:///./src/@motorman/core/utilities/index.ts"],"names":["DefaultServicesSandbox","utils","DefaultComponentSandbox","element","Sandbox","director","component","pipes","type","name","handler","operators","ops","operands","filter","has","map","operator","bind","Class","thus","this","observedAttributes","watchers","$watchers","Map","listeners","domHandlers","subscriptions","edaHandlers","pipeOperators","template","Element","HTMLElement","super","$utils","$","dataset","dom","eda","attributes","item","mapSubscriptions","init","interpolate","value","innerHTML","forEach","k","bindAttribute","bindListener","bindMessageHandler","Object","defineProperty","get","getAttribute","set","v","setAttribute","addEventListener","removeEventListener","channel","channels","in","pipe","subscribe","content","createdCallback","attachedCallback","attrName","oldVal","newVal","all","$watcher","attributeChangedCallback","call","detachedCallback","unbindListener","unbindMessageHandler","options","customElements","prepare","define","DEFAULT_CONFIG","selector","datasets","bootstrap","target","data","slug","behavior","components","split","children","document","resolveScope","parent","child","parentNode","Array","prototype","decorators","services","Vertex","Vertices","Core","Facade","V","register","apply","arguments","dConfiguration","pConfiguration","promise","dInitialization","pInitialization","engine","elements","configuration","then","console","log","config","resolve","Error","arm","extend","Service","id","constructor","service","Constructor","Component","definition","startServices","startService","_service","ServiceSandbox","warn","ComponentSandbox","instance","details","core","configure","registerService","Directive","registerComponent","DEFAULT_DESCRIPTOR","writable","configurable","enumerable","attr","descriptor","push","watch","message","concat","Set","CSV","collection","fields","delimiter","$table","$values","$lines","matrix","lines","span","keys","reduce","o","x","i","width","length","j","height","y","row","rows","col","columns","_id","field","record","column","line","Math","max","join","tabs","replace","csv","slice","array","key","datum","Utilities","object","first","more","null","undefined","0","splat","window","setTimeout","timeout","delay","params","clearTimeout","fn","timer","context","threshhold","scope","deferTimer","now","Date","last","invoke","c","r","random","toString","s","str","a","b","val","escapeHTML","re","matcher","RegExp","string","match","result","values","len","url","createElement","href","hash","host","hostname","origin","pathname","port","protocol","search","methods","shift","sortByKey","size","unit","toFixed","$bytes","$KB","$MB","$GB","$TB","$PB","bytes","KB","MB","GB","TB","PB","auto","Infinity","n","Number","round","Deferred","_resolve","_reject","Promise","exe","reject"],"mappings":"wGA2DA,SAASA,EAAuBC,GAAS,OAAOA,EAChD,SAASC,EAAwBC,GAAW,OAAOA,ECvDnD,MAAM,EAEF,YAAoBC,EAAsBC,GAAtB,KAAAD,UAAsB,KAAAC,WAElC,iBAAiBC,EAAWC,GAAO,KAAEC,EAAI,KAAEC,EAAI,QAAEC,EAASC,UAAWC,IACzE,IACIC,EADYN,EAAMO,OAAQ,EAAGL,UAAWG,EAAIG,IAAIN,IAC3BO,IAAK,EAAGP,OAAMQ,cAAeA,EAASX,EAAUG,GAAOH,IAChF,MAAO,CAAEE,OAAMC,OAAMC,QAASA,EAAQQ,KAAKZ,GAAYK,UAAWE,GAG9D,QAASM,EAAOf,EAASC,G,MACzBe,EAAOC,MACP,mBAAEC,EAAqB,GAAIC,SAAUC,EAAY,IAAIC,KAAUN,GAC7DO,UAAWC,EAAc,IAAOR,GAChCS,cAAeC,EAAc,GAAIlB,UAAWmB,EAAgB,IAAOX,GACrE,SAAEY,EAAW,IAAOZ,EAExB,OAAO,QAAMa,UAAgBC,YAazB,cACIC,QAZM,KAAAC,OAAoB,IAAI,IAC1B,KAAAC,EAAoB,IAAIhC,EAAQiB,KAAMhB,GACtC,KAAA0B,SAAmBA,EACnB,KAAAzB,UAAiB,IAAIa,EAAME,KAAKe,GAChC,KAAAV,UAA2BC,EAC3B,KAAAC,cAAuBC,EACvB,KAAAlB,UAAmBmB,EACnB,KAAAN,UAA8BA,EAMlC,IAAI,UAAElB,EAAS,QAAE+B,EAASX,UAAWY,EAAKV,cAAeW,EAAK5B,UAAWC,GAAQS,MAC3EC,mBAAoBkB,GAAeR,EACrCN,EAAYY,EAAItB,IAAK,EAAGR,OAAMC,OAAMC,cAAc,CAAGF,OAAMC,OAAMC,QAASA,EAAQQ,KAAKZ,MACvFsB,EAAgBW,EAAIvB,IAAMyB,GAASrB,EAAKsB,iBAAiBpC,EAAWM,EAAK6B,IAO7E,OALApB,KAAKK,UAAYY,EACjBjB,KAAKO,cAAgBW,EACrBlB,KAAKH,KAAKZ,EAAWkC,EAAYd,EAAWE,GACxCtB,EAAUqC,MAAMrC,EAAUqC,KAAKN,GAE5BhB,KAfX,cAAgB,OAAOA,KAAKc,OAAOS,YAAYvB,KAAKU,SAA7BV,CAAuCA,KAAKf,WACnE,YAAYuC,GAAcxB,KAAKyB,UAAYD,EAiBnC,KAAKvC,EAAgBkC,EAAsBd,EAA0BE,GAKzE,OAJAY,EAAWO,QAAUC,GAAM3B,KAAK4B,cAAc3C,EAAW0C,IACzDtB,EAAUqB,QAAU/B,GAAQK,KAAK6B,aAAa5C,EAAWU,IACzDY,EAAcmB,QAAU/B,GAAQK,KAAK8B,mBAAmB7C,EAAWU,IAE5DK,KAEH,UACA,cAAcf,EAAgB0C,GAElC,OADAI,OAAOC,eAAe/C,EAAW0C,EAAG,CAAEM,IAAK,IAAMjC,KAAKkC,aAAaP,GAAIQ,IAAMC,GAAMpC,KAAKqC,aAAaV,EAAGS,KACjGpC,KAEH,aAAaf,EAAgBU,GACjC,IAAI,KAAER,EAAI,QAAEE,GAAYM,EACxBK,KAAKsC,iBAAiBnD,EAAME,GAAS,GAEjC,eAAeJ,EAAgBU,GACnC,IAAI,KAAER,EAAI,QAAEE,GAAYM,EACxBK,KAAKuC,oBAAoBpD,EAAME,GAAS,GAEpC,mBAAmBJ,EAAgBU,GACvC,IAAI,KAAER,EAAI,QAAEE,EAAO,UAAEC,GAAcK,GAAK,EAAEoB,GAAMf,KAAMwC,EAAUzB,EAAE0B,SAAStD,GAC3E4B,EAAE2B,GAAGF,GAASG,QAAQrD,GAAWsD,UAAUvD,GAEvC,qBAAqBJ,EAAgBU,GACzC,IAAI,KAAER,EAAI,QAAEE,GAAYM,GAAK,EAAEoB,GAAMf,KAIzC,kBACI,IAAI,UAAEf,EAAS,QAAE4D,GAAY7C,KACzBf,EAAU6D,iBAAiB7D,EAAU6D,kBACzC9C,KAAK6C,QAAUA,EAEnB,mBACI,IAAI,UAAE5D,EAAS,QAAE4D,GAAY7C,KACzBf,EAAU8D,kBAAkB9D,EAAU8D,mBAC1C/C,KAAK6C,QAAUA,EAEnB,yBAAyBG,EAAUC,EAAQC,GACvC,IAAI,UAAEjE,EAAS,QAAE4D,EAAO,UAAE1C,GAAcH,KACVX,EAAUJ,EAA3B,IAAI+D,MACAG,EAAMlE,EAAb,OACNmE,EAAWjD,EAAU8B,IAAIe,GAEzB/D,EAAUoE,0BAA0BpE,EAAUoE,yBAAyBL,EAAUC,EAAQC,GACzFC,GAAKA,EAAIG,KAAKrE,EAAW+D,EAAUC,EAAQC,GAC3C7D,GAASA,EAAQiE,KAAKrE,EAAWiE,EAAQD,GACzCG,GAAUA,EAAS/D,QAAQiE,KAAKrE,EAAWiE,EAAQD,GACvDjD,KAAK6C,QAAUA,EAEnB,mBACI,IAAI,UAAE5D,EAAS,UAAEoB,EAAS,cAAEE,GAAkBP,KAC1Cf,EAAUsE,kBAAkBtE,EAAUsE,mBAC1ClD,EAAUqB,QAAU/B,GAAQK,KAAKwD,eAAevE,EAAWU,IAC3DY,EAAcmB,QAAU/B,GAAQK,KAAKyD,qBAAqBxE,EAAWU,OAlFlEM,mBAA+BA,E,EAwF9C,OAAOb,EAAMU,EAAO4D,GAChB,GAAOC,eAAe1B,IAAI7C,GAAQ,OAAOY,KACzC,IAAI,QAAEjB,EAAO,SAAEC,GAAagB,KACxBW,EAAUX,KAAK4D,QAAQ9D,EAAOf,EAASC,GAG3C,OAFA2E,eAAeE,OAAOzE,EAAMuB,EAAS+C,GAE9B1D,MChHf,IAAI,EAAW,IFoDf,QEnDI8D,EAAiB,CACjB9E,SAAQ,EACR+E,SAAU,WACVC,SAAU,gBACVC,UFTJ,SAASA,EAAUC,GACf,IAAIpF,EAAUoF,EAEVC,GADWnE,KAAK+D,SACTjF,EAAQkC,SAAW,IAE1BoD,EAAOD,EAAKE,UAAYvF,EAAQsD,GAAK,GACrCkC,EAAaF,EAAKG,MAFb,YAGLC,EAAW1F,EAAQ0F,SAChBC,SAEP,IAAIC,EAAe,SAAsBC,EAAQC,GACnBA,EAAMC,aAAeF,GACvBV,EAAUX,KAAKtD,KAAM4E,IAC/C/E,KAAKG,KAAMlB,GAObgG,MAAMC,UAAUrD,QAAQ4B,KAAKkB,EAAUE,GACjCN,GAAME,EAAW5C,QAAQ1B,KAAKiE,UAAUpE,KAAKG,KAAMlB,KEXzDkG,WAAY,CAAEC,SAAUtG,EAAwB2F,WAAYzF,ICPhE,IA6CIqG,EAAS,IAAI,SAAUC,EAASC,EAAMC,GAOtC,OALQA,EAAO/B,MAAM,SAASgC,IAC1B,OAAItF,gBAAgBsF,EAAU,IAAMH,EAASC,EAAMC,GAC5CC,EAAEC,SAASC,MAAMF,EAAGG,aAC5B,IAAIL,GALE,CDnCb,MAYI,cAXQ,KAAAM,eAAgC,IAAI,IACpC,KAAAC,eAA+B3F,KAAK0F,eAAeE,QACnD,KAAAC,gBAAiC,IAAI,IACrC,KAAAC,gBAAgC9F,KAAK6F,gBAAgBD,QACrD,KAAAhH,MAAmB,IAAI,IACvB,KAAAmH,OAAwB,IAAI,EAAclH,EAAyB,GACnE,KAAAoG,SAAgB,GAChB,KAAAX,WAAkB,GAClB,KAAA0B,SAAgB,GAChB,KAAAC,cAAqBnC,EAGzB,IAAI,gBAAEgC,EAAe,SAAEE,GAAahG,KAQpC,OANA8F,EACKI,KAAOxC,GAAYyC,QAAQC,IAAI,OAAQ1C,IAE5C1D,KAAK2F,eACAO,KAAOG,GAAWrG,KAAK6F,gBAAgBS,QAAQ,CAAEpC,OAAQO,YAEvDzE,KAGX,KAAK0D,GACD,IAAKA,EAAS,MAAM6C,MAAM,6CAM1B,OALAvG,KAAKwG,IAAI9C,GAKF1D,KAGX,UAAUqG,GAIN,OAHArG,KAAKpB,MAAM6H,OAAOzG,KAAKiG,cAAeI,GACtCrG,KAAK+F,OAAS,IAAI,EAAc/F,KAAKiG,cAAcjB,WAAWV,WAAYtE,KAAKiG,cAAcjH,UAC7FgB,KAAK0F,eAAeY,QAAQtG,KAAKiG,eAC1BjG,KAAKpB,MAAM6H,OAAO,GAAKzG,KAAKiG,eAEvC,gBAAgBS,GACZ,IAAIC,EAAKD,EAAQE,YACbC,EAAU,CAAEF,KAAIG,YAAaJ,GAGjC,OAFA1G,KAAKiF,SAAS0B,GAAM3G,KAAKiF,SAAS0B,IAAOE,EAElC7G,KAEX,kBAAkB2G,EAAII,GAClB,IAAI9H,EAAY,CAAE0H,KAAIG,YAAaC,GAEnC,OADA/G,KAAKsE,WAAWqC,GAAM3G,KAAKsE,WAAWqC,IAAO1H,EACtCe,KAEX,OAAOgH,GACH,IAAI,KAAE5H,EAAI,MAAEU,EAAK,QAAE4D,GAAYsD,GAC3B,eAAEtB,GAAmB1F,MAAQ4F,QAASD,GAAmBD,EAK7D,OAHAC,EACKO,KAAOG,GAAWrG,KAAK+F,OAAOlC,OAAOzE,EAAMU,EAAO4D,IAEhD1D,KAGX,IAAI0D,GACA,IAAI2C,EAASrG,KAAKiG,cACdhC,EAAYoC,EAAOpC,UACnBC,EAASR,EAAQQ,OAGrBlE,KAAKiH,gBACLhD,EAAUX,KAAK+C,EAAQnC,EAAQlE,MAGnC,gBACiBA,KAAKiG,cAAmCjB,WACrD,IAAK,IAAI2B,KAAM3G,KAAKiF,SAAUjF,KAAKkH,aAAalH,KAAKiF,SAAS0B,GAAKA,EAAI3G,KAAKiF,UAC5E,OAAOjF,KAEH,aAAamH,EAAUR,EAAI1B,GAC/B,IAAI,cAAEgB,EAAa,MAAErH,GAAUoB,MAAM,SAAEhB,EAAQ,WAAEgG,GAAeiB,GAC1DhB,SAAUmC,EAAiBzI,GAA2BqG,EAG9C,IAAI0B,EAFJS,EAASL,aACT,IAAIM,EAAexI,EAAOI,IAGhCsC,OAOZ,UAAUxC,EAASqF,EAAMwC,GACrB,IAAK7H,IAAY6H,EAAI,OAAO,KAC5B,IAAK3G,KAAKsE,WAAWqC,GAAK,OAAO3G,KAAKpB,MAAMuH,QAAQkB,KAAK,2BAA6BV,GAAe,KAErG,IAAMV,cAAeI,GAAWrG,MAC5B,SAAEhB,EAAQ,WAAEgG,GAAeqB,GACzB/B,WAAYgD,EAAmBzI,GAA4BmG,EAK7DuC,EAAW,IAAIR,EAHH/G,KAAKsE,WAAWqC,GACNG,aACZ,IAAIQ,EAAiBxI,EAASE,IAIxCwI,EAAU,CACVb,GAAIA,EACJY,SAAUA,EACVzI,QAASA,EACTqF,KANAA,EAAOA,GAAQ,IAUnB,OAFAoD,EAASjG,KAAK6C,GAEPqD,KC3HF,SAAgBC,GAuCzB,OARAzH,KAAKpB,MAAQ6I,EAAK7I,MAClBoB,KAAKqG,OA7BL,WACI,OAAOoB,EAAKC,UAAUlC,MAAMiC,EAAMhC,YA6BtCzF,KAAK6G,QA3BL,SAAiBH,GAEb,OADAe,EAAKE,gBAAgBnC,MAAMiC,EAAMhC,WAC1BzF,MA0BXA,KAAKlB,QAxBL,SAAiBkI,GAEb,OADAS,EAAK5D,OAAOmD,GACLhH,MAuBXA,KAAKf,UArBL,SAAmB0H,EAAIiB,GAEnB,OADAH,EAAKI,kBAAkBrC,MAAMiC,EAAMhC,WAC5BzF,MAoBXA,KAAKuF,SAjBL,SAAkBnE,EAAMtB,GAGpB,OADAE,KADW,CAAE,OAAU,YAAa,SAAY,UAAW,OAAUoB,EAAKjC,aAAeiC,IAC9EkC,KAAKtD,KAAMoB,EAAMtB,GACrBE,MAeXA,KAAKiE,UAZL,SAAmBP,GAEf,OADA+D,EAAKnG,KAAKoC,GACH1D,MAYJA,QC1CP8H,EAAqB,CAAEC,UAAU,EAAMC,cAAc,EAAMC,YAAY,GAE3E,SAAS,EAAQT,EAAc9D,GACvB8D,EAAU,OAAH,wBAAQA,GAAO,CAAE9D,UAASvE,KAAM,YAA3C,IACI,SAAEuB,GAAa8G,EAInB,OAAO,SAAa1H,GAEhB,OADAA,EAAMY,SAAWA,EACV,OAAP,wBAAY8G,GAAO,CAAE1H,WAM7B,SAASoI,EAAKA,GAEV,OAAO,SAAahE,EAAa9E,EAAc+I,GAC3C,IAAI,YAAEvB,GAAgB1C,EAClBiE,EAAa,OAAH,wBAAQA,GAAeL,GAErClB,EAAY3G,mBAAqB2G,EAAY3G,oBAAsB,GACnE2G,EAAY3G,mBAAmBmI,KAAKhJ,IAK5C,SAASiJ,EAAMH,GAEX,OAAO,SAAahE,EAAa9E,EAAc+I,GAC3C,IAAI,YAAEvB,GAAgB1C,GAEhB1C,MAAOnC,IADT8I,EAAa,OAAH,wBAAQA,GAAeL,GACZK,GAKzB,OAHAvB,EAAY1G,SAAW0G,EAAY1G,UAAY,IAAIE,IACnDwG,EAAY1G,SAASiC,IAAI+F,EAAM,CAAEA,OAAM9I,OAAMC,YAEtC8I,GAIf,SAAS9I,EAAQF,GAEb,OAAO,SAAa+E,EAAa9E,EAAc+I,GAC3C,IAAI,YAAEvB,GAAgB1C,GAEhB1C,MAAOnC,IADT8I,EAAa,OAAH,wBAAQA,GAAeL,GACZK,GAKzB,OAHAvB,EAAYvG,UAAYuG,EAAYvG,WAAa,GACjDuG,EAAYvG,UAAU+H,KAAK,CAAEjJ,OAAMC,OAAMC,YAElC8I,GAIf,SAASG,EAAQ9F,EAAiBlD,GAC9B,IAAIJ,EAAQ,GAAGqJ,OAAOjJ,GAAYC,EAAM,IAAIiJ,IAAItJ,GAEhD,OAAO,SAAagF,EAAa9E,EAAc+I,GAC3C,IAAI,YAAEvB,GAAgB1C,GAEhB1C,MAAOnC,IADT8I,EAAa,OAAH,wBAAQA,GAAeL,GACZK,GAKzB,OAHAvB,EAAYrG,cAAgBqG,EAAYrG,eAAiB,GACzDqG,EAAYrG,cAAc6H,KAAK,CAAEjJ,KAAMqD,EAASpD,OAAMC,UAASC,UAAWC,IAEnE4I,GAGf,SAASxF,EAAK/C,GAEV,OAAO,SAAasE,EAAa9E,EAAc+I,GAC3C,IAAI,YAAEvB,GAAgB1C,EAClBiE,EAAa,OAAH,wBAAQA,GAAeL,GAKrC,OAHAlB,EAAYtH,UAAYsH,EAAYtH,WAAa,GACjDsH,EAAYtH,UAAU8I,KAAK,CAAExI,WAAUR,SAEhC+I,GC/Ef,2Q,6BCAA,IAAIM,EAAM,IAAI,MAGV,UAAUC,EAAYC,EAAQC,GAM1B,IAAIC,EAAS,IAAIzI,IACb0I,EAAU,IAAI1I,IACd2I,EAAS,IAAI3I,IACb4I,EAAS,GACTC,EAAQ,GACRC,EAAO,EAENP,IAAQA,EAAS5G,OAAOoH,KAAMT,EAAWU,OAAQ,CAACC,EAAGC,IAAO,OAAD,wBAAMD,GAAMC,GAAM,MAElF,IAAK,IAAIC,EAAI,EAAGC,EAASd,EAAWe,OAAQF,EAAIC,EAAQD,IACxD,IAAK,IAAIG,EAAI,EAAGC,EAAShB,EAAOc,OAAYC,EAAIC,EAAQD,KAC9D,SAAiBlI,GAAQ8H,EAAGM,GAAIC,EAAKN,EAAGO,EAAMC,EAAKL,EAAGM,GAC5C,IAAIC,EAAMX,EAAGY,EAAQH,EACjBI,EAAStB,EAAO5G,IAAIgI,IAAQ,CAAEA,OAC9BG,EAAStB,EAAQ7G,IAAI8H,IAAQ,GAC7BM,EAAOtB,EAAO9G,IAAIqH,IAAM,IAExB,CAAE,WAAa,IAAQ9H,KAASA,EAAQ,IAC5CwH,EAAOM,GAAKN,EAAOM,IAAM,GACzBN,EAAOM,GAAGM,GAAKO,EAAOD,GAASE,EAAOd,GAAKe,EAAKT,GAAKpI,EAErDqH,EAAO1G,IAAI8H,EAAKE,GAChBrB,EAAQ3G,IAAI4H,EAAKK,GACjBrB,EAAO5G,IAAImH,EAAGe,GAEdnB,EAAOoB,KAAKC,IAAI/E,MAAM,KAAM,CAAE0D,EAAMa,EAAIN,OAAQ,GAAGjI,IAAQiI,SAC3DR,EAAMK,GAAKe,EAAKG,KAAK,KAf/B,CAiBS9B,EAAWa,GAAIZ,EAAOe,IAAM,CAACH,EAAGG,GAAIhB,EAAWa,GAAIA,EAAGb,EAAYC,EAAOe,IAE5E,IAAIe,EAAO3F,MAAMU,MAAM,KAAM,CAAEiE,OAAQP,IACnCN,EAAY,CACZ,KAAM6B,EAAK9K,IAAK,IAAM,MACtB,EAAM8K,EAAK9K,IAAK,IAAM,KACtB,UAAa,IACdiJ,GAAY4B,KAAK,IAKpB,MAHU,CADI7B,EAAO6B,KAAK,MACJjC,OAAOU,GAAOuB,KAAK,MAC3BE,QAAQ,OAAQ,IAAI9B,KAKtC,MAAM+B,GACF,IAAI1B,EAAQ0B,EAAIpG,MAAM,WAAaoE,GAAWM,EAAON,EAASA,EAAOpE,MAAM,QAejF,OAfiG0E,EAAM2B,MAAM,GACvFxB,OAEhB,SAAmBT,EAAQkC,EAAOR,EAAMR,EAAKZ,GACzC,IAAII,EAAIV,EAAOS,OAGf,SAAkBiB,EAAMhB,EAAGyB,EAAKvB,EAAGZ,GAC/B,IAAiCnH,EAApB6I,EAAK9F,MAAM,QAAwBgF,GAAIwB,EAAQ,CAAE,CAACD,GAAMtJ,GACrE,OAAO,OAAP,wBAAY6H,GAAM0B,IALUlL,KAAKG,KAAMqK,GAAO,IAQlD,OAPAQ,EAAMzC,KAAKiB,GAOJwB,GAXuBhL,KAAKG,KAAM2I,GAAS,MAkF9D,MAAMqC,EAIF,cACI,OAJJ,KAAAvC,IAAWA,EACX,KAAAtC,QAAeA,QAGJnG,KAGX,QAEA,OAAOiL,EAAQC,KAAWC,GACtB,IAAI9B,EAAItH,OAAOoH,KAAK+B,GAAO9B,OAAQ,CAACC,EAAG1H,KAAO0H,EAAE1H,GAAKuJ,EAAMvJ,GAAI0H,GAAI4B,GACnE,OAAIE,EAAK1B,OAAezJ,KAAKyG,OAAOwE,KAAWE,GACxC9B,EAGX,GAAG7H,GAEC,OADW,CAAE4J,MAAM,EAAMC,WAAW,EAAM,IAAI,EAAMC,GAAG,GAAS9J,GAIpE,QAAQnC,KAAYkM,GAEhB,OADaC,OAAOC,WAAWpM,KAAYkM,GAI/C,QAAQlM,KAAYkM,GAEhB,OADavL,KAAK0L,QAAQrM,EAAS,KAAMkM,GAa7C,SAASlM,EAASsM,KAAUJ,GACxB,IAAIxL,EAAOC,KAAM0L,EAAU3L,EAAK2L,SAEhC,SAASvJ,KAAOyJ,GACZ,IAAMF,EAAU,OAAOvF,QAAQC,IAAI,SACnC/G,EAAQiE,KAAKtD,QAAS4L,GACtBF,EAAU3L,EAAK2L,QAAQvJ,EAAKwJ,KAAUJ,KALGI,KAAUJ,GAavD,OANA,WAGI,OAFAM,aAAaH,KACbA,EAAU,OAOlB,SAASI,EAAIH,GACT,IAAII,EAAQ,KAQZ,OANA,YAAsBR,GAClB,IAAIS,EAAUhM,KACd6L,aAAaE,GACbA,EAAQN,WAAY,IAAMK,EAAGxI,KAAK0I,KAAYT,GAAQI,IAM9D,SAASG,EAAIG,EAAYC,GACrB,IAA0CC,EAAtCF,EAAaA,GAAc,IAW/B,OATA,YAAsBV,GAClB,IAAIS,EAAUE,GAASlM,KAAMoM,GAAO,IAAKC,KAASC,EAAOF,EACrDG,EAAS,KAAQT,EAAGxI,KAAK0I,KAAYT,GAAQe,EAAOF,GAExD,IAAKE,GAAQF,GAH0DE,EAAOL,EAGnD,OAAOM,IAClCV,aAAaM,GACbA,EAAaV,WAAWc,EAAQN,IAMxC,OAKI,MAAO,uCAAuCvB,QAAQ,SAJtD,SAAiB8B,GACjB,IAAIC,EAAoB,GAAhBnC,KAAKoC,SAAgB,EAC7B,OADyC,KAALF,EAAWC,EAAS,EAAJA,EAAU,GACrDE,SAAS,OAKtB,WAAWC,GACP,OAAOA,EAAElC,QAAQ,WAAW,SAAU8B,GAClC,MAAO,CACH,IAAK,QACL,IAAK,SACL,IAAK,OACL,IAAK,QACPA,MAQV,YAAYK,GACR,OAAQxD,GACGwD,EAAInC,QAAQ,cAAe,CAACoC,EAAGC,KAClC,IAAIN,EAAIpD,EAAE0D,GAAIC,EAAoB,iBAANP,GAA+B,iBAANA,EAAiBA,EAAIK,EAC1E,OAAO9M,KAAKiN,WAAWD,KASnC,qBAAqBH,GACjB,OAAO,SAAqBxD,GACxB,OAAOwD,EAAInC,QAAQ,eAAe,SAAUoC,EAAGC,GAC3C,IAAIN,EAAIpD,EAAE0D,GACV,MADkC,iBAANN,GAA+B,iBAANA,EAAiBA,EAAIK,MAStF,YAAYD,GACJA,EAAMA,GAAO,GAAjB,IACIK,EAAK,wBACLC,EAAU,IAAIC,OAAOP,EAAInC,QAAQwC,EAAI,cAEzC,OAAO,SAAmBG,GACtB,IAAKA,EAAOC,MAAMH,GAAU,OAAO,EACnC,IACII,GADAF,EAASA,GAAU,IACHC,MAAMH,GACtBhE,EAAO0D,EAAIS,MAAMJ,GACjBM,EAASD,EAAO3C,MAAM,GACtBjL,EAAM,GAEV,GAAIwJ,GAAQqE,EACR,IAAK,IAAIjE,EAAI,EAAGkE,EAAMtE,EAAKM,OAAQF,EAAIkE,EAAKlE,IAAK,CAC7C,IAAIuB,EAAM3B,EAAKI,GAAGmB,QAAQ,UAAW,IACjCsC,EAAMQ,EAAOjE,GACbuB,IAAQkC,IAAKrN,EAAImL,GAAOkC,GAIpC,OAAOrN,GAIf,SAAS+N,GACL,IAAIZ,EAAIrI,SAASkJ,cAAc,KAG/B,OAFAb,EAAEc,KAAOF,EAEF,CACHG,KAAMf,EAAEe,KACRC,KAAMhB,EAAEgB,KACRC,SAAUjB,EAAEiB,SACZH,KAAMd,EAAEc,KACRI,OAAQlB,EAAEkB,OACVC,SAAUnB,EAAEmB,SACZC,KAAMpB,EAAEoB,KACRC,SAAUrB,EAAEqB,SACZC,OAAQtB,EAAEsB,QAIlB,UAAUzM,EAAGmL,EAAGC,GAIZ,OAAID,EAAEnL,GAAKoL,EAAEpL,GAAY,EACrBmL,EAAEnL,GAAKoL,EAAEpL,IAAY,EAClB,EAIX,mBAAmB0M,EAASvB,EAAGC,GAI3B,IAAIxD,EAAI,EACR,IADW8E,EAAUvJ,MAAMC,UAAU6F,MAAMtH,KAAK+K,GAAW,GAAK,GACnD,IAAN9E,GAAW8E,EAAQ5E,QAAQF,EAAI8E,EAAQC,QAAQhL,KAAKtD,KAAM8M,EAAGC,GACpE,OAAOxD,EAGX,gBAAgBJ,EAAM2D,EAAGC,GAerB,IAAIxD,EAAI,EACR,IADWJ,EAAOrE,MAAMC,UAAU6F,MAAMtH,KAAK6F,GAAQ,GAAK,GAC7C,IAANI,GAAWJ,EAAKM,QAAQF,EAAIvJ,KAAKuO,UAAUjL,KAAKtD,KAAMmJ,EAAKmF,QAASxB,EAAGC,GAC9E,OAAOxD,EAGX,YAAYiF,EAAMC,EAAO,QAgBrB,IAfA,IAAI1N,EAAIf,KAAK0O,QAAQ7O,KAAKG,MACtB2O,EAAS5N,EAAEyN,GAAQ,GAAII,EAAM7N,EAAE4N,EAAS,MAAOE,EAAM9N,EAAE6N,EAAM,MAAOE,EAAM/N,EAAE8N,EAAM,MAAOE,EAAMhO,EAAE+N,EAAM,MAAOE,EAAMjO,EAAEgO,EAAM,MAI5HvB,EAAS,CAAEyB,MAHH,GAAGN,UAGOO,GAHc,GAAGN,OAGbO,GAH4B,GAAGN,OAG3BO,GAH0C,GAAGN,OAGzCO,GAHwD,GAAGN,OAGvDO,GAHsE,GAAGN,OAGrEO,UAAMlE,GAC5CkC,EAAS,CAAEkB,KAAM,GAAIjN,MAAOgO,KAC5BxL,EAAW,CACf,CAAEyK,KAAM,QAASjN,MAAOmN,GACxB,CAAEF,KAAM,KAAMjN,MAAOoN,GACrB,CAAEH,KAAM,KAAMjN,MAAOqN,GACrB,CAAEJ,KAAM,KAAMjN,MAAOsN,GACrB,CAAEL,KAAM,KAAMjN,MAAOuN,GACrB,CAAEN,KAAM,KAAMjN,MAAOwN,IAEZzB,EAAO/L,MAAQ,MAAS,GAAKwC,EAASyF,QAAS8D,EAASvJ,EAASsK,QAK1E,OAJAd,EAAO+B,KAAO,GAAGhC,EAAO/L,SAAS+L,EAAOkB,OAIjCjB,EAAOiB,GAGlB,QAAQgB,GAAK,OAAOC,OAAQpF,KAAKqF,QAAQF,EAAI,OAAS,OAEtD,OAAOA,GAAK,SAAUA,GCjX1B,MAAMG,EAKF,cAJQ,KAAAC,SAAqB,OACrB,KAAAC,QAAoB,OACrB,KAAAlK,QAAsB,IAAImK,QAAY/P,KAAKgQ,IAAInQ,KAAKG,OAInD,IAAIsG,EAAS2J,GACjBjQ,KAAK6P,SAAWvJ,EAChBtG,KAAK8P,QAAUG,EAGnB,QAAQ9L,GAEJ,OADAnE,KAAK6P,SAAS1L,GACPnE,KAAK4F,QAEhB,OAAOzB,GAEH,OADAnE,KAAK8P,QAAQ3L,GACNnE,KAAK4F,SCxBpB,qE","file":"v.bundle.8863a53281e5886b771c.js","sourcesContent":["\r\nfunction bootstrap(target) {\r\n    var element = target;\r\n    var selector = this.selector;\r\n    var data = element.dataset || {};\r\n    var ex = /[\\s]+/img;\r\n    var slug = data.behavior || element.v || '';\r\n    var components = slug.split(ex);\r\n    var children = element.children;// element.querySelectorAll(selector);\r\n    (this, document, data, slug, components, children);\r\n    \r\n    var resolveScope = function resolveScope(parent, child) {\r\n        var isDirectDescendant = (child.parentNode === parent);\r\n        if (isDirectDescendant) bootstrap.call(this, child);\r\n    }.bind(this, element);\r\n    \r\n    // components.forEach(this.bootstrap.bind(this, element));\r\n    // Array.prototype.forEach.call(children, resolveScope);\r\n    \r\n    // ... or? ...\r\n    \r\n    Array.prototype.forEach.call(children, resolveScope);  // TODO: Optimize!!!\r\n    if (!!slug) components.forEach(this.bootstrap.bind(this, element));\r\n}\r\n\r\nfunction $bootstrap(root, medium) {\r\n    var scopeSelector = '[data-behavior]'\r\n      , $root = $(root)\r\n      , $parent = $root.find(scopeSelector)\r\n      , hasBehavior = $root.is(scopeSelector)\r\n      ;\r\n    var slug = $root.attr('data-behavior')\r\n      , formattedSlug = slug && slug.replace(/^[,;\\s]+|[,;\\s]+$/g, '').replace(/[,;\\s]+/g, '|').replace(/[|]+$/g, '') || ''\r\n      , moduleIds = $.unique(formattedSlug.split('|')).sort()\r\n      , scopeId = moduleIds.join(' ')\r\n      ;\r\n    var childMedium = medium.$spawn(new function ChildScope() { this.element = root; });\r\n    \r\n\r\n    var resolveBehavior = function resolveBehavior(scope, behavior, i, a) {\r\n        var scope = ($root.is('html')) ? document : scope;\r\n        this.start(behavior, scope, scopeId, childMedium);\r\n    }.bind(this, $root[0]);\r\n\r\n    var resolveChildren = function resolveChildren(i, scope) {\r\n        var $firstScope = $(scope);\r\n        if (!$($firstScope.parent()).is($parent)) {\r\n            autoRegisterModules.call(this, $firstScope, childMedium);\r\n        }\r\n\r\n    }.bind(this);\r\n\r\n    moduleIds.forEach(resolveBehavior);\r\n    $parent.each(resolveChildren);\r\n\r\n}\r\n\r\nclass DefaultDirector {}\r\n\r\nfunction DefaultServicesSandbox(utils) { return utils; }\r\nfunction DefaultComponentSandbox(element) { return element; }\r\n\r\nexport { bootstrap, $bootstrap, DefaultDirector, DefaultServicesSandbox, DefaultComponentSandbox };\r\n","\r\nimport { Utilities } from \"@motorman/core/utilities\";\r\n\r\ntype ListenerMap = { type: string, name: string, handler: (e: Event, ...splat: any[]) => any };\r\n\r\nclass ElementEngine {\r\n    \r\n    constructor(private Sandbox: any, private director: any) {}\r\n    \r\n    private mapSubscriptions(component, pipes, { type, name, handler, operators: ops }) {  // pipes:= { name: 'fn', operator: filter }[], ops:= Set<string>\r\n        var operators = pipes.filter( ({ name }) => ops.has(name) );  // eg: (new Set()).has(name)\r\n        var operands = operators.map( ({ name, operator }) => operator(component[name], component)  );  // eg: filter( fn, this )\r\n        return { type, name, handler: handler.bind(component), operators: operands };\r\n    }\r\n    \r\n    private prepare (Class, Sandbox, director) {\r\n        var thus = this;\r\n        var { observedAttributes = [], watchers: $watchers = new Map() } = Class;\r\n        var { listeners: domHandlers = [] } = Class;\r\n        var { subscriptions: edaHandlers = [], operators: pipeOperators = [] } = Class;\r\n        var { template = '' } = Class;\r\n        \r\n        return class Element extends HTMLElement {  // https://alligator.io/web-components/attributes-properties/\r\n            static observedAttributes: string[] = observedAttributes;\r\n            protected $utils: Utilities = new Utilities();\r\n            private $: typeof Sandbox = new Sandbox(this, director);\r\n            private template: string = template;\r\n            private component: any = new Class(this.$);\r\n            private listeners: ListenerMap[] = domHandlers;\r\n            private subscriptions: any[] = edaHandlers;\r\n            private operators: any[] = pipeOperators;\r\n            private $watchers: Map<string, any> = $watchers;\r\n            get content() { return this.$utils.interpolate(this.template)(this.component); }\r\n            set content(value: any) { this.innerHTML = value; }\r\n            \r\n            constructor() {\r\n                super();\r\n                var { component, dataset, listeners: dom, subscriptions: eda, operators: ops } = this;\r\n                var { observedAttributes: attributes } = Element;\r\n                var listeners = dom.map( ({ type, name, handler }) => ({ type, name, handler: handler.bind(component) }) );  // map each handler to a handler bound to \"component\"\r\n                var subscriptions = eda.map( (item) => thus.mapSubscriptions(component, ops, item) );  // map each handler to a handler bound to \"component\"\r\n                \r\n                this.listeners = dom;  // restore mapped array\r\n                this.subscriptions = eda;  // restore mapped array\r\n                this.bind(component, attributes, listeners, subscriptions);\r\n                if (component.init) component.init(dataset);\r\n                \r\n                return this;\r\n            }\r\n            \r\n            private bind(component: any, attributes: string[], listeners: ListenerMap[], subscriptions: ListenerMap[]) {\r\n                attributes.forEach( (k) => this.bindAttribute(component, k) );\r\n                listeners.forEach( (map) => this.bindListener(component, map) );\r\n                subscriptions.forEach( (map) => this.bindMessageHandler(component, map) );\r\n                \r\n                return this;\r\n            }\r\n            private unbind() {}\r\n            private bindAttribute(component: any, k: string) {\r\n                Object.defineProperty(component, k, { get: () => this.getAttribute(k), set: (v) => this.setAttribute(k, v) });\r\n                return this;\r\n            }\r\n            private bindListener(component: any, map: ListenerMap) {\r\n                var { type, handler } = map;\r\n                this.addEventListener(type, handler, false);\r\n            }\r\n            private unbindListener(component: any, map: ListenerMap) {\r\n                var { type, handler } = map;\r\n                this.removeEventListener(type, handler, false);\r\n            }\r\n            private bindMessageHandler(component: any, map: any) {\r\n                var { type, handler, operators } = map, { $ } = this, channel = $.channels[type];\r\n                $.in(channel).pipe(...operators).subscribe(handler);\r\n            }\r\n            private unbindMessageHandler(component: any, map: ListenerMap) {\r\n                var { type, handler } = map, { $ } = this;\r\n                // $.in(type).unsubscribe(handler);\r\n            }\r\n            \r\n            createdCallback() {\r\n                var { component, content } = this;\r\n                if (component.createdCallback) component.createdCallback();\r\n                this.content = content;\r\n            }\r\n            attachedCallback() {\r\n                var { component, content } = this;\r\n                if (component.attachedCallback) component.attachedCallback();\r\n                this.content = content;\r\n            }\r\n            attributeChangedCallback(attrName, oldVal, newVal) {\r\n                var { component, content, $watchers } = this;\r\n                var action = `[${attrName}]`, handler = component[action];\r\n                var any = `[*]`, all = component[any];\r\n                var $watcher = $watchers.get(attrName);\r\n                \r\n                if (component.attributeChangedCallback) component.attributeChangedCallback(attrName, oldVal, newVal);\r\n                if (all) all.call(component, attrName, oldVal, newVal);\r\n                if (handler) handler.call(component, newVal, oldVal);\r\n                if ($watcher) $watcher.handler.call(component, newVal, oldVal);\r\n                this.content = content;\r\n            }\r\n            detachedCallback() {\r\n                var { component, listeners, subscriptions } = this;\r\n                if (component.detachedCallback) component.detachedCallback();\r\n                listeners.forEach( (map) => this.unbindListener(component, map) );\r\n                subscriptions.forEach( (map) => this.unbindMessageHandler(component, map) );\r\n            }\r\n            \r\n        };\r\n    }\r\n    \r\n    define(name, Class, options?: any) {\r\n        if ( !!customElements.get(name) ) return this;\r\n        var { Sandbox, director } = this;\r\n        var Element = this.prepare(Class, Sandbox, director);\r\n        customElements.define(name, Element, options);\r\n        \r\n        return this;\r\n    }\r\n    \r\n}\r\n\r\nexport { ElementEngine };\r\n","\r\nimport { Utilities, Deferred } from '@motorman/core/utilities';\r\nimport { bootstrap, $bootstrap, DefaultDirector, DefaultComponentSandbox, DefaultServicesSandbox } from './defaults';\r\nimport { ElementEngine } from './element-engine';\r\n\r\nvar director = new DefaultDirector();\r\nvar DEFAULT_CONFIG = {  // ... defaults\r\n    director,\r\n    selector: '[data-v]' || '[data-behavior]',\r\n    datasets: '[v-attribute]',  // includes <script type=\"application/json\"> { items: [...] } </scrpt>\r\n    bootstrap: bootstrap,\r\n    decorators: { services: DefaultServicesSandbox, components: DefaultComponentSandbox, },\r\n};\r\n\r\nclass Core {\r\n    private dConfiguration: Deferred<any> = new Deferred();\r\n    private pConfiguration: Promise<any> = this.dConfiguration.promise;\r\n    private dInitialization: Deferred<any> = new Deferred();\r\n    private pInitialization: Promise<any> = this.dInitialization.promise;\r\n    private utils: Utilities = new Utilities();\r\n    private engine: ElementEngine = new ElementEngine(DefaultComponentSandbox, director);\r\n    private services: any = { };\r\n    private components: any = { };\r\n    private elements: any = { };\r\n    private configuration: any = DEFAULT_CONFIG;\r\n    \r\n    constructor() {\r\n        var { pInitialization, elements } = this;\r\n        \r\n        pInitialization\r\n            .then( (options) => console.log('INIT', options) )\r\n            ;\r\n        this.pConfiguration\r\n            .then( (config) => this.dInitialization.resolve({ target: document }) )\r\n            ;\r\n        return this;\r\n    }\r\n    \r\n    init(options) {\r\n        if (!options) throw Error(\"Vertices Core initialized without options\");\r\n        this.arm(options);\r\n        // this.registerComponent = this.utils.noop;\r\n        // this.registerService = this.utils.noop;\r\n        // this.dInitialization.resolve(options);\r\n        \r\n        return this;\r\n    }\r\n    \r\n    configure(config) {\r\n        this.utils.extend(this.configuration, config);\r\n        this.engine = new ElementEngine(this.configuration.decorators.components, this.configuration.director);\r\n        this.dConfiguration.resolve(this.configuration);\r\n        return this.utils.extend({ }, this.configuration);\r\n    }\r\n    registerService(Service) {\r\n        var id = Service.constructor;\r\n        var service = { id, Constructor: Service };\r\n        this.services[id] = this.services[id] || service;\r\n        \r\n        return this;\r\n    }\r\n    registerComponent(id, Component) {\r\n        var component = { id, Constructor: Component };\r\n        this.components[id] = this.components[id] || component;\r\n        return this;\r\n    }\r\n    define(definition) {\r\n        var { name, Class, options } = definition;\r\n        var { dConfiguration } = this, { promise: pConfiguration } = dConfiguration;\r\n        \r\n        pConfiguration\r\n            .then( (config) => this.engine.define(name, Class, options) )\r\n            ;\r\n        return this;\r\n    }\r\n    \r\n    arm(options) {  // automatically register modules\r\n        var config = this.configuration\r\n          , bootstrap = config.bootstrap\r\n          , target = options.target\r\n          ;\r\n        \r\n        this.startServices();\r\n        bootstrap.call(config, target, this);\r\n    }\r\n    \r\n    startServices() {\r\n        var config = this.configuration, decorators = config.decorators;\r\n        for (var id in this.services) this.startService(this.services[id], id, this.services);\r\n        return this;\r\n    }\r\n    private startService(_service, id, services) {\r\n        var { configuration, utils } = this, { director, decorators } = configuration;\r\n        var { services: ServiceSandbox = DefaultServicesSandbox } = decorators;\r\n        var Service = _service.Constructor\r\n          , sandbox = new ServiceSandbox(utils, director)\r\n          , service = new Service(sandbox)\r\n          ;\r\n        service.init();\r\n    }\r\n    \r\n    /**\r\n     * Gets called by this.configuration.bootstrap\r\n     * TODO: Rename `details` to `api` and provide an API for mapping, starting, stopping & destroying (etc) modules.\r\n     */\r\n    bootstrap(element, data, id) {\r\n        if (!element || !id) return null;\r\n        if (!this.components[id]) return this.utils.console.warn(\"Unregistered Component: \" + id) && null || null;\r\n        \r\n        var { configuration: config } = this\r\n          , { director, decorators } = config\r\n          , { components: ComponentSandbox = DefaultComponentSandbox } = decorators\r\n          ;\r\n        var component = this.components[id]\r\n          , Component = component.Constructor\r\n          , sandbox = new ComponentSandbox(element, director)\r\n          , instance = new Component(sandbox)\r\n          , data = data || { }\r\n          ;\r\n        var details = {\r\n            id: id,\r\n            instance: instance,\r\n            element: element,\r\n            data: data,\r\n        };\r\n        instance.init(data);\r\n        \r\n        return details;\r\n    }\r\n    \r\n}\r\n\r\nexport { Core };\r\n","\r\nimport { Core } from './core';\r\n\r\n\r\nvar Facade = function Facade(core) {\r\n    var thus = this;\r\n    \r\n    function configure() {\r\n        return core.configure.apply(core, arguments);\r\n    }\r\n    function service(Service) {\r\n        core.registerService.apply(core, arguments);\r\n        return this;\r\n    }\r\n    function element(definition) {\r\n        core.define(definition);\r\n        return this;\r\n    }\r\n    function component(id, Directive) {\r\n        core.registerComponent.apply(core, arguments);\r\n        return this;\r\n    }\r\n    \r\n    function register(item, Class) {\r\n        var type = { 'string': 'component', 'function': 'service', 'object': item.type }[ typeof item ];\r\n        this[type].call(this, item, Class);\r\n        return this;\r\n    }\r\n    \r\n    function bootstrap(options) {\r\n        core.init(options);\r\n        return this;\r\n    }\r\n    \r\n    // export precepts\r\n    this.utils = core.utils;\r\n    this.config = configure;\r\n    this.service = service;\r\n    this.element = element;\r\n    this.component = component;\r\n    this.register = register;\r\n    this.bootstrap = bootstrap;\r\n    \r\n    return this;\r\n};\r\n\r\n/**\r\n * API\r\n */\r\nvar Vertex = new (function Vertices(Core, Facade) {\r\n    \r\n    var V = Facade.call( function V() {\r\n        if (this instanceof V) return ( new Vertices(Core, Facade) );\r\n        return V.register.apply(V, arguments);\r\n    }, new Core() );\r\n    \r\n    return V;\r\n})(Core, Facade);\r\n\r\nexport { Vertex };\r\n","\r\nvar DEFAULT_DESCRIPTOR = { writable: true, configurable: true, enumerable: false };\r\n\r\nfunction Element(details: any, options?: any): any {\r\n    var details = { ...details, options, type: 'element' };\r\n    var { template } = details;\r\n    // var { templateUrl, template = require(templateUrl) } = details;\r\n    // console.log('@Element', details, templateUrl, template);\r\n    \r\n    return function get(Class: any): any {\r\n        Class.template = template;\r\n        return { ...details, Class };\r\n    };\r\n}\r\n\r\nfunction Service() {}\r\n\r\nfunction attr(attr?: string): any {\r\n    \r\n    return function get(target: any, name: string, descriptor: any): any {\r\n        var { constructor } = target;\r\n        var descriptor = { ...descriptor, ...DEFAULT_DESCRIPTOR };\r\n        \r\n        constructor.observedAttributes = constructor.observedAttributes || [ ];\r\n        constructor.observedAttributes.push(name);\r\n        \r\n        // return descriptor;\r\n    };\r\n}\r\nfunction watch(attr: string): any {\r\n    \r\n    return function get(target: any, name: string, descriptor: any): any {\r\n        var { constructor } = target;\r\n        var descriptor = { ...descriptor, ...DEFAULT_DESCRIPTOR };\r\n        var { value: handler } = descriptor;\r\n        \r\n        constructor.watchers = constructor.watchers || new Map();\r\n        constructor.watchers.set(attr, { attr, name, handler });\r\n        \r\n        return descriptor;\r\n    };\r\n}\r\n\r\nfunction handler(type: string): any {\r\n    \r\n    return function get(target: any, name: string, descriptor: any): any {\r\n        var { constructor } = target;\r\n        var descriptor = { ...descriptor, ...DEFAULT_DESCRIPTOR };\r\n        var { value: handler } = descriptor;\r\n        \r\n        constructor.listeners = constructor.listeners || [ ];\r\n        constructor.listeners.push({ type, name, handler });\r\n        \r\n        return descriptor;\r\n    };\r\n}\r\n\r\nfunction message(channel: string, operators?: any|any[]): any {\r\n    var pipes = [].concat(operators), ops = new Set(pipes);\r\n    \r\n    return function get(target: any, name: string, descriptor: any): any {\r\n        var { constructor } = target;\r\n        var descriptor = { ...descriptor, ...DEFAULT_DESCRIPTOR };\r\n        var { value: handler } = descriptor;\r\n        \r\n        constructor.subscriptions = constructor.subscriptions || [ ];\r\n        constructor.subscriptions.push({ type: channel, name, handler, operators: ops });\r\n        \r\n        return descriptor;\r\n    };\r\n}\r\nfunction pipe(operator: any): any {\r\n    \r\n    return function get(target: any, name: string, descriptor: any) {\r\n        var { constructor } = target;\r\n        var descriptor = { ...descriptor, ...DEFAULT_DESCRIPTOR };\r\n        \r\n        constructor.operators = constructor.operators || [ ];\r\n        constructor.operators.push({ operator, name });\r\n        \r\n        return descriptor;\r\n    };\r\n}\r\n\r\nexport { Element };\r\nexport { attr, watch };\r\nexport { handler };\r\nexport { message, pipe };\r\n","\r\nexport { Vertex as V } from './core';\r\nexport { Element, attr, watch, handler, message, pipe } from './core';\r\n","\r\nvar CSV = new class CSV {\r\n    \r\n    // JSON.stringify(value[, replacer[, space]])\r\n    stringify(collection, fields, delimiter) {  // Word Art Cloud: wordToWeight() & weightToWord()\r\n        /**\r\n         * Given: map.get(fields[i]).push( collection[j][ fields[i] ] )\r\n         * Then: every column (fields[i]) contains an equal number of values as any other column.\r\n         * Because: map.get(fields[i])[0] === collection[j][ fields[i] ]\r\n         */\r\n        var $table = new Map();  // Map { 0 => { a, b, c, ... } }\r\n        var $values = new Map();  // Map { a => [ x, y, z, ... ] }\r\n        var $lines = new Map();  // Map { 0 => [ x, y, z, ... ] }\r\n        var matrix = [ ];  // [ [a,b,c,...], [a,b,c,...], ... ]\r\n        var lines = [ ];\r\n        var span = 0;\r\n        \r\n        if (!fields) fields = Object.keys( collection.reduce( (o, x) => ({ ...o, ...x }), { } ) );  // gets all available keys across all objects in collection\r\n        \r\n        for (let i = 0, width  = collection.length; i < width;  i++)\r\n        for (let j = 0, height = fields.length;     j < height; j++)\r\n\t\t(function create(value, [x, y], row, i, rows, col, j, columns) {\r\n            var _id = x, field = col;\r\n            var record = $table.get(_id) || { _id };\r\n            var column = $values.get(col) || [ ];\r\n            var line = $lines.get(x) || [ ];\r\n            \r\n            if ({ 'undefined': true }[ value ]) value = '';\r\n            matrix[x] = matrix[x] || [ ];\r\n            matrix[x][y] = record[field] = column[x] = line[y] = value;\r\n            \r\n            $table.set(_id, record);  // ensure gets set first time\r\n            $values.set(col, column);  // ensure gets set first time\r\n            $lines.set(x, line);  // ensure gets set first time\r\n            \r\n            span = Math.max.apply(null, [ span, col.length, `${value}`.length ]);\r\n            lines[x] = line.join(',');\r\n            \r\n        })(collection[i][ fields[j] ], [i, j], collection[i], i, collection, fields[j], j, fields);\r\n        \r\n        var tabs = Array.apply(null, { length: span });\r\n        var delimiter = {\r\n            '\\t': tabs.map( () => '\\t' ),\r\n            '\\s': tabs.map( () => '\\s' ),\r\n            'undefined': [ ],\r\n        }[ delimiter ].join('');\r\n        var columns = fields.join(',');\r\n        var csv = [ columns ].concat(lines).join('\\n');\r\n        var csv = csv.replace(/,/img, `,${delimiter}`);\r\n        \r\n        return csv;\r\n    }\r\n    \r\n    parse(csv) {\r\n        var lines = csv.split(/\\n+/img), [ fields ] = lines, fields = fields.split(/,\\t*/), rows = lines.slice(1);\r\n\t\tvar collection = rows.reduce( getObject.bind(this, fields), [ ] );\r\n        \r\n        function getObject(fields, array, line, row, lines) {\r\n            var o = fields.reduce( getValue.bind(this, line), { } );\r\n            array.push(o);\r\n            \r\n            function getValue(line, o, key, i, fields) {\r\n                var values = line.split(/,\\s*/), value = values[i], datum = { [key]: value };\r\n                return { ...o, ...datum };\r\n            }\r\n            \r\n            return array;\r\n        }\r\n        \r\n\t\treturn collection;\r\n    }\r\n    \r\n};\r\n\r\n/**\r\n * @ URLComponents\r\n */\r\nclass URLComponents {\r\n    hash: string = '';\r\n    host: string = '';\r\n    hostname: string = '';\r\n    href: string = '';\r\n    origin: string = '';\r\n    pathname: string = '';\r\n    port: string = '';\r\n    protocol: string = '';\r\n    search: string = '';\r\n    \r\n    constructor(url) {\r\n        var parser = document.createElement('a');\r\n        parser.href = url;\r\n\r\n        this.hash = parser.hash;\r\n        this.host = parser.host;\r\n        this.hostname = parser.hostname;\r\n        this.href = parser.href;\r\n        this.origin = parser.origin;\r\n        this.pathname = parser.pathname;\r\n        this.port = parser.port;\r\n        this.protocol = parser.protocol;\r\n        this.search = parser.search;\r\n\r\n        return this;\r\n    }\r\n    \r\n}\r\n\r\nclass ParameterMap {\r\n    name: string = '';\r\n    value: string = '';\r\n    \r\n    constructor(str) {\r\n        var pair = str.split('=');\r\n        this.name = pair[0];\r\n        this.value = pair[1];\r\n        return this;\r\n    }\r\n    \r\n}\r\n\r\nclass QueryMap {\r\n    \r\n    constructor(q) {\r\n        var query = decodeURIComponent(q);\r\n        var exp = /[^\\?|\\&]([^=]+)\\=([^&]+)/g;\r\n        var res = query.match(exp);\r\n\r\n        for (var i = 0, len = res.length; i < len; i++) {\r\n            var map = new ParameterMap(res[i]);\r\n            this[map.name] = map.value;\r\n        }\r\n\r\n        return this;\r\n    }\r\n    \r\n}\r\n\r\nclass Utilities {\r\n    CSV: any = CSV;\r\n    console: any = console;\r\n    \r\n    constructor() {\r\n        return this;\r\n    }\r\n      \r\n    noop() {}\r\n    \r\n    extend(object, first?, ...more) {\r\n        var o = Object.keys(first).reduce( (o, k) => (o[k] = first[k], o), object );\r\n        if (more.length) return this.extend(object, ...more);\r\n        return o;\r\n    }\r\n    \r\n    is(value) {\r\n        var isnt = { null: true, undefined: true, '': true, 0: false }[ value ];\r\n        return !isnt;\r\n    }\r\n    \r\n    timeout(handler, ...splat) {\r\n        var cancel = window.setTimeout(handler, ...splat);\r\n        return cancel;\r\n    }\r\n    \r\n    enqueue(handler, ...splat) {\r\n        var result = this.timeout(handler, 0, ...splat);\r\n        return result;\r\n    }\r\n    \r\n    /**\r\n     * \r\n     * @intention\r\n     *  * Leverage global.setTimeout for intervals instead of global.setInterval.\r\n     * @patterns { Curry }\r\n     * @usage \r\n     *  * var clear = utils.interval( () => console.log('called!'), 1000 );\r\n     *  * setTimeout(clear, (1000 * n) );  // clears interval after n seconds\r\n     */\r\n    interval(handler, delay, ...splat) {\r\n        var thus = this, timeout = thus.timeout(set, delay, ...splat);\r\n        \r\n        function set(...params) {\r\n            if ( !timeout ) return console.log('break');  // > -1\r\n            handler.call(this, ...params);\r\n            timeout = thus.timeout(set, delay, ...splat);\r\n        }\r\n        function clear() {\r\n            clearTimeout(timeout);\r\n            timeout = null;\r\n            return !timeout;  // assert is cleared\r\n        }\r\n        \r\n        return clear;\r\n    }\r\n    \r\n    debounce(fn, delay) {  // # thx Remy Sharp\r\n        var timer = null;\r\n        \r\n        function _debounce(...splat) {\r\n            var context = this;\r\n            clearTimeout(timer);\r\n            timer = setTimeout( () => fn.call(context, ...splat), delay);\r\n        };\r\n        \r\n        return _debounce;\r\n    }\r\n    \r\n    throttle(fn, threshhold, scope) {  // # thx Remy Sharp\r\n        var threshhold = threshhold || 250, last, deferTimer;\r\n        \r\n        function _throttle(...splat) {\r\n            var context = scope || this, now = +(new Date()), last = now, final = (last + threshhold);\r\n            var invoke = () => ( fn.call(context, ...splat), last = now );\r\n            \r\n            if (!last || now >= final) return invoke();  // don't hold on to it\r\n            clearTimeout(deferTimer);\r\n            deferTimer = setTimeout(invoke, threshhold);\r\n        };\r\n        \r\n        return _throttle;\r\n    }\r\n    \r\n    uuid() {\r\n        function replace(c) {\r\n        var r = Math.random() * 16 | 0, v = c == 'x' ? r : (r & 0x3 | 0x8);\r\n        return v.toString(16);\r\n        }\r\n        return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, replace);\r\n    }\r\n        \r\n    escapeHTML(s) {\r\n        return s.replace(/[&\"<>]/g, function (c) {\r\n            return {\r\n                '&': '&amp;',\r\n                '\"': '&quot;',\r\n                '<': '&lt;',\r\n                '>': '&gt;'\r\n            }[c];\r\n        });\r\n    }\r\n\r\n    /**\r\n     * @ THX: Douglas Crockford (String.prototype.supplant)\r\n     * @ INTERPOLATE\r\n     */\r\n    interpolate(str) {\r\n        return (o) => {\r\n            return str.replace(/{([^{}]*)}/g, (a, b) => {\r\n                var r = o[b], val = (typeof r === 'string' || typeof r === 'number' ? r : a);\r\n                return this.escapeHTML(val);  // TODO: escape HTML-Entities\r\n            });\r\n        };\r\n    }\r\n\r\n    /**\r\n     * @ THX: Douglas Crockford (String.prototype.supplant)\r\n     * @ INSECURE_INTERPOLATE\r\n     */\r\n    INSECURE_INTERPOLATE(str) {\r\n        return function interpolate(o) {\r\n            return str.replace(/{([^{}]*)}/g, function (a, b) {\r\n                var r = o[b], val = (typeof r === 'string' || typeof r === 'number' ? r : a);\r\n                return val;  // TODO: escape HTML-Entities\r\n            });\r\n        }\r\n    }\r\n    \r\n    /**\r\n     * @ EXTERPOLATE | PARSE ROUTE-URI\r\n     */\r\n    exterpolate(str) {\r\n        var str = str || '';\r\n        var re = /:[^\\s/]+|{+[^\\s/]+}+/g;\r\n        var matcher = new RegExp(str.replace(re, '([\\\\w-]+)'));\r\n\r\n        return function getValues(string) {\r\n            if (!string.match(matcher)) return false;\r\n            var string = string || '';\r\n            var result = string.match(matcher);\r\n            var keys = str.match(re);\r\n            var values = result.slice(1);\r\n            var map = {};\r\n\r\n            if (keys && values) {\r\n                for (var i = 0, len = keys.length; i < len; i++) {\r\n                    var key = keys[i].replace(/[:{}]+/g, '');\r\n                    var val = values[i];\r\n                    if (key !== val) map[key] = val;\r\n                }\r\n            }\r\n\r\n            return map;\r\n        };\r\n    }\r\n    \r\n    parseURL(url) {\r\n        var a = document.createElement('a');\r\n        a.href = url;\r\n        \r\n        return {\r\n            hash: a.hash,\r\n            host: a.host,\r\n            hostname: a.hostname,\r\n            href: a.href,\r\n            origin: a.origin,\r\n            pathname: a.pathname,\r\n            port: a.port,\r\n            protocol: a.protocol,\r\n            search: a.search,\r\n        };\r\n    }\r\n    \r\n    sortByKey(k, a, b) {  // Sort by Multiple keys (Reusable) using sortByKey()\r\n        // USAGE:\r\n        // var sort = sortByKey.bind(collection, 'x');\r\n        // collection.sort(sort);\r\n        if (a[k] > b[k]) return  1;\r\n        if (a[k] < b[k]) return -1;\r\n        return 0;\r\n    }\r\n    \r\n    // Sort by Multiple keys (Reusable + Optimized) using Methods-Array\r\n    priorityMethodSort(methods, a, b) {\r\n        // USAGE:\r\n        // var sort = prioritySort.bind(collection, [ sort$A, sort$B, sort$C, sort$D ]);\r\n        // collection.sort(sort);\r\n        var i = 0, methods = Array.prototype.slice.call(methods || [ ], 0);\r\n        while (i === 0 && methods.length) i = methods.shift().call(this, a, b);\r\n        return i;\r\n    }\r\n    \r\n    priorityKeySort(keys, a, b) {  // Sort by Multiple keys (Reusable + Optimized) using Reusable prioritySort()\r\n        // USAGE:\r\n        // var sort = prioritySort.bind(collection, [ 'a', 'b', 'c', 'd' ]);\r\n        // collection.sort(sort);\r\n        // console.log('>', collection);\r\n        // >  [\r\n        //       { \"a\": 0, \"b\": 0, \"c\": 0, \"d\": 0 },\r\n        //       { \"a\": 0, \"b\": 1, \"c\": 2, \"d\": 2 },\r\n        //       { \"a\": 0, \"b\": 1, \"c\": 2, \"d\": 3 },\r\n        //       { \"a\": 1, \"b\": 1, \"c\": 1, \"d\": 1 },\r\n        //       { \"a\": 1, \"b\": 2, \"c\": 2, \"d\": 1 },\r\n        //       { \"a\": 1, \"b\": 2, \"c\": 3, \"d\": 1 },\r\n        //       { \"a\": 2, \"b\": 2, \"c\": 2, \"d\": 2 },\r\n        //       { \"a\": 3, \"b\": 3, \"c\": 3, \"d\": 3 }\r\n        //    ]\r\n        var i = 0, keys = Array.prototype.slice.call(keys || [ ], 0);\r\n        while (i === 0 && keys.length) i = this.sortByKey.call(this, keys.shift(), a, b);\r\n        return i;\r\n    }\r\n    \r\n    getFileSize(size, unit = 'auto') {  // size: number, unit: 'auto'|'byte'|'KB'|'MG'|'GB'|'TB'|'PB'\r\n        var $ = this.toFixed.bind(this);\r\n        var $bytes = $(size || 0), $KB = $($bytes / 1024), $MB = $($KB / 1024), $GB = $($MB / 1024), $TB = $($GB / 1024), $PB = $($TB / 1024);\r\n        var bytes = `${$bytes} bytes`, KB = `${$KB} KB`, MB = `${$MB} MB`, GB = `${$GB} GB`, TB = `${$TB} TB`, PB = `${$PB} PB`;\r\n        var $auto = $bytes;\r\n        var auto;\r\n        var values = { bytes, KB, MB, GB, TB, PB, auto: undefined };\r\n        var result = { unit: '', value: Infinity };\r\n        var datasets = [\r\n        { unit: 'bytes', value: $bytes },\r\n        { unit: 'KB', value: $KB },\r\n        { unit: 'MB', value: $MB },\r\n        { unit: 'GB', value: $GB },\r\n        { unit: 'TB', value: $TB },\r\n        { unit: 'PB', value: $PB },\r\n        ];\r\n        while ( (result.value / 1024) >= 1 && datasets.length ) result = datasets.shift();\r\n        values.auto = `${result.value} ${result.unit}`;\r\n        \r\n        \r\n        \r\n        return values[unit];\r\n    }\r\n    \r\n    toFixed(n) { return Number( Math.round(+(n + 'e2')) + 'e-2' ); }\r\n    \r\n    exists(n) { return !!~n; }\r\n    \r\n}\r\n\r\nexport { Utilities };\r\n","\r\n/**\r\n * @name: Deferred Promise\r\n * @intention\r\n *  * Externalize the function of a Promise's \"Executor\" parameters so that fulfillment & rejection\r\n *  * can be performed at a later time.\r\n */\r\nclass Deferred<T> {\r\n    private _resolve: Function = () => {};\r\n    private _reject: Function = () => {};\r\n    public promise: Promise<T> = new Promise<T>( this.exe.bind(this) );\r\n        \r\n    constructor() {}\r\n    \r\n    private exe(resolve, reject) {\r\n        this._resolve = resolve;\r\n        this._reject = reject;\r\n    }\r\n    \r\n    resolve(data) {\r\n        this._resolve(data);\r\n        return this.promise;\r\n    }\r\n    reject(data) {\r\n        this._reject(data);\r\n        return this.promise;\r\n    }\r\n    \r\n}\r\n\r\nexport { Deferred };\r\n","\r\nexport { Utilities } from './utilities';\r\nexport { keycodes } from './keycodes';\r\n// export { patterns } from './patterns';\r\n// export { ds } from './ds';\r\nexport { Deferred } from './patterns/other/deferred';\r\n"],"sourceRoot":""}