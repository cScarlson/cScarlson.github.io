{"version":3,"sources":["webpack:///./src/@motorman/vertices/core/defaults.js","webpack:///./src/@motorman/vertices/core/core.ts","webpack:///./src/@motorman/vertices/core/api.js","webpack:///./src/@motorman/vertices/core/element-engine.ts","webpack:///./src/@motorman/vertices/core/index.ts","webpack:///./src/@motorman/vertices/core/decorators.ts","webpack:///./src/@motorman/core/utilities/utilities.ts","webpack:///./src/@motorman/core/utilities/patterns/other/deferred.ts","webpack:///./src/@motorman/core/utilities/patterns/other/detective.ts","webpack:///./src/@motorman/core/utilities/index.ts","webpack:///./src/@motorman/core/utilities/patterns/behavioral/chainOfRespnsibility.ts","webpack:///./src/@motorman/core/utilities/patterns/behavioral/command.ts","webpack:///./src/@motorman/core/utilities/patterns/behavioral/mediator/eventhub.ts","webpack:///./src/@motorman/core/utilities/patterns/behavioral/index.ts","webpack:///./src/@motorman/core/store/store.rxjs.ts","webpack:///./src/@motorman/core/store/index.ts","webpack:///./node_modules/tslib/tslib.es6.js","webpack:///./node_modules/rxjs/_esm5/internal/util/isFunction.js","webpack:///./node_modules/rxjs/_esm5/internal/config.js","webpack:///./node_modules/rxjs/_esm5/internal/util/hostReportError.js","webpack:///./node_modules/rxjs/_esm5/internal/Observer.js","webpack:///./node_modules/rxjs/_esm5/internal/util/isArray.js","webpack:///./node_modules/rxjs/_esm5/internal/util/UnsubscriptionError.js","webpack:///./node_modules/rxjs/_esm5/internal/Subscription.js","webpack:///./node_modules/rxjs/_esm5/internal/util/isObject.js","webpack:///./node_modules/rxjs/_esm5/internal/symbol/rxSubscriber.js","webpack:///./node_modules/rxjs/_esm5/internal/Subscriber.js","webpack:///./node_modules/rxjs/_esm5/internal/symbol/observable.js","webpack:///./node_modules/rxjs/_esm5/internal/util/noop.js","webpack:///./node_modules/rxjs/_esm5/internal/util/pipe.js","webpack:///./node_modules/rxjs/_esm5/internal/Observable.js","webpack:///./node_modules/rxjs/_esm5/internal/util/toSubscriber.js","webpack:///./node_modules/rxjs/_esm5/internal/util/canReportError.js","webpack:///./node_modules/rxjs/_esm5/internal/util/ObjectUnsubscribedError.js","webpack:///./node_modules/rxjs/_esm5/internal/SubjectSubscription.js","webpack:///./node_modules/rxjs/_esm5/internal/Subject.js","webpack:///./node_modules/rxjs/_esm5/internal/scheduler/QueueAction.js","webpack:///./node_modules/rxjs/_esm5/internal/scheduler/AsyncAction.js","webpack:///./node_modules/rxjs/_esm5/internal/scheduler/Action.js","webpack:///./node_modules/rxjs/_esm5/internal/Scheduler.js","webpack:///./node_modules/rxjs/_esm5/internal/scheduler/queue.js","webpack:///./node_modules/rxjs/_esm5/internal/scheduler/QueueScheduler.js","webpack:///./node_modules/rxjs/_esm5/internal/scheduler/AsyncScheduler.js","webpack:///./node_modules/rxjs/_esm5/internal/observable/empty.js","webpack:///./node_modules/rxjs/_esm5/internal/util/isScheduler.js","webpack:///./node_modules/rxjs/_esm5/internal/util/subscribeToArray.js","webpack:///./node_modules/rxjs/_esm5/internal/Notification.js","webpack:///./node_modules/rxjs/_esm5/internal/scheduled/scheduleArray.js","webpack:///./node_modules/rxjs/_esm5/internal/observable/fromArray.js","webpack:///./node_modules/rxjs/_esm5/internal/observable/throwError.js","webpack:///./node_modules/rxjs/_esm5/internal/observable/of.js","webpack:///./node_modules/rxjs/_esm5/internal/operators/observeOn.js","webpack:///./node_modules/rxjs/_esm5/internal/ReplaySubject.js","webpack:///./node_modules/rxjs/_esm5/internal/operators/filter.js","webpack:///./node_modules/rxjs/_esm5/internal/operators/map.js","webpack:///./src/@motorman/core/eventhub/eventhub.rxjs.ts","webpack:///./src/@motorman/core/eventhub/index.ts","webpack:///./src/@motorman/core/mediator/mediator.rxjs.ts","webpack:///./src/@motorman/core/mediator/index.ts","webpack:///./src/@motorman/vertices/index.ts","webpack:///./src/@motorman/vertices/core/sandbox.ts","webpack:///./src/@motorman/vertices/core/bootstrap.ts","webpack:///./src/@motorman/core/utilities/patterns/behavioral/observer.ts","webpack:///./src/@motorman/core/director/director.rxjs.ts","webpack:///./src/@motorman/core/sandbox/sandbox.rxjs.ts","webpack:///./src/@motorman/core/index.ts","webpack:///./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js","webpack:///./node_modules/css-loader/dist/runtime/api.js","webpack:///./src/@motorman/vertices/sdk/components/backdrop/backdrop.component.ts","webpack:///./src/@motorman/vertices/sdk/components/backdrop/backdrop.component.scss?c95c","webpack:///./src/@motorman/vertices/sdk/components/backdrop/backdrop.component.scss"],"names":["DefaultNodeSandbox","element","DEFAULT_CONFIG","director","selector","datasets","decorators","services","utils","components","dConfiguration","pConfiguration","this","promise","dInitialization","pInitialization","$instances","Map","$targets","modules","configuration","then","config","resolve","bootstrap","options","environment","execute","extend","metadata","registerModule","_selector","Sandbox","_Sandbox","type","Class","set","target","startServices","call","service","registry","i","len","length","startService","metadatum","data","id","ComponentSandbox","Vertex","Vertices","Core","Facade","V","register","apply","arguments","core","configure","init","component","name","command","composeCommand","item","handler","composeExecutor","Metadata","klass","$members","$observedAttributes","$watchers","$elements","$attrs","$listeners","$subscriptions","DEFAULT_DESCRIPTOR","writable","configurable","enumerable","Element","definition","key","members","meta","Attribute","Text","Comment","Directive","Pipe","Service","object","ns","keys","split","shift","Function","namespace","value","get","observe","attr","thus","descriptor","constructor","action","true","false","process","hasGet","hasSet","hasGetOrSet","hasGetAndSet","decorator","alias","isHost","matches","RegExp","exec","match","tagName","observee","observer","listener","message","CSV","collection","fields","delimiter","$table","$values","$lines","matrix","lines","span","Object","reduce","o","x","width","j","height","y","row","rows","col","columns","_id","field","record","column","line","Math","max","join","tabs","Array","map","concat","replace","csv","slice","array","datum","bind","push","Utilities","console","first","more","k","null","undefined","0","splat","window","setTimeout","timeout","delay","params","log","clearTimeout","fn","timer","context","threshhold","scope","deferTimer","now","Date","last","invoke","c","r","random","toString","s","path","drill","str","a","b","val","f","escapeHTML","re","matcher","string","result","values","url","document","createElement","href","hash","host","hostname","origin","pathname","port","protocol","search","methods","prototype","sortByKey","size","unit","$","toFixed","$bytes","$KB","$MB","$GB","$TB","$PB","bytes","KB","MB","GB","TB","PB","auto","Infinity","n","Number","round","Deferred","_resolve","_reject","Promise","exe","reject","Detective","detector","EventTarget","proxy","Proxy","e","receiver","emitter","oldValue","CustomEvent","detail","Reflect","detect","dispatchEvent","getPrototypeOf","dtor","getOwnPropertyDescriptor","getPropertyDescriptor","getter","setter","defineProperty","has","hasOwnProperty","hasProperty","addEventListener","Handler","ChainOfResponsibility","responders","super","cancelable","bubbles","cancelBubble","defaultPrevented","handlers","propagate","event","next","stopPropagation","respond","stopImmediatePropagation","StrictCommand","$data","paths","publish","error","attach","entries","from","extendStatics","d","setPrototypeOf","__proto__","p","__extends","__","create","isFunction","_enable_super_gross_mode_that_will_cause_bad_things","Error","stack","hostReportError","err","empty","closed","useDeprecatedSynchronousErrorHandling","complete","isArray","UnsubscriptionError","UnsubscriptionErrorImpl","errors","Subscription","unsubscribe","_parentOrParents","_subscriptions","_unsubscribe","remove","index","flattenUnsubscriptionErrors","sub","add","teardown","subscription","EMPTY","tmp","indexOf","subscriptions","subscriptionIndex","splice","errs","rxSubscriber","Symbol","_super","Subscriber","destinationOrNext","_this","syncErrorValue","syncErrorThrown","syncErrorThrowable","isStopped","destination","subscriber","_next","_error","_complete","_unsubscribeAndRecycle","SafeSubscriber","_parentSubscriber","observerOrNext","_context","__tryOrSetError","__tryOrUnsub","wrappedComplete","parent","observable","noop","pipeFromArray","fns","input","prev","Observable","subscribe","_isScalar","_subscribe","lift","operator","source","sink","nextOrObserver","toSubscriber","_trySubscribe","_a","closed_1","canReportError","warn","forEach","promiseCtor","getPromiseCtor","pipe","operations","_i","toPromise","ObjectUnsubscribedError","ObjectUnsubscribedErrorImpl","SubjectSubscription","subject","observers","subscriberIndex","SubjectSubscriber","Subject","hasError","thrownError","copy","asObservable","AnonymousSubject","QueueAction","scheduler","work","schedule","state","flush","_execute","requestAsyncId","AsyncAction","pending","recycleAsyncId","setInterval","clearInterval","errored","errorValue","actions","Action","Scheduler","SchedulerAction","queue","QueueScheduler","AsyncScheduler","delegate","active","scheduled","emptyScheduled","isScheduler","NotificationKind","scheduleArray","fromArray","dispatch","Notification","kind","hasValue","do","accept","toObservable","args","pop","of","createNext","undefinedValueNotification","createError","createComplete","completeNotification","ObserveOnSubscriber","arg","notification","scheduleMessage","ObserveOnMessage","ReplaySubject","bufferSize","windowTime","POSITIVE_INFINITY","_events","_infiniteTimeWindow","_bufferSize","_windowTime","nextInfiniteTimeWindow","nextTimeWindow","ReplayEvent","_getNow","_trimBufferThenGetEvents","eventsCount","spliceCount","time","FilterOperator","predicate","thisArg","FilterSubscriber","count","MapOperator","project","MapSubscriber","initializations","initialized","channels$","channel","filterChannel","mapData","TypeError","in","publishers","TemplateSubject","sandbox","template","repository","DocumentFragment","digestion","content","appendChild","innerHTML","observation","childNodes","MutationManager","MutationObserver","instance","changes","mutation","addedNodes","removedNodes","nodes","trigger","node","tParent","parseNode","attributeName","getAttributeNode","operation","hasAttribute","attributes","childList","characterData","subtree","attributeOldValue","characterDataOldValue","disconnect","EventManager","$events","handleAll","any","handleAny","property","full","method","getEventTypes","events","emit","nodeType","checkAttrNode","firstElementChild","nextElementSibling","attribute","test","proxyEventTargetSource","removeEventListener","details","root","NodeSandbox","Node","ATTRIBUTE_NODE","ownerElement","ElementNodeSandbox","handleNodeRemoved","handleChildrenRemoved","handleChildRemoved","AttrNodeSandbox","TextNodeSandbox","CommentNodeSandbox","ElementProxy","NamedNodeMapProxy","AttributeProxy","current","nodeValue","deleteProperty","spec","old","t","m","ElementSandboxState","delegations","mutations","attrs","$classes","classList","$dataset","dataset","connect","child","AttributeSandboxState","owner","TextSandboxState","CommentSandboxState","PipeSandboxState","ServiceSandboxState","MicroserviceSandboxState","IoTSandboxState","SandboxContext","select","Bootstrap","dEnvironment","pEnvironment","pipeNodeHandler","nodeProcessors","processElementNode","processTextNode","processCommentNode","env","bootstrapServices","$services","bootstrapService","cor","isConnected","parentNode","previousSibling","previous","nextSibling","firstChild","occupants","occupee","$occupants","schema","slot","cloneNode","addOccupant","getOwnerInstance","parentData","decorateElement","processAttributeNode","$attributes","isBinding","isReporter","hasBinding","hasReporter","bindable","reportable","text","$texts","initializeInstance","comment","$comments","parentElement","$text","TEXT_NODE","COMMENT_NODE","notify","update","handleState","stateHandlers","channels","ActionHandlers","StateHandlers","Dependencies","dependencies","actionHandlers","detach","memo","isOldIE","Boolean","all","atob","getTarget","styleTarget","querySelector","HTMLIFrameElement","contentDocument","head","stylesInDom","modulesToDom","moduleId","list","part","css","media","sourceMap","addStyle","insertStyleElement","style","nonce","setAttribute","insert","textStore","replaceText","replacement","filter","applyToSingletonTag","obj","styleSheet","cssText","cssNode","createTextNode","removeChild","insertBefore","applyToTag","removeAttribute","btoa","unescape","encodeURIComponent","JSON","stringify","singleton","singletonCounter","styleIndex","removeStyleElement","newObj","module","exports","base","newList","useSourceMap","cssMapping","sourceMapping","base64","sourceURLs","sources","sourceRoot","cssWithMappingToString","mediaQuery","BackdropComponent","api","__esModule","default","exported","locals","___CSS_LOADER_API_IMPORT___"],"mappings":"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","file":"v.sdk.backdrop.bundle.4263fd23c4a083ec2a4a.js","sourcesContent":["\r\nfunction bootstrap(target) {\r\n    var element = target;\r\n    var selector = this.selector;\r\n    var data = element.dataset || {};\r\n    var ex = /[\\s]+/img;\r\n    var slug = data.behavior || element.v || '';\r\n    var components = slug.split(ex);\r\n    var children = element.children;// element.querySelectorAll(selector);\r\n    (this, document, data, slug, components, children);\r\n    \r\n    var resolveScope = function resolveScope(parent, child) {\r\n        var isDirectDescendant = (child.parentNode === parent);\r\n        if (isDirectDescendant) bootstrap.call(this, child);\r\n    }.bind(this, element);\r\n    \r\n    // components.forEach(this.bootstrap.bind(this, element));\r\n    // Array.prototype.forEach.call(children, resolveScope);\r\n    \r\n    // ... or? ...\r\n    \r\n    Array.prototype.forEach.call(children, resolveScope);  // TODO: Optimize!!!\r\n    if (!!slug) components.forEach(this.bootstrap.bind(this, element));\r\n}\r\n\r\nfunction $bootstrap(root, medium) {\r\n    var scopeSelector = '[data-behavior]'\r\n      , $root = $(root)\r\n      , $parent = $root.find(scopeSelector)\r\n      , hasBehavior = $root.is(scopeSelector)\r\n      ;\r\n    var slug = $root.attr('data-behavior')\r\n      , formattedSlug = slug && slug.replace(/^[,;\\s]+|[,;\\s]+$/g, '').replace(/[,;\\s]+/g, '|').replace(/[|]+$/g, '') || ''\r\n      , moduleIds = $.unique(formattedSlug.split('|')).sort()\r\n      , scopeId = moduleIds.join(' ')\r\n      ;\r\n    var childMedium = medium.$spawn(new function ChildScope() { this.element = root; });\r\n    \r\n\r\n    var resolveBehavior = function resolveBehavior(scope, behavior, i, a) {\r\n        var scope = ($root.is('html')) ? document : scope;\r\n        this.start(behavior, scope, scopeId, childMedium);\r\n    }.bind(this, $root[0]);\r\n\r\n    var resolveChildren = function resolveChildren(i, scope) {\r\n        var $firstScope = $(scope);\r\n        if (!$($firstScope.parent()).is($parent)) {\r\n            autoRegisterModules.call(this, $firstScope, childMedium);\r\n        }\r\n\r\n    }.bind(this);\r\n\r\n    moduleIds.forEach(resolveBehavior);\r\n    $parent.each(resolveChildren);\r\n\r\n}\r\n\r\nclass DefaultDirector {}\r\n\r\nfunction DefaultSandbox(anything) { return anything; }  // see The Decorator Pattern @GoF\r\nfunction DefaultServicesSandbox(utils) { return utils; }\r\nfunction DefaultNodeSandbox(element) { return element; }\r\n\r\nexport { bootstrap, $bootstrap, DefaultDirector, DefaultSandbox, DefaultServicesSandbox, DefaultNodeSandbox as DefaultComponentSandbox };\r\n","\r\nimport { Utilities, Deferred } from '@motorman/core/utilities';\r\nimport { IEventAggregator } from '@motorman/core/eventaggregator.interface';\r\nimport { bootstrap, $bootstrap, DefaultDirector, DefaultSandbox, DefaultComponentSandbox, DefaultServicesSandbox } from './defaults';\r\nimport { ElementEngine } from './element-engine';\r\n\r\n\r\nclass DOMUtilities {\r\n    \r\n    constructor(protected node: Node) {}\r\n    \r\n    forEach(node: Node): Node {\r\n        // var { isConnected, parentNode: parent, previousSibling: previous, nextSibling: next, firstChild: child } = result;\r\n        \r\n        // // RECURSION\r\n        // if (result !== node) return this.parseNode(result);  // reparse. assume replacement occurred. do not continue for next or child.\r\n        // if (child) this.parseNode(child);  // TCO???\r\n        // if (next) this.parseNode(next);  // TCO???\r\n        // this.dTemplateReady.resolve(true);  // gets fulfilled after last element processed. noop after that.\r\n        \r\n        return node;  // result can still equal node\r\n    }\r\n    \r\n}\r\n\r\n\r\ntype ModuleType = string | 'service'|'element'|'attribute'|'IoT' | ''|'component'|'directive'|'';\r\n\r\ninterface IModuleMetadata {\r\n    type: ModuleType;\r\n    selector: string;\r\n    Class: any;\r\n    Sandbox?: any;  // sandbox\r\n}\r\n\r\ninterface IBootstrap {  // Note similarity to The Command Pattern. implementer only needs Instance.execute and not necessarily an \"action\"\r\n    new(context: Core, action?: string);\r\n    execute(environment: any): any;\r\n}\r\ninterface IConfiguration {\r\n    environment: any;\r\n    director: IEventAggregator;  // maybe unnecessary. perhaps sandbox should be provided by V.register(metadata);\r\n    selector: string;\r\n    Sandbox: (typeof DefaultSandbox)|any;  // perhaps sandbox should be provided by V.register(metadata);\r\n    bootstrap: IBootstrap;\r\n}\r\n\r\nvar director = new DefaultDirector();\r\nvar DEFAULT_CONFIG = {  // ... defaults\r\n    director,\r\n    selector: '[data-v]' || '[data-behavior]',\r\n    datasets: '[v-attribute]',  // includes <script type=\"application/json\"> { items: [...] } </scrpt>\r\n    // bootstrap: bootstrap,\r\n    decorators: { services: DefaultServicesSandbox, components: DefaultComponentSandbox, },\r\n};\r\n\r\nclass Core {\r\n    private dConfiguration: Deferred<any> = new Deferred();\r\n    private pConfiguration: Promise<any> = this.dConfiguration.promise;\r\n    private dInitialization: Deferred<any> = new Deferred();\r\n    private pInitialization: Promise<any> = this.dInitialization.promise;\r\n    private utils: Utilities = new Utilities();\r\n    // private engine: ElementEngine = new ElementEngine(DefaultComponentSandbox, director);\r\n    public $instances: Map<any, any> = new Map();\r\n    public $targets: Map<Node, any> = new Map();\r\n    public modules: any = { };\r\n    public configuration: any = DEFAULT_CONFIG;\r\n    \r\n    constructor() {\r\n        var { pConfiguration, pInitialization } = this;\r\n        \r\n        pConfiguration\r\n            .then( (config) => this.dInitialization.resolve(config) )\r\n            ;\r\n        pInitialization\r\n            .then( (config) => this.bootstrap(config) )\r\n            ;\r\n        return this;\r\n    }\r\n    \r\n    init(options) {\r\n        var { configuration } = this;\r\n        // this.dInitialization.resolve({ ...configuration, options });\r\n        return this;\r\n    }\r\n    \r\n    bootstrap(config: IConfiguration) {\r\n        var { environment, bootstrap } = config;\r\n        bootstrap.execute(this);\r\n    }\r\n    \r\n    configure(config) {\r\n        this.utils.extend(this.configuration, config);\r\n        // this.engine = new ElementEngine(this.configuration.decorators.components, this.configuration.director);\r\n        this.dConfiguration.resolve(this.configuration);\r\n        return this.utils.extend({ }, this.configuration);\r\n    }\r\n    \r\n    register(metadata: IModuleMetadata) {\r\n        var { pConfiguration } = this;\r\n        pConfiguration.then( (config: IConfiguration) => this.registerModule(config, metadata) );\r\n        return this;\r\n    }\r\n    private registerModule(config: IConfiguration, metadata: IModuleMetadata) {\r\n        var { modules } = this;\r\n        var { selector: _selector, Sandbox: _Sandbox } = config;\r\n        var { type, selector = _selector, Class, Sandbox = _Sandbox } = metadata;\r\n        \r\n        if ( !modules[type] ) modules[type] = new Map<string, IModuleMetadata>();\r\n        modules[type].set(selector, { ... metadata, type, selector, Class, Sandbox });\r\n        \r\n        return this;\r\n    }\r\n    \r\n    // define(definition) {\r\n    //     var { name, Class, options } = definition;\r\n    //     var { dConfiguration } = this, { promise: pConfiguration } = dConfiguration;\r\n        \r\n    //     pConfiguration\r\n    //         .then( (config) => this.engine.define(name, Class, options) )\r\n    //         ;\r\n    //     return this;\r\n    // }\r\n    \r\n    arm(options) {  // automatically register modules\r\n        var config = this.configuration\r\n          , bootstrap = config.bootstrap\r\n          , target = options.target\r\n          ;\r\n        \r\n        this.startServices();\r\n        bootstrap.call(config, target, this);\r\n    }\r\n    \r\n    startServices() {\r\n        var { configuration, modules } = this;\r\n        var { service: registry } = modules;\r\n        for (let i = 0, len = registry.length; i < len; i++) this.startService(registry[i], i, registry);\r\n        return this;\r\n    }\r\n    private startService(metadatum: IModuleMetadata, i: number, metadata: IModuleMetadata[]) {\r\n        // ...\r\n        // var { configuration, utils } = this, { director, decorators } = configuration;\r\n        // var { services: ServiceSandbox = DefaultServicesSandbox } = decorators;\r\n        // var Service = _service.Constructor\r\n        //   , sandbox = new ServiceSand?box(utils, director)\r\n        //   , service = new Service(sandbox)\r\n        //   ;\r\n        // service.init();\r\n    }\r\n    \r\n    /**\r\n     * Gets called by this.configuration.bootstrap\r\n     * TODO: Rename `details` to `api` and provide an API for mapping, starting, stopping & destroying (etc) modules.\r\n     */\r\n    bootstrapX(element, data, id) {\r\n        if (!element || !id) return null;\r\n        // if (!this.components[id]) return this.utils.console.warn(\"Unregistered Component: \" + id) && null || null;\r\n        \r\n        var { configuration: config } = this\r\n          , { director, decorators } = config\r\n          , { components: ComponentSandbox = DefaultComponentSandbox } = decorators\r\n          ;\r\n        // var component = this.components[id]\r\n        //   , Component = component.Constructor\r\n        //   , sandbox = new ComponentSandbox(element, director)\r\n        //   , instance = new Component(sandbox)\r\n        //   , data = data || { }\r\n        //   ;\r\n        var details = {\r\n            id: id,\r\n            // instance: instance,\r\n            element: element,\r\n            data: data,\r\n        };\r\n        // instance.init(data);\r\n        \r\n        return details;\r\n    }\r\n    \r\n}\r\n\r\nexport { Core };\r\n","\r\nimport { Core } from './core';\r\n\r\n\r\nvar Facade = function Facade(core) {\r\n    var thus = this;\r\n    \r\n    function configure() {\r\n        return core.configure.apply(core, arguments);\r\n    }\r\n    \r\n    function register(metadata) {\r\n        core.register(metadata);\r\n        return this;\r\n    }\r\n    \r\n    function bootstrap(options) {\r\n        core.init(options);\r\n        return this;\r\n    }\r\n    \r\n    // export precepts\r\n    this.utils = core.utils;\r\n    this.config = configure;\r\n    this.register = register;\r\n    this.bootstrap = bootstrap;\r\n    \r\n    return this;\r\n};\r\n\r\n/**\r\n * API\r\n */\r\nvar Vertex = new (function Vertices(Core, Facade) {\r\n    \r\n    var V = Facade.call( function V() {\r\n        if (this instanceof V) return ( new Vertices(Core, Facade) );\r\n        return V.register.apply(V, arguments);\r\n    }, new Core() );\r\n    \r\n    return V;\r\n})(Core, Facade);\r\n\r\nexport { Vertex };\r\n","\r\nimport { Utilities, Deferred } from \"@motorman/core/utilities\";\r\nimport { IEventAggregator } from \"@motorman/core/eventaggregator.interface\";\r\nimport { StrictCommand as Command } from \"@motorman/core/utilities/patterns/behavioral\";\r\nimport { ChainOfResponsibility } from \"@motorman/core/utilities/patterns/behavioral\";\r\n\r\ntype ListenerMap = { type: string, name: string, handler: (e: Event, ...splat: any[]) => any };\r\ntype EventEmitter = IEventAggregator&(Comm|Hub);\r\n\r\nvar utils = new (class ElementUtilities extends Utilities {\r\n    \r\n    composeCommand(component: any, name: string) {\r\n        var command = new Command(component, name);\r\n        return command;\r\n    }\r\n    composeExecutor(component: any, name: string) {\r\n        var command = this.composeCommand(component, name), { execute } = command;\r\n        return execute;\r\n    }\r\n    mapExecutor(component: any, item: any) {\r\n        var { name } = item;\r\n        var handler = this.composeExecutor(component, name), details = { ...item, handler };\r\n        return details;\r\n    }\r\n    \r\n})();\r\n\r\nclass Channels {\r\n    ['LEFECYCLE:ELEMENT:CREATED'] = 'vcomm://created/element';\r\n    ['LEFECYCLE:ELEMENT:CONNECTED'] = 'vcomm://connected/element';\r\n    ['ELEMENT:TEMPLATE:FOUND'] = 'vcomm://found/element/template';\r\n    ['ELEMENT:MUTATION:OBSERVED'] = 'vcomm://observed/element/mutation';\r\n    ['PROXY:INVOKED'] = 'vcomm://invoked/proxy';\r\n    ['PROXY:CONSTRUCT:INVOKED'] = 'vcomm://invoked/proxy/construct';\r\n    ['PROXY:HAS:INVOKED'] = 'vcomm://invoked/proxy/has';\r\n    ['PROXY:GET:INVOKED'] = 'vcomm://invoked/proxy/get';\r\n    ['PROXY:SET:INVOKED'] = 'vcomm://invoked/proxy/set';\r\n    ['PROXY:DELETE:INVOKED'] = 'vcomm://invoked/proxy/delete';\r\n    ['PROXY:APPLY:INVOKED'] = 'vcomm://invoked/proxy/apply';\r\n    ['PROXY:MOCK:INVOKED'] = 'vcomm://invoked/proxy/mock';\r\n}\r\nclass Hub implements IEventAggregator {\r\n    private subscriptions: any = { };\r\n    public channels: Channels = new Channels();\r\n\r\n    constructor() {}\r\n    \r\n    private invoke(subscription, data) {\r\n        var { channel, handler, context } = subscription;\r\n        var e = new CustomEvent(channel, { detail: data });\r\n        handler.call(context, e);\r\n        return this;\r\n    }\r\n\r\n    publish(channel: string, data?: any, ...more: any[]) {\r\n        if (!this.subscriptions[channel]) this.subscriptions[channel] = [ ];\r\n        var subscriptions = this.subscriptions[channel];\r\n        for (let i = 0, len = subscriptions.length; i < len; i++) this.invoke(subscriptions[i], data);\r\n        return this;\r\n    }\r\n    subscribe(channel, handler) {\r\n        if (!this.subscriptions[channel]) this.subscriptions[channel] = [ ];\r\n        var subscription = { channel, handler, context: this };\r\n        this.subscriptions[channel].push(subscription);\r\n        return this;\r\n    }\r\n    unsubscribe(channel, handler) {\r\n        if (!this.subscriptions[channel]) this.subscriptions[channel] = [ ];\r\n        // this.target.removeEventListener(channel, handler, false);\r\n        return this;\r\n    }\r\n\r\n}\r\nclass Comm implements IEventAggregator {\r\n    private target = new EventTarget();\r\n    public channels: Channels = new Channels();\r\n\r\n    constructor() {}\r\n\r\n    publish(channel: string, data?: any, ...more: any[]) {\r\n        var e = new CustomEvent(channel, { detail: data });\r\n        this.target.dispatchEvent(e);\r\n        return this;\r\n    }\r\n    subscribe(channel, handler) {\r\n        this.target.addEventListener(channel, handler, false);\r\n        return this;\r\n    }\r\n    unsubscribe(channel, handler) {\r\n        this.target.removeEventListener(channel, handler, false);\r\n        return this;\r\n    }\r\n\r\n}\r\n\r\nclass ConstructorProxy {\r\n    private comm: any;\r\n    private Sandbox: any;\r\n    private element: HTMLElement;\r\n    private director: any;\r\n    public sandbox: any;\r\n\r\n    constructor({ comm, Sandbox, element, director }) {\r\n        this.comm = comm;\r\n        this.Sandbox = Sandbox;\r\n        this.element = element;\r\n        this.director = director;\r\n    }\r\n\r\n    construct(Target, args) {\r\n        var { Sandbox, comm, element, director } = this;\r\n        var sandbox = new Sandbox(element, comm, director);\r\n        var params = [].concat(sandbox, 'extra');\r\n        var data = { type: 'construct', Target, args };\r\n        var result = Reflect.construct(Target, params /*, PrototypeConstructor*/);\r\n        \r\n        this.sandbox = sandbox;\r\n        comm.publish(comm.channels['PROXY:INVOKED'], data);\r\n        comm.publish(comm.channels['PROXY:CONSTRUCT:INVOKED'], data);\r\n        \r\n        return result;\r\n    }\r\n    \r\n}\r\n\r\nclass MemberProxy {\r\n    private comm: any;\r\n    private source: any;\r\n    private element: HTMLElement;\r\n\r\n    constructor({ comm, source, element }) {\r\n        this.comm = comm;\r\n        this.source = source;\r\n        this.element = element;\r\n    }\r\n\r\n    has(target: any, key: any) {\r\n        var { source, comm } = this;\r\n        var data = { type: 'has', source, key };\r\n        var result = Reflect.has(source, key);\r\n        \r\n        comm.publish(comm.channels['PROXY:INVOKED'], data);\r\n        comm.publish(comm.channels['PROXY:HAS:INVOKED'], data);\r\n        \r\n        return result;\r\n    }\r\n\r\n    get(target: any, key: any, receiver: any) {\r\n        // if (target[key].call) return new Proxy( target[key], new MethodProxy({ comm: this.comm, source: this.source, element: this.element }) );\r\n        var { source, comm, element } = this;\r\n        var data = { type: 'get', source, key };\r\n        var result = Reflect.get(source, key);  // omit receiver to get key of source\r\n        \r\n        comm.publish(comm.channels['PROXY:INVOKED'], data);\r\n        comm.publish(comm.channels['PROXY:GET:INVOKED'], data);\r\n        \r\n        return result;\r\n    }\r\n\r\n    set(target: any, key: any, value: any, receiver: any) {\r\n        var { source, comm } = this;\r\n        var data = { type: 'set', source, key, value };\r\n        var result = Reflect.set(source, key, value);\r\n        \r\n        comm.publish(comm.channels['PROXY:INVOKED'], data);\r\n        comm.publish(comm.channels['PROXY:SET:INVOKED'], data);\r\n        \r\n        return result\r\n    }\r\n\r\n    deleteProperty(target: Function, key: any) {\r\n        var { source, comm } = this;\r\n        var data = { type: 'delete', source, key };\r\n        var result = Reflect.deleteProperty(source, key);\r\n        \r\n        comm.publish(comm.channels['PROXY:INVOKED'], data);\r\n        comm.publish(comm.channels['PROXY:DELETE:INVOKED'], data);\r\n        \r\n        return result;\r\n    }\r\n\r\n}\r\n\r\nclass MethodProxy {\r\n    private comm: any;\r\n    private source: any;\r\n    private element: HTMLElement;\r\n\r\n    constructor({ comm, source, element }) {\r\n        this.comm = comm;\r\n        this.source = source;\r\n        this.element = element;\r\n    }\r\n\r\n    apply(target, thus, args) {\r\n        var { source, comm } = this;\r\n        var data = { type: 'apply', source, target, thus, args };\r\n        var result = target.call(source, ...args);\r\n        // var result = source[target.name](...args);\r\n        // var result = target.call(thus, ...args);\r\n        // var result = Reflect.apply(target, thus, args);\r\n        \r\n        comm.publish(comm.channels['PROXY:INVOKED'], data);\r\n        comm.publish(comm.channels['PROXY:APPLY:INVOKED'], data);\r\n        \r\n        return result;\r\n    }\r\n\r\n}\r\n\r\nclass ProxyManager {  // sets up & manages proxy relationships\r\n    \r\n}\r\n\r\nclass Comparitor {\r\n    public previous: any = undefined;\r\n    get name(): string { return this.attr.name; }\r\n    get current(): any { return this.component[ this.name ]; }\r\n    set current(value: any) { this.attr.value = value; }\r\n    get equal(): boolean { return this.detect(); }\r\n    get dirty(): boolean { return !this.equal; }\r\n    \r\n    constructor(private comm: EventEmitter, private component: any, private attr: Attr) {\r\n        var { name, value } = attr;\r\n        this.previous = value;\r\n        return this;\r\n    }\r\n    \r\n    detect() {\r\n        var { comm, name, previous, current } = this;\r\n        var equal = (previous === current);\r\n        var details = { name, previous, current, equal };\r\n        \r\n        if (!equal) comm.publish(comm.channels['ELEMENT:ATTRIBUTE:CHANGE'], details);\r\n        return equal;\r\n    }\r\n    \r\n    update() {\r\n        var { name, component } = this;\r\n        this.previous = this.current = component[name];\r\n        return this;\r\n    }\r\n    \r\n}\r\n\r\nclass TemplateVariable {  // TODO: this could probably just have attr passed in while using getters for everything\r\n    name: string = '';\r\n    attr: Attr = null;\r\n    element: HTMLElement = null;\r\n    \r\n    constructor(options: any = {}) {\r\n        var { name, attr, element } = options;\r\n        \r\n        this.name = name || this.name;\r\n        this.attr = attr || this.attr;\r\n        this.element = element || this.element;\r\n        \r\n        return this;\r\n    }\r\n    \r\n}\r\nclass TemplateListener extends TemplateVariable {\r\n    type: string = '';\r\n    handler: (e: Event) => any;\r\n    \r\n    constructor(options: any = {}) {\r\n        super(options);\r\n        var { type, handler } = options;\r\n        \r\n        this.type = type || this.type;\r\n        this.handler = handler || this.handler;\r\n        \r\n        return this;\r\n    }\r\n    \r\n}\r\nclass TemplateManagementOptions {\r\n    // reReference: RegExp = /^#(.+)$/;\r\n    reAttrIn: RegExp = /\\[(\\w*)\\]/;\r\n    reStructural: RegExp = /^\\*(\\w*)$/;\r\n    reListener: RegExp = /\\((\\w*)\\)/;\r\n    reListenerValue: RegExp = /(\\w*)\\((.*)\\)/;\r\n    // reInterpolable: RegExp = /{{([^{}]*)}}/g;\r\n}\r\nclass AttributeManager {\r\n    get name() { return this.attr.name; }\r\n    get value() { return this.attr.value; }\r\n    get element() { return this.attr.ownerElement; }\r\n    \r\n    constructor(protected attr: Attr) {\r\n        var { name, value, ownerElement: element } = attr;\r\n        attr.addEventListener('attributechange', this.handleChange, true);\r\n        attr.addEventListener('mutation', (e) => console.log('MUTATION IS A NATIVE EVENT!'), true);\r\n        attr.addEventListener('attributechange', (e) => console.log('MUTATION EVENT!'), true);\r\n        return this;\r\n    }\r\n    \r\n    destroy() {\r\n        var { attr } = this;\r\n        attr.removeEventListener('change', this.handleChange, false);\r\n        return this;\r\n    }\r\n    \r\n    private handleChange = (e: CustomEvent) => {\r\n        var { name, value, element, attr } = this;\r\n        var detail = { name, value, element, attr }, event = new CustomEvent('attributechange', { detail });\r\n        console.log('@AttrManager # handleChange', e, this);\r\n        element.dispatchEvent(event);\r\n        \r\n    };\r\n    \r\n}\r\n\r\nclass MutationManager {\r\n    protected observer: MutationObserver = new MutationObserver( (r, o) => this.observe(r, o) );\r\n    protected element: Element;\r\n    \r\n    constructor(protected comm: EventEmitter, protected component: any) {}\r\n    \r\n    private observe(changes: MutationRecord[], observer: MutationObserver) {\r\n        for(let mutation of changes) this[mutation.type](mutation);\r\n    }\r\n    \r\n    private ['childList'](mutation: MutationRecord) {\r\n        var { element, component, comm } = this;\r\n        console.log('A child node has been added or removed.');\r\n        comm.publish(comm.channels[''], { mutation, element });\r\n    }\r\n    private ['attributes'](mutation: MutationRecord) {\r\n        var { component, comm } = this;\r\n        var { attributeName: name, target: element } = mutation;\r\n        var attr = (element as Element).getAttributeNode(name);\r\n        var detail = mutation, e = new CustomEvent('attributechange', { detail }), a = new CustomEvent('mutation', { detail });\r\n        \r\n        comm.publish(comm.channels['ELEMENT:MUTATION:OBSERVED'], mutation);\r\n        element.dispatchEvent(e);\r\n        attr.dispatchEvent(a);\r\n    }\r\n    private ['subtree'](mutation: MutationRecord) {\r\n        var { element, component, comm } = this;\r\n    }\r\n    \r\n    connect(element: Element, config?: any) {\r\n        var { observer } = this;\r\n        var config = { attributes: true, childList: true, subtree: true, ...config };\r\n        \r\n        this.element = element;\r\n        observer.observe(element, config);\r\n        \r\n        return this;\r\n    }\r\n    \r\n    destroy() {\r\n        this.observer.disconnect();\r\n        // destroy all attribute listeners as well\r\n    }\r\n    \r\n}\r\nclass ContentManager {\r\n    protected dTemplateReady: Deferred<boolean> = new Deferred();\r\n    protected $slots: Map<string, NodeList> = new Map();\r\n    // protected $variables: Map<string, Element> = new Map();\r\n    // protected attributes: AttributeManager[] = [ ];\r\n    protected templateListeners: TemplateListener[] = [];\r\n    protected activeListeners: { element, type, handler }[] = [ ];\r\n    protected mutations: MutationManager = new MutationManager(this.comm, this.component);\r\n    public fragment: DocumentFragment|Element = new DocumentFragment();\r\n    public template: string = '';\r\n    public content: string = '';\r\n    get component() { return this.element.component; }\r\n    get comm() { return this.element.comm; }\r\n    get $elementRefs() { return this.element.$elementRefs; }\r\n    get elementRefs() { return this.element.elementRefs; }\r\n    get $attrRefs() { return this.element.$attrRefs; }\r\n    get attrRefs() { return this.element.attrRefs; }\r\n    get listeners() { return this.element.listeners; }\r\n    get reAttrIn() { return this.options.reAttrIn; }\r\n    get reStructural() { return this.options.reStructural; }\r\n    get reListener() { return this.options.reListener; }\r\n    get reListenerValue() { return this.options.reListenerValue; }\r\n    protected pipeNodeHandler = (handler: Function) => (e: CustomEvent) => handler.call(this, e.detail, e);\r\n    protected nodeProcessors: ChainOfResponsibility = new ChainOfResponsibility({}, [\r\n        { respond: this.pipeNodeHandler(this.processSlotElementNode) },\r\n        { respond: this.pipeNodeHandler(this.processAttributeNodeRepeat) },  // note Execution Guards in method\r\n        { respond: this.pipeNodeHandler(this.processElementNode) },\r\n        { respond: this.pipeNodeHandler(this.processTextNode) },\r\n        { respond: this.pipeNodeHandler(this.processCommentNode) },\r\n    ]);\r\n    protected pipeAttributeHandler = (handler: Function) => (e: CustomEvent) => handler.call(this, e.detail, e);\r\n    protected attributeProcessors: ChainOfResponsibility = new ChainOfResponsibility({}, [\r\n        { respond: this.pipeAttributeHandler(this.handlePropertyBinding) },\r\n        { respond: this.pipeAttributeHandler(this.handleListenerBinding) },\r\n    ]);\r\n    \r\n    constructor(private element: HTMLElement&any, private options: TemplateManagementOptions) {\r\n        var { $slots } = this;\r\n        var container = document.createElement('div');\r\n        \r\n        container.innerHTML = element.innerHTML;  // this needs to be done at construction-time\r\n        $slots.clear();  // clear before each potential cycle\r\n        for (let i = 0, len = container.childNodes.length; i < len; i++) setSlot.call(this, $slots, <Node&Element>container.childNodes[i]);\r\n        \r\n        function setSlot($slots: Map<string, NodeList>, node: Node&Element) {  // Node.ELEMENT_NODE === 1\r\n            if (!{ '1': true }[ node.nodeType ]) return;\r\n            if ( !node.hasAttribute('slot') ) return;\r\n            if ( $slots.has(node.slot) ) return;  // if already set, skip. parent.querySelectorAll() gets siblings.\r\n            var { slot, parentElement: parent } = node;\r\n            var selector = `[slot=\"${slot}\"]`, all = parent.querySelectorAll(selector);\r\n            \r\n            if (all.length) $slots.set(slot, all);\r\n        }\r\n        \r\n    }\r\n    \r\n    parseNode(node: Node): Node {\r\n        var { nodeProcessors: cor } = this;\r\n        var e = new CustomEvent('domnodeprocess', { detail: <any>node })\r\n          , e = cor.respond(e)\r\n          , { detail: result } = e\r\n          ;\r\n        var { isConnected, parentNode: parent, previousSibling: previous, nextSibling: next, firstChild: child } = result;\r\n        \r\n        // RECURSION\r\n        if (result !== node) return this.parseNode(result);  // reparse. assume replacement occurred. do not continue for next or child.\r\n        if (child) this.parseNode(child);  // TCO???\r\n        if (next) this.parseNode(next);  // TCO???\r\n        this.dTemplateReady.resolve(true);  // gets fulfilled after last element processed. noop after that.\r\n        \r\n        return node;  // result can still equal node\r\n    }\r\n    \r\n    private processSlotElementNode(node: Node&Element&HTMLSlotElement, response: CustomEvent): Node&Element {  // Node.ELEMENT_NODE === 1\r\n        if (!{ '1': true }[ node.nodeType ]) return node;  // https://developer.mozilla.org/en-US/docs/Web/API/Node/nodeType\r\n        if (!{ 'SLOT': true }[ node.tagName ]) return node;\r\n        if ( !this.$slots.has(node.name) ) return node;  // only process if there are occupants\r\n        var { $slots } = this;\r\n        var { name, previousSibling: previous } = node;\r\n        var occupants: NodeList = $slots.get(name)\r\n          , container = document.createElement('div')\r\n          ;\r\n        occupants.forEach( (occupant) => container.appendChild(occupant) );\r\n        node.outerHTML = container.innerHTML;\r\n        response.stopPropagation();  // end responsibility processing. abort/break chain. do not pass into next process.\r\n        \r\n        return <Node&Element>previous.nextSibling;\r\n    }\r\n    \r\n    private processAttributeNodeRepeat(node: Node&Element, response: CustomEvent): Node&Element {\r\n        if (!{ '1': true }[ node.nodeType ]) return node;  // https://developer.mozilla.org/en-US/docs/Web/API/Node/nodeType\r\n        \r\n        if ( !node.hasAttribute('*each') ) return node;\r\n        else response.stopPropagation();  // end responsibility processing. abort/break chain. do not pass into next process.\r\n        \r\n        var attribute: Attr = node.getAttributeNode('*each')\r\n          , replacement: Node&Element = this.handleStructuralRepeat(attribute)\r\n          ;\r\n        return replacement;\r\n    }\r\n    private handleStructuralRepeat(attr: Attr): Node&Element {\r\n        var { reStructural, component } = this;\r\n        var { name, value, ownerElement: instructor } = <any>attr;\r\n        var { previousSibling: previous } = instructor;\r\n        var matches = reStructural.exec(name), [ match, type ] = matches;\r\n        var [ namespace, property ] = value.split(' of ');\r\n        var items = component[property] || [ { id: 3 }, { id: 2 }, { id: 1 } ];\r\n        var ignore = instructor.removeAttribute(match);  // avoid infinite loop\r\n        var clones = items.map( (item) => utils.interpolate(instructor.outerHTML)({ ...component, [namespace]: item }) )  // not working because utils.interpolate doesn't account for namespaces (x.y.z)\r\n          , elements = clones.join('\\n')\r\n          ;\r\n        instructor.outerHTML = elements;  // replace current element with clones. create real Nodes in DOM Tree & [Heap] memory.\r\n        \r\n        return previous.nextSibling;  // that node which now exists at instructor's index due to replacement\r\n    }\r\n    \r\n    private processElementNode(node: Node&Element): Node&Element {  // Node.ELEMENT_NODE === 1\r\n        if (!{ '1': true }[ node.nodeType ]) return node;  // https://developer.mozilla.org/en-US/docs/Web/API/Node/nodeType\r\n        var attributes: NamedNodeMap = node.attributes, attrs = Array.prototype.slice.call(attributes), attr = attrs.shift();\r\n        var result = this.processAttributeNode(attr, ...attrs);\r\n        \r\n        return node;\r\n    }\r\n    private processAttributeNode(node: Node&Attr, ...more: (Node&Attr)[]): Node&Attr {  // Node.ATTRIBUTE_NODE === 2\r\n        if (!node) return node;\r\n        if (!{ '2': true }[ node.nodeType ]) return node;  // https://developer.mozilla.org/en-US/docs/Web/API/Node/nodeType\r\n        var { name, value, ownerElement: owner } = node;\r\n        var { attributeProcessors: cor } = this;\r\n        var e = new CustomEvent('domnodeattributeprocess', { detail: <any>node })\r\n          , e = cor.respond(e)\r\n          , { detail: result } = e\r\n          ;\r\n        var next: Node&Attr = more.shift();\r\n        \r\n        if (next) this.processAttributeNode(next, ...more);  // TCO???\r\n        return node;\r\n    }\r\n    private handlePropertyBinding(node: Node&Attr): Node&Attr {\r\n        if (!{ '2': true }[ node.nodeType ]) return node;  // https://developer.mozilla.org/en-US/docs/Web/API/Node/nodeType\r\n        if ( !this.reAttrIn.test(node.name) ) return node;\r\n        var { reAttrIn, component } = this;\r\n        var { name, value, ownerElement: owner } = node;\r\n        var matches = reAttrIn.exec(name), [ match, property ] = matches;\r\n        var { [value]: datum } = component;\r\n        \r\n        // console.log('ATTR (IN) %O', node, property, node.value, datum);\r\n        // ownerElement.setAttribute(property, datum);\r\n        owner[property] = datum;\r\n        \r\n        return node;\r\n    }\r\n    private handleListenerBinding(node: Node&Attr): Node&Attr {\r\n        if (!{ '2': true }[ node.nodeType ]) return node;  // https://developer.mozilla.org/en-US/docs/Web/API/Node/nodeType\r\n        if ( !this.reListener.test(node.name) ) return node;\r\n        var { templateListeners, reListener } = this;\r\n        var { name, ownerElement: element } = node, matches = reListener.exec(name), [ match, type ] = matches;\r\n        var handler = this.createBindingInvoker(node);\r\n        var details = new TemplateListener({ name, type, node, element, handler });\r\n        // console.log('LISTENER %O', node);\r\n        \r\n        templateListeners.push(details);\r\n        return node;\r\n    }\r\n    private createBindingInvoker(attr: Attr): Function {\r\n        var { component, reListenerValue } = this;\r\n        var { name, value } = attr;\r\n        var [ match, method, args ] = value.match(reListenerValue);\r\n        var exe = utils.composeExecutor(component, method);\r\n        var op = `with($_) return eval(\"h(${args})\");`;\r\n        var fn = new Function('$_', 'h', '$event', op);\r\n        var f = (e) => fn(component, exe, e);\r\n        \r\n        return f;\r\n    }\r\n    \r\n    private processTextNode(node: Node&Text): Node&Text {  // Node.TEXT_NODE === 3\r\n        if (!{ '3': true }[ node.nodeType ]) return node;  // https://developer.mozilla.org/en-US/docs/Web/API/Node/nodeType\r\n        // var { component} = this;\r\n        // var { data } = node;\r\n        // var interpolated = utils.interpolate(data)(component);\r\n        \r\n        // console.log('TEXT %O', node);\r\n        // // node.replaceWith(interpolated);\r\n        // // console.log('TEXT %O', node, data, interpolated);\r\n        \r\n        return node;\r\n    }\r\n    \r\n    private processCommentNode(node: Node&Comment): Node&Comment {  // Node.COMMENT_NODE === 8\r\n        if (!{ '8': true }[ node.nodeType ]) return node;  // https://developer.mozilla.org/en-US/docs/Web/API/Node/nodeType\r\n        // var attrs: NamedNodeMap = node.attributes;\r\n        \r\n        // console.log('COMMENT %O', node);\r\n        // for (let i = 0, len = attrs.length; i < len; i++) this.parseChildAttr(attrs[i], i, attrs);\r\n        // this.parse(node.childNodes);\r\n        \r\n        return node;\r\n    }\r\n    \r\n    /**\r\n     * @intention : Leverage <template> &| DocumentFragment so that DOM objects do not change between parsing template variables & processing event-bindings.\r\n     */\r\n    refresh(template: string = '') {\r\n        var { component, element, dTemplateReady } = this;\r\n        var { shadow } = element;\r\n        var { promise: pTemplateReady } = dTemplateReady;\r\n        var innerHTML = utils.interpolate(template)(component);\r\n        \r\n        shadow.innerHTML = innerHTML;\r\n        pTemplateReady\r\n            .then( () => this.template = template )\r\n            .then( () => this.bindMutationObservers() )\r\n            .then( () => this.bindElementNodeRefs() )\r\n            .then( () => this.bindAttributeNodeRefs() )\r\n            .then( () => this.bindListeners() )\r\n            // .then( () => this.element.config.createSurrogate() )\r\n            .then( () => this.dTemplateReady = new Deferred() )\r\n            // .then( () => this.comm.publish(READY) )\r\n            ;\r\n        this.destroy()\r\n            .parseNode(shadow.firstChild)\r\n            ;\r\n        \r\n        return this;\r\n    }\r\n    \r\n    appendTo(element: Element) {\r\n        // var { content } = this;\r\n        // this.element = element;\r\n        // this.element.innerHTML = content;\r\n        \r\n        return this;\r\n    }\r\n    \r\n    bind() {  // convert all of this to Promises using new Deferred() at this.processNode Tail-Call.\r\n        this.bindMutationObservers()\r\n            .bindListeners()\r\n            .dTemplateReady = new Deferred()\r\n            ;\r\n        return this;\r\n    }\r\n    bindMutationObservers() {\r\n        var { element, mutations } = this;\r\n        mutations.connect(element);\r\n        mutations.connect(element.shadow);\r\n        return this;\r\n    }\r\n    bindElementNodeRefs() {\r\n        var { element, component, elementRefs } = this;\r\n        // element.matches(selector);\r\n        for (let { isHost, selector, key } of elementRefs) if (!{ 'function': true }[ typeof component[key] ]) isHost ? component[key] = element : component[key] = element.querySelector(selector);\r\n        return this;\r\n    }\r\n    bindAttributeNodeRefs() {\r\n        var { element, component, attrRefs } = this;\r\n        for (let { isHost, selector, key, name } of attrRefs) if (!{ 'function': true }[ typeof component[key] ]) isHost ? component[key] = element.getAttributeNode(name) : component[key] = element.querySelector(selector).getAttributeNode(name);\r\n        return this;\r\n    }\r\n    bindListeners() {\r\n        var { element, listeners, templateListeners, $elementRefs } = this;\r\n        listeners.forEach( ({ key, type, handler }) => this.addNodeListener(key, type, handler ) );\r\n        templateListeners.forEach( ({ element: target, type, handler }) => target.addEventListener(type, handler, false) );\r\n        return this;\r\n    }\r\n    addNodeListener(key: string, type: string, handler: Function) {\r\n        var { element, $elementRefs, $attrRefs, activeListeners } = this;\r\n        var metadata = $elementRefs.get(key) || $attrRefs.get(key) || { };\r\n        var { decorator, selector, isHost, name } = metadata;\r\n        var target = {\r\n            'true': element,\r\n            'false': element.shadow['querySelector'](selector),\r\n        }[ isHost ];\r\n        var node = {\r\n            'reference:element': target,\r\n            'reference:attribute': target['getAttributeNode'](name),\r\n        }[ decorator ];\r\n        \r\n        if ( !$elementRefs.get(key) && !$attrRefs.get(key) ) return this;\r\n        if (  $elementRefs.get(key) &&  $attrRefs.get(key) ) return this;\r\n        \r\n        node.addEventListener(type, handler, false);\r\n        activeListeners.push({ element: node, type, handler });\r\n    }\r\n    \r\n    destroy() {\r\n        var { element, mutations, listeners, templateListeners, activeListeners } = this;\r\n        \r\n        mutations.destroy();\r\n        templateListeners.forEach( ({ element, type, handler }) => element.removeEventListener(type, handler, false) );\r\n        activeListeners.forEach( ({ element, type, handler }) => element.removeEventListener(type, handler, false) );\r\n        templateListeners.length = 0;\r\n        activeListeners.length = 0;\r\n        \r\n        return this;\r\n    }\r\n    \r\n}\r\n\r\n\r\nclass ElementEngine {\r\n    \r\n    constructor(private Sandbox: any, private director: any) {}\r\n    \r\n    private getConfig(Class, element) {  // TODO: fractionate routine\r\n        var { director, Sandbox } = this;\r\n        var { metadata } = Class;\r\n        var { $members, $observedAttributes, $watchers, $elements: $elementRefs, $attrs: $attrRefs, $listeners, $subscriptions } = metadata;\r\n        \r\n        var comm = new Comm();\r\n        var construction = new ConstructorProxy({ comm, Sandbox, element, director }); \r\n        var ClassProxy = new Proxy(Class, construction);\r\n        var component = new ClassProxy({ state: false });\r\n        var membersProxy = new MemberProxy({ comm, source: component, element });\r\n        var methodsProxy = new MethodProxy({ comm, source: component, element });\r\n        var proxy = new Proxy(component, membersProxy);\r\n        var properties = Object.getOwnPropertyNames(Class.prototype);\r\n        var methodBlacklist = { 'constructor': true, 'connectedCallback': true, 'attributeChangedCallback': true, 'disconnectedCallback': true, 'adoptedCallback': true };\r\n        \r\n        var members = Array.from( $members.values() )\r\n          , watchers = Array.from( $watchers.values() )\r\n          , elementRefs = Array.from( $elementRefs.values() )\r\n          , attrRefs = Array.from( $attrRefs.values() )\r\n          , listeners = Array.from( $listeners.values() ).map( (item) => utils.mapExecutor(component, item) )  // map each handler to a handler bound to \"component\"\r\n          , subscriptions = Array.from( $subscriptions.values() ).map( (item) => utils.mapExecutor(component, item) )  // map each handler to a handler bound to \"component\"\r\n          ;\r\n        var shadow = element;\r\n        // var shadow = element.attachShadow({ mode: 'open' });\r\n        \r\n        var createSurrogate = _createSurrogate.bind(this, { proxy, component, methodsProxy, methodBlacklist });\r\n        \r\n        // TODO!!! THIS NEEDS TO BE PERFORMED REPEATEDLY OnRecycle (and surrogate destroyed) MAY OBVIATE INFINITE LOOP.\r\n        function _createSurrogate({ proxy, component, methodsProxy, methodBlacklist }) {\r\n            var surrogate = Object.create(proxy);  // use Object.create to carry over get|set; spread op fails to do so\r\n            for (let key in proxy) if (proxy[key] && proxy[key].call) surrogate[key] = new Proxy(proxy[key], methodsProxy);\r\n            properties.forEach( (key) => { if (!!component[key] && component[key].call && !methodBlacklist[key]) surrogate[key] = new Proxy(component[key], methodsProxy); });\r\n            return surrogate;\r\n        }\r\n        \r\n        var config = {  // TODO: create fn\r\n            comm,\r\n            director,\r\n            Sandbox,\r\n            Class,\r\n            ...{\r\n                shadow,\r\n            },\r\n            ...{\r\n                sandbox: construction.sandbox,\r\n            },\r\n            ...{\r\n                $members, members,\r\n            },\r\n            ...{\r\n                $watchers, watchers,\r\n            },\r\n            ...{\r\n                $elementRefs, elementRefs,\r\n                $attrRefs, attrRefs,\r\n            },\r\n            ...{\r\n                $listeners, listeners,\r\n                $subscriptions, subscriptions,\r\n            },\r\n            ...{\r\n                component,\r\n                // surrogate,\r\n                createSurrogate,\r\n            },\r\n        };\r\n        \r\n        return config;\r\n    }\r\n    \r\n    private prepare(Class) {\r\n        var thus = this;\r\n        var { metadata } = Class;\r\n        var { $observedAttributes } = metadata;\r\n        var observedAttributes = Array.from( $observedAttributes.values() ).map( ({ name }) => name )\r\n        var templateOptions = new TemplateManagementOptions();\r\n        \r\n        return class Element extends HTMLElement {  // https://alligator.io/web-components/attributes-properties/\r\n            static get observedAttributes(): string[] { return observedAttributes }  // native HTML Custom Elements\r\n            protected $utils: Utilities = new Utilities();\r\n            private config: any = thus.getConfig(Class, this);\r\n            private comm: EventEmitter = this.config.comm;\r\n            private $: any = this.config.sandbox;\r\n            private component: any = this.config.component;\r\n            // private surrogate: any = this.config.surrogate;\r\n            // private createSurrogate: any = this.config.createSurrogate;\r\n            //\r\n            private shadow: ShadowRoot = this.config.shadow;\r\n            //\r\n            private $observedAttributes: Map<string, any> = this.config.$observedAttributes;\r\n            private observedAttributes: any[] = this.config.observedAttributes;\r\n            private $watchers: Map<string, any> = this.config.$watchers;\r\n            private watchers: any[] = this.config.watchers;\r\n            private $elementRefs: Map<string, any> = this.config.$elementRefs;\r\n            private elementRefs: any[] = this.config.elementRefs;\r\n            private $attrRefs: Map<string, any> = this.config.$attrRefs;\r\n            private attrRefs: any[] = this.config.attrRefs;\r\n            private $listeners: Map<string, any> = this.config.$listeners;\r\n            private listeners: ListenerMap[] = this.config.listeners;\r\n            private $subscriptions: Map<string, any> = this.config.$subscriptions;\r\n            private subscriptions: any[] = this.config.subscriptions;\r\n            //\r\n            private $content: ContentManager = new ContentManager(this, templateOptions);\r\n            private template: string = '';  // this.config.template;\r\n            // private pTemplate: Promise<string> = this.config.pTemplate;\r\n            // private $comparitors: Map<string, Comparitor> = new Map();\r\n            private handlers: any[] = [ ];\r\n            // get comparitors(): Comparitor[] { return Array.from( this.$comparitors.values() ); }\r\n            // get content(): string { return this.$utils.interpolate(this.template)(this.component); }\r\n            // set content(value: string) { this.innerHTML = value; }\r\n            get attrs() { return observedAttributes; }\r\n            get channels() { return this.comm.channels; }\r\n            // get $elements() { return this.$content.$elements; }\r\n            \r\n            constructor() {\r\n                super();\r\n                console.log('CONSTRUCTOR');\r\n                var { comm } = this;\r\n                \r\n                this.bind();\r\n                comm.subscribe(comm.channels['ELEMENT:MUTATION:OBSERVED'], (e) => console.log('@MUTATION', e) );\r\n                comm.subscribe(comm.channels['ELEMENT:TEMPLATE:FOUND'], this.handleTemplate );\r\n                // comm.subscribe(comm.channels['PROXY:INVOKED'], this.handleProxyInvokation);\r\n                comm.subscribe(comm.channels['PROXY:APPLY:INVOKED'], this.handleProxyInvokation);\r\n                // comm.subscribe(comm.channels['PROXY:MOCK:INVOKED'], this.handleProxyInvokation);\r\n                comm.publish(comm.channels['LEFECYCLE:ELEMENT:CREATED']);\r\n                \r\n                return this;\r\n            }\r\n            \r\n            private bind() {\r\n                var { comm, component, subscriptions } = this;\r\n                var { observedAttributes: attributes } = Element;\r\n                \r\n                attributes.forEach( (key) => this.bindAttribute(key) );\r\n                subscriptions.forEach( ({ type, handler }) => comm.subscribe(comm.channels[type], handler) );\r\n                \r\n                return this;\r\n            }\r\n            private bindAttribute(key: string) {  // KEEP?!!!\r\n                var { component } = this;\r\n                var descriptor = Object.getOwnPropertyDescriptor(Class.prototype, key)\r\n                  , descriptor = { ...descriptor }\r\n                  , { get, set } = descriptor\r\n                  ;\r\n                var value = this.getAttribute(key);\r\n                if (!value) this.setAttribute(key, component[key]);\r\n                if (descriptor.get && descriptor.set) descriptor = { get, set };\r\n                else if (!descriptor.get && !descriptor.set) descriptor = { get: () => this.getAttribute(key), set: (v) => this.setAttribute(key, v) };\r\n                else if (!descriptor.get && descriptor.set) descriptor = { get: () => this.getAttribute(key), set };\r\n                else if (descriptor.get && !descriptor.set) descriptor = { get, set: () => this.setAttribute(key, component[key]) };\r\n                Object.defineProperty(component, key, descriptor);\r\n                \r\n                return this;\r\n            }\r\n            \r\n            // https://developer.mozilla.org/en-US/docs/Web/Web_Components/Using_custom_elements#Using_the_lifecycle_callbacks\r\n            connectedCallback() {\r\n                var { comm, component } = this;\r\n                console.log('connectedCallback');\r\n                // if (component.attachedCallback) component.connectedCallback();\r\n                // this.$load();\r\n                comm.publish(comm.channels['LEFECYCLE:ELEMENT:CONNECTED']);\r\n            }\r\n            attributeChangedCallback(attrName: string, oldVal: string, newVal: string) {\r\n                var { component, $watchers } = this;\r\n                // // var action = `[${attrName}]`, handler = component[action];\r\n                // // var any = `[*]`, all = component[any];\r\n                var $watcher = $watchers.get(attrName);\r\n                \r\n                // // if (component.attributeChangedCallback) component.attributeChangedCallback(attrName, oldVal, newVal);\r\n                // // if (all) all.call(component, attrName, oldVal, newVal);\r\n                // // if (handler) handler.call(component, newVal, oldVal);\r\n                if ($watcher) $watcher.handler.call(component, newVal, oldVal);\r\n            }\r\n            disconnectedCallback() {\r\n                var { component, listeners, subscriptions } = this;\r\n                if (component.detachedCallback) component.disconnectedCallback();\r\n                // listeners.forEach( (map) => this.unbindListener(component, map) );\r\n                // subscriptions.forEach( (map) => this.unbindMessageHandler(component, map) );\r\n                // this.$unload();\r\n            }\r\n            adoptedCallback() {\r\n                var { component } = this;\r\n                // if (component.adoptedCallback) component.adoptedCallback();\r\n                // this.$load();\r\n                console.log('--adoptedCallback--');\r\n            }\r\n            \r\n            cycle() {\r\n                var { template } = this;\r\n                setTimeout( () => this.$content.refresh(template), 0 );  // let current callStack clear while element may still be mounting\r\n            }\r\n            \r\n            private handleTemplate = (e: CustomEvent) => {\r\n                var { type, detail: template } = e;\r\n                this.template = template;\r\n                this.cycle();\r\n                // console.log('\\n\\n', 'WORKING ON TEMPLATE-HANDLING', '\\n', template, '\\n\\n');\r\n            };\r\n            \r\n            private handleProxyInvokation = (e: CustomEvent) => {  // KEEP?\r\n                // var { component, attributes, content } = this;\r\n                // var { type, detail } = e, { type: method } = detail;\r\n                // var dirty = this.getDirtyAttributeStates(this.comparitors);\r\n                \r\n                // dirty.forEach( ({ name }) => this.initAttribute(component, attributes[name]) );\r\n                console.log('--handleProxyInvokation--');\r\n                setTimeout( () => this.cycle(), (1000 * 3) );\r\n            };\r\n            \r\n        };\r\n    }\r\n    \r\n    define(name, Class, options?: any) {\r\n        if ( !!customElements.get(name) ) return this;\r\n        var Element = this.prepare(Class);\r\n        window.customElements.define(name, Element, options);\r\n        \r\n        return this;\r\n    }\r\n    \r\n}\r\n\r\nexport { ElementEngine };\r\n\r\n/* ================================================================================================================================\r\nTODO\r\n\r\nORDER OF OPERATIONS\r\nOnInitialization:\r\n    getOccupants()\r\n        .then( trigger('onchange') )\r\nOnChange:\r\n    pTemplateReady\r\n        .then( () => this.template = template )\r\n        .then( () => this.bindMutationObservers() )\r\n        .then( () => this.bindElementNodeRefs() )\r\n        .then( () => this.bindAttributeNodeRefs() )\r\n        .then( () => this.bindListeners() )\r\n\r\n\r\nRefactor\r\nDo less; simplify. Use EDA for more. Lifecycle Hooks should be CustomEvents from Comm.\r\n - ProxyManager: Create \"ProxyManager\" class -- passing in comm -- to manage Proxy operations & triggers.\r\n - AttributeValueProxy: R&D; see if a Proxy Trap can be set on attributes so that Events can be setup on `set()` for `.value`.\r\n    - @watch: @watch Decorator should STILL be used ONLY for Host's observedAttributes -- BUT it should drive a subscription to an event\r\n              published from attributeChangedCallback, which can be on the same or similar channel as other AttrValProxy events.\r\n    - MutationObserver: R&D https://developer.mozilla.org/en-US/docs/Web/API/MutationObserver\r\n - Lifecycle Hooks: Lifecycle Hooks should be driven through Comm.\r\n    - TODO: Define Lifecycle Flow.\r\n - @message: @message Decorator should be used for subscribing to Comm; leave assumption about Sandbox alone!\r\n    - Operators: This will obviate the complexity around operators/operands etc! :-D\r\n - Comm: Comm should remain as disperate EventTarget as to not conflate DOM events with Object-to-Object tether.\r\n - Templates: Templates should have their own Channel while `component` is responsible for BOTH getting AND `.publish`ing a template. This\r\n              way, components have control over lazyLoading and swapping out the template on the fly.\r\n    - Templates should be loaded into a detached element, such as a DOMFragment, before interations to discover template refs, \r\n      bindings, and other variables.\r\n    - TemplateRefs should be accessed through the element's $children Map.\r\n - Event Listeners: If there is a way to bind event-handlers before appending Content to DOM, after interpolation, this would be helpful.\r\n - Comm & Channels: Comm should be phased out using an @Decorator for subscriptions while providing access to Comm AND comm Channels ONLY\r\n                    through methods (get|set for channels) on element.\r\n - Slots: Need <slot>s\r\n \r\n - EDA\r\n    - Events can be published for TemplateRef variables while letting Developer decide what to do with them & their .ownerElement.\r\n    \r\n - LEFECYCLE EVENTS & CHANNELS\r\n    - ELEMENT:TEMPLATE:FOUND (watch out for Race Conditions)\r\n    - ELEMENT:CREATED (constructor)\r\n    - ELEMENT:TEMPLATE:CHECKED (DOM Fragment evaluation)\r\n        // -? ELEMENT:TEMPLATE:VARIABLE:FOUND (DOM Fragment evaluation, TemplateRef)\r\n        // -? ELEMENT:TEMPLATE:VARIABLES:FOUND (DOM Fragment evaluation, TemplateRef)\r\n    - ELEMENT:CONTENT:CREATED (interpolated)\r\n    - ELEMENT:CONTENT:CHECKED (injected/appended)\r\n        // -? ELEMENT:TEMPLATE:LISTENER:BOUND (DOM Fragment evaluation, event-handler bound)\r\n        // -? ELEMENT:TEMPLATE:LISTENERS:BOUND (DOM Fragment evaluation, event-handlers bound)\r\n        // -? ELEMENT:TEMPLATE:ATTRIBUTE:BOUND (DOM Fragment evaluation, AttrValTrap & Listener bound)\r\n        // -? ELEMENT:TEMPLATE:ATTRIBUTES:BOUND (DOM Fragment evaluation, AttrValTraps & Listeners bound)\r\n    - ELEMENT:CONTENT:READY (checked + bound)\r\n    - ELEMENT:READY (everything in its right place)\r\n      [ADDITIONAL] ... which part of the sequence do these fall in?\r\n    - ELEMENT:CONNECTED (LIFECYCLE METHOD)\r\n    - ELEMENT:DISCONNECTED (LIFECYCLE METHOD)\r\n    - ELEMENT:ADOPTED (LIFECYCLE METHOD)\r\n    - ELEMENT:ATTRIBUTE:CHANGED (LIFECYCLE METHOD, could be same channel as AttrValTraps, but could also or instead be ELEMENT:OBSERBED-ATTRIBUTE:CHANGED)\r\n\r\n\r\nREFACTOR 2\r\n\r\n\r\nSyntax\r\n\r\nTemplate (<input {{attr}}=\"{{variable}}\"  />)\r\nEvent: Uses (click)=\"handle($event, variable, 'literal')\"\r\nAttribute: type=\"text\", type=\"{{var}}\", {{var}}=\"literal\", {{attr}}=\"{{var}}\"\r\nProperty I (ctrl -> el): [value]=\"var\" (update element)\r\n// Property O (el -> ctrl): {value}=\"var\" (update controller)\r\nTextNode: {{interpolation}}\r\n\r\n\r\nBehavior\r\n\r\nTemplate: Template gets inserted into element and immediately crawled.\r\nParsing: Parsing crawls element.childNodes to include TextNodes, crawls child.attributes, and recurses from child.childNodes.\r\nAttributes: Each attribute is tested for its binding type, handled accordingly, and evaluated using an \"evaluator\".\r\nTextNodes: TextNodes always get interpolated using an \"evaluator\".\r\nChildNodes: ChildNodes are parsed using strategy above.\r\nEvaluator: Evaluator\r\n\r\n\r\nChange Detection\r\n\r\n\r\n\r\n\r\nDecorators\r\n\r\nClass decorators should always contain a \"meta\" property (on their descriptor, Class, or [root] Prototype) with a \"members\" object.\r\nMember decorators always assign metadata to a \"meta\" object on their Class under members[key] providing data for their purpose.\r\nDecorators should have the capability to be leveraged compositively with each other, adding \"meta\" data to the descriptor.\r\n\r\n@observe('prop') x: any;  // prepares metadata for observedAttributes (of \"prop\" with alias \"x\")\r\n@observer('prop') handleChange(...?) {}  // prepares metadata for handler called from attributedChangedCallback\r\n@element('tagName.class[attr]') element: HTMLElement;  // prepares metadata to select & bind an element to component['element'] (if not arguments.length then return HostElement or FirstChild or querySelector('*') or descriptor.name)\r\n@attr('tagName.class[attr]') attr: Attr;  // prepares metadata to select & bind an element's attribute-node to component['attr'] (if not \"[attr]\" then return descriptor.name)\r\n@listener('click') handleClick() {}  // prepares metadata to handle \"click\" on HostElement\r\n@dispatcher('some-type') unique: EventTarget<CustomElement, 'some-type'>; this.unique.dispatchEvent(detail);\r\n----\r\n@listener('click') @element('tagName.class[attr]') handleClick({ target }) {}  // prepares metadata to handle \"click\" on metadata.selector of type \"element\"\r\n@listener('change') @attr('tagName.class[attr]') handleChange({ ownerElement }) {}  // prepares metadata to handle \"change\" on metadata.selector of type \"attr\"\r\n\r\n\r\nMISC\r\nhttps://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/setPrototypeOf\r\n\r\n\r\n\r\nRESOURCES\r\nMutationObserver (AttrValProxy): https://developer.mozilla.org/en-US/docs/Web/API/MutationObserver\r\nDocumentFragment (Preparations): https://developer.mozilla.org/en-US/docs/Web/API/DocumentFragment\r\nShodowDOM: https://developer.mozilla.org/en-US/docs/Web/Web_Components/Using_shadow_DOM\r\n================================================================================================================================ */\r\n","\r\nexport { Vertex } from './api';\r\nexport { Core } from './core';\r\nexport { Sandbox } from './sandbox';\r\nexport { Bootstrap } from './bootstrap';\r\nexport { ElementEngine } from './element-engine';\r\nexport { Element, Attribute, Text, Comment, Directive, Pipe, Service } from './decorators';  // Classes\r\nexport { observe, observee, observer, element, attr, listener, message } from './decorators';  // members\r\n","\r\n/*\r\n\r\nDecorators\r\n\r\nClass decorators should always contain a \"meta\" property (on their descriptor, Class, or [root] Prototype) with a \"members\" object.\r\nMember decorators always assign metadata to a \"meta\" object on their Class under members[key] providing data for their purpose.\r\nDecorators should have the capability to be leveraged compositively with each other, adding \"meta\" data to the descriptor.\r\n\r\n@observee('prop') x: any;  // prepares metadata for observableAttributes (of \"prop\" with alias \"x\")\r\n@observer('prop') handleChange(...?) {}  // prepares metadata for handler called from attributedChangedCallback\r\n@element('tagName.class[attr]') element: HTMLElement;  // prepares metadata to select & bind an element to component['element'] (if not arguments.length then return HostElement or FirstChild or querySelector('*') or descriptor.name)\r\n@attr('tagName.class[attr]') attr: Attr;  // prepares metadata to select & bind an element's attribute-node to component['attr'] (if not \"[attr]\" then return descriptor.name)\r\n@listener('click') handleClick() {}  // prepares metadata to handle \"click\" on HostElement\r\n----\r\n@listener('click') @element('tagName.class[attr]') handleClick({ target }) {}  // prepares metadata to handle \"click\" on metadata.selector of type \"element\"\r\n@listener('change') @attr('tagName.class[attr]') handleChange({ ownerElement }) {}  // prepares metadata to handle \"change\" on metadata.selector of type \"attr\"\r\n\r\n*/\r\n\r\n\r\ntype ObserveeMetadata = {\r\n    decorator: 'attribute:observee',\r\n    name: string,\r\n    alias: string,\r\n    hasGet: boolean,\r\n    hasSet: boolean,\r\n    hasGetOrSet: boolean,\r\n    hasGetAndSet: boolean,\r\n};\r\ntype ObserverMetadata = {\r\n    decorator: 'attribute:observer',\r\n    name: string,\r\n    attr: string,\r\n    handler: (...splat: any[]) => any,\r\n};\r\ninterface ElementRefMetadata {\r\n    decorator: 'reference:element';\r\n    name: string;\r\n    key: string;\r\n    selector: string;\r\n    isHost: boolean;\r\n};\r\ninterface AttrRefMetadata {\r\n    decorator: 'reference:attribute';\r\n    name: string;\r\n    key: string;\r\n    selector: string;\r\n    isHost: boolean;\r\n};\r\ntype ListenerMetadata = {\r\n    decorator: 'handler:dom',\r\n    name: string,\r\n    key: string,\r\n    type: string,\r\n    handler: (...splat: any[]) => any,\r\n    isHost: boolean;\r\n};\r\ntype CommMetadata = {\r\n    decorator: 'handler:comm',\r\n    name: string,\r\n    key: string,\r\n    type: string,\r\n    handler: (...splat: any[]) => any,\r\n};\r\n\r\nclass Metadata {  // TODO: create types for maps\r\n    public $members: Map<string, any> = new Map();\r\n    public $observedAttributes: Map<string, any> = new Map();\r\n    public $watchers: Map<string, any> = new Map();\r\n    public $elements: Map<string, any> = new Map();\r\n    public $attrs: Map<string, any> = new Map();\r\n    public $listeners: Map<string, any> = new Map();\r\n    public $subscriptions: Map<string, any> = new Map();\r\n    \r\n    constructor(protected klass: any) {\r\n        var { metadata } = klass;  // might already exist\r\n        var { $members, $observedAttributes, $watchers, $elements, $attrs, $listeners, $subscriptions } = (metadata || {});\r\n        \r\n        this.$members = $members || this.$members;  // prefer existing if available\r\n        this.$observedAttributes = $observedAttributes || this.$observedAttributes;  // prefer existing if available\r\n        this.$watchers = $watchers || this.$watchers;  // prefer existing if available\r\n        this.$elements = $elements || this.$elements;  // prefer existing if available\r\n        this.$attrs = $attrs || this.$attrs;  // prefer existing if available\r\n        this.$listeners = $listeners || this.$listeners;  // prefer existing if available\r\n        this.$subscriptions = $subscriptions || this.$subscriptions;  // prefer existing if available\r\n        \r\n        klass.metadata = this;  // ensure has structure of this while this.${{x}} originates from first issuance and subsequently klass\r\n        return this;  // `this` maintains references to those members from klass.metadata\r\n    }\r\n    \r\n}\r\n\r\n\r\nvar DEFAULT_DESCRIPTOR = { writable: true, configurable: true, enumerable: true };\r\n\r\n\r\nclass DecoratorUtilities {  // DEP\r\n    namespace(object: any, ns: string, keys: string[] = ns.split('.')): boolean {\r\n        while (keys.length) if (!object[ keys[0] ]) object[ keys.shift() ] = { };\r\n        return !!(new Function(`return constructor.${ns};`))();\r\n    }\r\n    ensure(object, namespace, key, value) {\r\n        var exists = this.namespace(object, namespace);\r\n        var set = new Function('value', `object.${namespace} = value;`);\r\n        // var set = new Function('value', `object.${namespace}.${key} = value;`);\r\n        var get = new Function(`return object.${namespace};`);\r\n        \r\n        set(value);\r\n        return get();\r\n    }\r\n    meta(object, key, meta) {\r\n        this.namespace(object, 'meta.members');\r\n        object.meta.members[key] = meta;\r\n    }\r\n}\r\n\r\n\r\nfunction Element(definition: { selector: string, template?: string }, options: any = {}): any {\r\n    var data = { ...definition, type: 'element', key: 'selector', options, members: {} };\r\n    \r\n    return function get(Class: any): any {\r\n        Class.meta = data;\r\n        return { ...data, Class };\r\n    };\r\n}\r\nfunction Attribute(definition: { selector: string }): any {\r\n    var data = { ...definition, type: 'attribute', key: 'selector' };\r\n    \r\n    return function get(Class: any): any {\r\n        return { ...data, Class };\r\n    };\r\n}\r\nfunction Text(definition: { selector?: RegExp|'#text' }): any {  // selector := Text.nodeValue || Text.charaterData\r\n    /*\r\n    if reInterpolate.test(node.[nodeValue,wholeText,textContent,data]) > node.nodeValue = interpolate(nodeValue)(parent/owner)\r\n    */\r\n    var { selector = '#text' } = definition;\r\n    var data = { ...definition, type: 'text', selector };\r\n    \r\n    return function get(Class: any): any {\r\n        return { ...data, Class };\r\n    };\r\n}\r\nfunction Comment(definition: { selector?: RegExp|'#comment' }): any {  // selector := Comment.data || Comment.charaterData\r\n    /*\r\n    comments may be used to drive performance\r\n    syntax can be used to drive directive(s) / operation(s): <!-- <psst! [next.parent]=\"v-modal\" /> -->, etc\r\n    if owner > core.$selectors.linkedList.get(<string>owner, this.nextElementSibling)\r\n    */\r\n    var { selector = '#comment' } = definition;\r\n    var data = { ...definition, type: 'comment', selector };\r\n    \r\n    return function get(Class: any): any {\r\n        return { ...data, Class };\r\n    };\r\n}\r\nfunction Directive(definition: { type: '#text'|'#comment', selector: RegExp }): any {\r\n    var { type } = definition;\r\n    var get = {\r\n        '#text': Text({ ...definition, selector: '#text' }),\r\n        '#comment': Comment({ ...definition, selector: '#comment' }),\r\n    }[ type ];\r\n    \r\n    return get;\r\n}\r\nfunction Pipe() {}\r\nfunction Service(definition: { id?: string }): any {  // selector := Comment.data || Comment.charaterData\r\n    var data = { ...definition, type: 'service' };\r\n    \r\n    return function get(Class: any): any {\r\n        var { id: selector = Class.name } = data;\r\n        return { ...data, selector, Class };\r\n    };\r\n}\r\nfunction IoT() {}\r\nfunction MicroService() {}\r\n\r\nvar decorators = new (class Decorators extends DecoratorUtilities {\r\n    \r\n    /**\r\n     * @intention Provide a convenience method for mapping to correct behavior depending on input type to keep other methods clean.\r\n     *      * If member is datum : this.observee\r\n     *      * If member is method: this.observer\r\n     *      * Note: data-members are not created until class instance construction (value === undefined)\r\n     */\r\n    observe = (attr?: string): any => {\r\n        var thus = this;\r\n        \r\n        return function get(target: any, key: string, descriptor: any = {}): any {\r\n            var { constructor } = target;\r\n            var { value } = descriptor;\r\n            var metadata = new Metadata(constructor);\r\n            var descriptor = { ...descriptor, ...DEFAULT_DESCRIPTOR };\r\n            var action = { true: 'observer', false: 'observee' }[ <any>!!value ];  // this.observee || this.observer\r\n            var process = thus[action](attr);\r\n            var data = process(...arguments);\r\n            \r\n            metadata.$members.set(key, data);\r\n            return descriptor;\r\n        };\r\n    };\r\n    observee(attr?: string): any {  // @usage: @observe('options') options: any;\r\n        var thus = this;\r\n        \r\n        return function get(target: any, key: string, descriptor: any = {}): any {\r\n            var { constructor } = target;\r\n            var { get, set } = descriptor, hasGet = !!get, hasSet = !!set, hasGetOrSet = (hasGet || hasSet), hasGetAndSet = (hasGet && hasSet);\r\n            var metadata = new Metadata(constructor);\r\n            var name = (attr || key), alias = key;  // name === alias if !attr\r\n            var data = { decorator: 'attribute:observee', name, alias, hasGet, hasSet, hasGetOrSet, hasGetAndSet };\r\n            \r\n            if (!hasGetOrSet) descriptor.writable = true;  // do not declare WHATSOEVER unless !hasGetOrSet\r\n            metadata.$members.set(key, data);\r\n            metadata.$observedAttributes.set(key, data);\r\n            \r\n            return data;\r\n        };\r\n    };\r\n    observer(attr: string): any {  // @usage: @observe('options') handleOptionsChange(val, old) {}\r\n        var thus = this;\r\n        \r\n        return function get(target: any, key: string, descriptor: any = {}): any {\r\n            var { constructor } = target;\r\n            var descriptor = { ...descriptor, ...DEFAULT_DESCRIPTOR };\r\n            var { value: handler } = descriptor;\r\n            var metadata = new Metadata(constructor);\r\n            var name = key;\r\n            var data = { decorator: 'attribute:observer', name, attr, handler };\r\n            \r\n            metadata.$members.set(key, data);\r\n            metadata.$watchers.set(attr, data);\r\n            \r\n            return data;\r\n        };\r\n    };\r\n    \r\n    element(selector: string): any {\r\n        var thus = this;\r\n        var isHost = (selector === 'this');\r\n        \r\n        return function get(target: any, key: string, descriptor: any = {}): any {\r\n            var { constructor } = target;\r\n            var descriptor = { ...descriptor, ...DEFAULT_DESCRIPTOR };\r\n            var metadata = new Metadata(constructor);\r\n            var name = key;\r\n            var data = { decorator: 'reference:element', name, key, selector, isHost };\r\n            \r\n            metadata.$members.set(key, data);\r\n            metadata.$elements.set(key, data);\r\n            \r\n            return descriptor;\r\n        };\r\n    };\r\n    \r\n    attr(selector: string): any {\r\n        var thus = this;\r\n        var re = new RegExp(/^(.*)\\[(.+)\\]$/);\r\n        var matches = re.exec(selector), [ match, tagName, attr ] = matches;\r\n        var isHost = (tagName === 'this');\r\n        \r\n        return function get(target: any, key: string, descriptor: any = {}): any {\r\n            var { constructor } = target;\r\n            var descriptor = { ...descriptor, ...DEFAULT_DESCRIPTOR };\r\n            var metadata = new Metadata(constructor);\r\n            var name = attr;\r\n            var data = { decorator: 'reference:attribute', name, key, selector, isHost };\r\n            \r\n            metadata.$members.set(key, data);\r\n            metadata.$attrs.set(key, data);\r\n            \r\n            return descriptor;\r\n        };\r\n    };\r\n    \r\n    listener(type: string) {\r\n        var thus = this;\r\n        var isHost = !type;\r\n        \r\n        return function get(target: any, key: string, descriptor: any = {}): any {\r\n            var { constructor } = target;\r\n            // var descriptor = { ...descriptor, ...DEFAULT_DESCRIPTOR };\r\n            var { value: handler } = descriptor;\r\n            var metadata = new Metadata(constructor);\r\n            var name = key;\r\n            var data = { decorator: 'handler:dom', name, key, type, handler, isHost };\r\n            \r\n            metadata.$members.set(key, data);\r\n            metadata.$listeners.set(key, data);\r\n            \r\n            return descriptor;\r\n        };\r\n    };\r\n    \r\n    message(type: string): any {  // TODO\r\n        var thus = this;\r\n        \r\n        return function get(target: any, key: string, descriptor: any = {}): any {\r\n            var { constructor } = target;\r\n            var descriptor = { ...descriptor, ...DEFAULT_DESCRIPTOR };\r\n            var { value: handler } = descriptor;\r\n            var metadata = new Metadata(constructor);\r\n            var name = key;\r\n            var data = { decorator: 'handler:comm', name, key, type, handler };\r\n            \r\n            metadata.$members.set(key, data);\r\n            metadata.$subscriptions.set(key, data);\r\n            \r\n            return descriptor;\r\n        };\r\n    };\r\n\r\n})();\r\n\r\n\r\nconst {\r\n    observe, observee, observer,\r\n    element, attr,\r\n    listener, message,\r\n} = decorators;\r\n\r\nexport { Element, Attribute, Text, Comment, Directive, Pipe, Service };\r\nexport { observe, observee, observer };\r\nexport { element, attr };\r\nexport { listener, message };\r\n","\r\nvar CSV = new class CSV {\r\n    \r\n    // JSON.stringify(value[, replacer[, space]])\r\n    stringify(collection, fields, delimiter) {  // Word Art Cloud: wordToWeight() & weightToWord()\r\n        /**\r\n         * Given: map.get(fields[i]).push( collection[j][ fields[i] ] )\r\n         * Then: every column (fields[i]) contains an equal number of values as any other column.\r\n         * Because: map.get(fields[i])[0] === collection[j][ fields[i] ]\r\n         */\r\n        var $table = new Map();  // Map { 0 => { a, b, c, ... } }\r\n        var $values = new Map();  // Map { a => [ x, y, z, ... ] }\r\n        var $lines = new Map();  // Map { 0 => [ x, y, z, ... ] }\r\n        var matrix = [ ];  // [ [a,b,c,...], [a,b,c,...], ... ]\r\n        var lines = [ ];\r\n        var span = 0;\r\n        \r\n        if (!fields) fields = Object.keys( collection.reduce( (o, x) => ({ ...o, ...x }), { } ) );  // gets all available keys across all objects in collection\r\n        \r\n        for (let i = 0, width  = collection.length; i < width;  i++)\r\n        for (let j = 0, height = fields.length;     j < height; j++)\r\n\t\t(function create(value, [x, y], row, i, rows, col, j, columns) {\r\n            var _id = x, field = col;\r\n            var record = $table.get(_id) || { _id };\r\n            var column = $values.get(col) || [ ];\r\n            var line = $lines.get(x) || [ ];\r\n            \r\n            if ({ 'undefined': true }[ value ]) value = '';\r\n            matrix[x] = matrix[x] || [ ];\r\n            matrix[x][y] = record[field] = column[x] = line[y] = value;\r\n            \r\n            $table.set(_id, record);  // ensure gets set first time\r\n            $values.set(col, column);  // ensure gets set first time\r\n            $lines.set(x, line);  // ensure gets set first time\r\n            \r\n            span = Math.max.apply(null, [ span, col.length, `${value}`.length ]);\r\n            lines[x] = line.join(',');\r\n            \r\n        })(collection[i][ fields[j] ], [i, j], collection[i], i, collection, fields[j], j, fields);\r\n        \r\n        var tabs = Array.apply(null, { length: span });\r\n        var delimiter = {\r\n            '\\t': tabs.map( () => '\\t' ),\r\n            '\\s': tabs.map( () => '\\s' ),\r\n            'undefined': [ ],\r\n        }[ delimiter ].join('');\r\n        var columns = fields.join(',');\r\n        var csv = [ columns ].concat(lines).join('\\n');\r\n        var csv = csv.replace(/,/img, `,${delimiter}`);\r\n        \r\n        return csv;\r\n    }\r\n    \r\n    parse(csv) {\r\n        var lines = csv.split(/\\n+/img), [ fields ] = lines, fields = fields.split(/,\\t*/), rows = lines.slice(1);\r\n\t\tvar collection = rows.reduce( getObject.bind(this, fields), [ ] );\r\n        \r\n        function getObject(fields, array, line, row, lines) {\r\n            var o = fields.reduce( getValue.bind(this, line), { } );\r\n            array.push(o);\r\n            \r\n            function getValue(line, o, key, i, fields) {\r\n                var values = line.split(/,\\s*/), value = values[i], datum = { [key]: value };\r\n                return { ...o, ...datum };\r\n            }\r\n            \r\n            return array;\r\n        }\r\n        \r\n\t\treturn collection;\r\n    }\r\n    \r\n};\r\n\r\n/**\r\n * @ URLComponents\r\n */\r\nclass URLComponents {\r\n    hash: string = '';\r\n    host: string = '';\r\n    hostname: string = '';\r\n    href: string = '';\r\n    origin: string = '';\r\n    pathname: string = '';\r\n    port: string = '';\r\n    protocol: string = '';\r\n    search: string = '';\r\n    \r\n    constructor(url) {\r\n        var parser = document.createElement('a');\r\n        parser.href = url;\r\n\r\n        this.hash = parser.hash;\r\n        this.host = parser.host;\r\n        this.hostname = parser.hostname;\r\n        this.href = parser.href;\r\n        this.origin = parser.origin;\r\n        this.pathname = parser.pathname;\r\n        this.port = parser.port;\r\n        this.protocol = parser.protocol;\r\n        this.search = parser.search;\r\n\r\n        return this;\r\n    }\r\n    \r\n}\r\n\r\nclass ParameterMap {\r\n    name: string = '';\r\n    value: string = '';\r\n    \r\n    constructor(str) {\r\n        var pair = str.split('=');\r\n        this.name = pair[0];\r\n        this.value = pair[1];\r\n        return this;\r\n    }\r\n    \r\n}\r\n\r\nclass QueryMap {\r\n    \r\n    constructor(q) {\r\n        var query = decodeURIComponent(q);\r\n        var exp = /[^\\?|\\&]([^=]+)\\=([^&]+)/g;\r\n        var res = query.match(exp);\r\n\r\n        for (var i = 0, len = res.length; i < len; i++) {\r\n            var map = new ParameterMap(res[i]);\r\n            this[map.name] = map.value;\r\n        }\r\n\r\n        return this;\r\n    }\r\n    \r\n}\r\n\r\nclass Utilities {\r\n    CSV: any = CSV;\r\n    console: any = console;\r\n    \r\n    constructor() {\r\n        return this;\r\n    }\r\n      \r\n    noop() {}\r\n    \r\n    extend(object, first?, ...more) {\r\n        var o = Object.keys(first).reduce( (o, k) => (o[k] = first[k], o), object );\r\n        if (more.length) return this.extend(object, ...more);\r\n        return o;\r\n    }\r\n    \r\n    is(value) {\r\n        var isnt = { null: true, undefined: true, '': true, 0: false }[ value ];\r\n        return !isnt;\r\n    }\r\n    \r\n    timeout(handler, ...splat) {\r\n        var cancel = window.setTimeout(handler, ...splat);\r\n        return cancel;\r\n    }\r\n    \r\n    enqueue(handler, ...splat) {\r\n        var result = this.timeout(handler, 0, ...splat);\r\n        return result;\r\n    }\r\n    \r\n    /**\r\n     * \r\n     * @intention\r\n     *  * Leverage global.setTimeout for intervals instead of global.setInterval.\r\n     * @patterns { Curry }\r\n     * @usage \r\n     *  * var clear = utils.interval( () => console.log('called!'), 1000 );\r\n     *  * setTimeout(clear, (1000 * n) );  // clears interval after n seconds\r\n     */\r\n    interval(handler, delay, ...splat) {\r\n        var thus = this, timeout = thus.timeout(set, delay, ...splat);\r\n        \r\n        function set(...params) {\r\n            if ( !timeout ) return console.log('break');  // > -1\r\n            handler.call(this, ...params);\r\n            timeout = thus.timeout(set, delay, ...splat);\r\n        }\r\n        function clear() {\r\n            clearTimeout(timeout);\r\n            timeout = null;\r\n            return !timeout;  // assert is cleared\r\n        }\r\n        \r\n        return clear;\r\n    }\r\n    \r\n    debounce(fn, delay) {  // # thx Remy Sharp\r\n        var timer = null;\r\n        \r\n        function _debounce(...splat) {\r\n            var context = this;\r\n            clearTimeout(timer);\r\n            timer = setTimeout( () => fn.call(context, ...splat), delay);\r\n        };\r\n        \r\n        return _debounce;\r\n    }\r\n    \r\n    throttle(fn, threshhold, scope) {  // # thx Remy Sharp\r\n        var threshhold = threshhold || 250, last, deferTimer;\r\n        \r\n        function _throttle(...splat) {\r\n            var context = scope || this, now = +(new Date()), last = now, final = (last + threshhold);\r\n            var invoke = () => ( fn.call(context, ...splat), last = now );\r\n            \r\n            if (!last || now >= final) return invoke();  // don't hold on to it\r\n            clearTimeout(deferTimer);\r\n            deferTimer = setTimeout(invoke, threshhold);\r\n        };\r\n        \r\n        return _throttle;\r\n    }\r\n    \r\n    uuid() {\r\n        function replace(c) {\r\n        var r = Math.random() * 16 | 0, v = c == 'x' ? r : (r & 0x3 | 0x8);\r\n        return v.toString(16);\r\n        }\r\n        return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, replace);\r\n    }\r\n    \r\n    escapeHTML(s) {\r\n        return s.replace(/[&\"<>]/g, function (c) {\r\n            return {\r\n                '&': '&amp;',\r\n                '\"': '&quot;',\r\n                '<': '&lt;',\r\n                '>': '&gt;'\r\n            }[c];\r\n        });\r\n    }\r\n    \r\n    \r\n    drill(data: any, path: string): any {  // @usage: var x = drill('a.b.c.id', { a: { b: { c: { id: x } } } });\r\n        var keys = path.split('.'), key = keys.shift();\r\n        \r\n        if (!data) return undefined;  // not unlike an operation of { 'existent': true }[ 'absent' ] > undefined\r\n        if (!key) return data;  // data is final\r\n        \r\n        return this.drill( data[key], keys.join('.') );  // TCO/TCE\r\n    }\r\n\r\n\r\n    /**\r\n     * @ Inspiration: Douglas Crockford (String.prototype.supplant)\r\n     */\r\n    interpolate(str) {\r\n        return (o) => str.replace(/{{([^{}]*)}}/g, (a, b) => {\r\n            var f = new Function('o', `with (o) return o.${b};`), val = ''+f(o);\r\n            return this.escapeHTML(val);  // assume rational value for string result\r\n        });\r\n    }\r\n\r\n    /**\r\n     * @ THX: Douglas Crockford (String.prototype.supplant)\r\n     * @ INTERPOLATE\r\n     */\r\n    interpolateShallow(str) {\r\n        return (o) => {\r\n            return str.replace(/{{([^{}]*)}}/g, (a, b) => {\r\n                var val = ''+o[b];\r\n                return this.escapeHTML(val);  // TODO: escape HTML-Entities\r\n            });\r\n        };\r\n    }\r\n\r\n    /**\r\n     * @ THX: Douglas Crockford (String.prototype.supplant)\r\n     * @ INSECURE_INTERPOLATE\r\n     */\r\n    INSECURE_INTERPOLATE(str) {\r\n        return function interpolate(o) {\r\n            return str.replace(/{{([^{}]*)}}/g, function (a, b) {\r\n                var val = ''+o[b];\r\n                return val;  // TODO: escape HTML-Entities\r\n            });\r\n        }\r\n    }\r\n    \r\n    /**\r\n     * @ EXTERPOLATE | PARSE ROUTE-URI\r\n     */\r\n    exterpolate(str) {\r\n        var str = str || '';\r\n        var re = /:[^\\s/]+|{+[^\\s/]+}+/g;\r\n        var matcher = new RegExp(str.replace(re, '([\\\\w-]+)'));\r\n\r\n        return function getValues(string) {\r\n            if (!string.match(matcher)) return false;\r\n            var string = string || '';\r\n            var result = string.match(matcher);\r\n            var keys = str.match(re);\r\n            var values = result.slice(1);\r\n            var map = {};\r\n\r\n            if (keys && values) {\r\n                for (var i = 0, len = keys.length; i < len; i++) {\r\n                    var key = keys[i].replace(/[:{}]+/g, '');\r\n                    var val = values[i];\r\n                    if (key !== val) map[key] = val;\r\n                }\r\n            }\r\n\r\n            return map;\r\n        };\r\n    }\r\n    \r\n    parseURL(url) {\r\n        var a = document.createElement('a');\r\n        a.href = url;\r\n        \r\n        return {\r\n            hash: a.hash,\r\n            host: a.host,\r\n            hostname: a.hostname,\r\n            href: a.href,\r\n            origin: a.origin,\r\n            pathname: a.pathname,\r\n            port: a.port,\r\n            protocol: a.protocol,\r\n            search: a.search,\r\n        };\r\n    }\r\n    \r\n    sortByKey(k, a, b) {  // Sort by Multiple keys (Reusable) using sortByKey()\r\n        // USAGE:\r\n        // var sort = sortByKey.bind(collection, 'x');\r\n        // collection.sort(sort);\r\n        if (a[k] > b[k]) return  1;\r\n        if (a[k] < b[k]) return -1;\r\n        return 0;\r\n    }\r\n    \r\n    // Sort by Multiple keys (Reusable + Optimized) using Methods-Array\r\n    priorityMethodSort(methods, a, b) {\r\n        // USAGE:\r\n        // var sort = prioritySort.bind(collection, [ sort$A, sort$B, sort$C, sort$D ]);\r\n        // collection.sort(sort);\r\n        var i = 0, methods = Array.prototype.slice.call(methods || [ ], 0);\r\n        while (i === 0 && methods.length) i = methods.shift().call(this, a, b);\r\n        return i;\r\n    }\r\n    \r\n    priorityKeySort(keys, a, b) {  // Sort by Multiple keys (Reusable + Optimized) using Reusable prioritySort()\r\n        // USAGE:\r\n        // var sort = prioritySort.bind(collection, [ 'a', 'b', 'c', 'd' ]);\r\n        // collection.sort(sort);\r\n        // console.log('>', collection);\r\n        // >  [\r\n        //       { \"a\": 0, \"b\": 0, \"c\": 0, \"d\": 0 },\r\n        //       { \"a\": 0, \"b\": 1, \"c\": 2, \"d\": 2 },\r\n        //       { \"a\": 0, \"b\": 1, \"c\": 2, \"d\": 3 },\r\n        //       { \"a\": 1, \"b\": 1, \"c\": 1, \"d\": 1 },\r\n        //       { \"a\": 1, \"b\": 2, \"c\": 2, \"d\": 1 },\r\n        //       { \"a\": 1, \"b\": 2, \"c\": 3, \"d\": 1 },\r\n        //       { \"a\": 2, \"b\": 2, \"c\": 2, \"d\": 2 },\r\n        //       { \"a\": 3, \"b\": 3, \"c\": 3, \"d\": 3 }\r\n        //    ]\r\n        var i = 0, keys = Array.prototype.slice.call(keys || [ ], 0);\r\n        while (i === 0 && keys.length) i = this.sortByKey.call(this, keys.shift(), a, b);\r\n        return i;\r\n    }\r\n    \r\n    getFileSize(size, unit = 'auto') {  // size: number, unit: 'auto'|'byte'|'KB'|'MG'|'GB'|'TB'|'PB'\r\n        var $ = this.toFixed.bind(this);\r\n        var $bytes = $(size || 0), $KB = $($bytes / 1024), $MB = $($KB / 1024), $GB = $($MB / 1024), $TB = $($GB / 1024), $PB = $($TB / 1024);\r\n        var bytes = `${$bytes} bytes`, KB = `${$KB} KB`, MB = `${$MB} MB`, GB = `${$GB} GB`, TB = `${$TB} TB`, PB = `${$PB} PB`;\r\n        var $auto = $bytes;\r\n        var auto;\r\n        var values = { bytes, KB, MB, GB, TB, PB, auto: undefined };\r\n        var result = { unit: '', value: Infinity };\r\n        var datasets = [\r\n        { unit: 'bytes', value: $bytes },\r\n        { unit: 'KB', value: $KB },\r\n        { unit: 'MB', value: $MB },\r\n        { unit: 'GB', value: $GB },\r\n        { unit: 'TB', value: $TB },\r\n        { unit: 'PB', value: $PB },\r\n        ];\r\n        while ( (result.value / 1024) >= 1 && datasets.length ) result = datasets.shift();\r\n        values.auto = `${result.value} ${result.unit}`;\r\n        \r\n        \r\n        \r\n        return values[unit];\r\n    }\r\n    \r\n    toFixed(n) { return Number( Math.round(+(n + 'e2')) + 'e-2' ); }\r\n    \r\n    exists(n) { return !!~n; }\r\n    \r\n}\r\n\r\nexport { Utilities };\r\n","\r\n/**\r\n * @name: Deferred Promise\r\n * @intention\r\n *  * Externalize the function of a Promise's \"Executor\" parameters so that fulfillment & rejection\r\n *  * can be performed at a later time.\r\n */\r\nclass Deferred<T> {\r\n    private _resolve: Function = () => {};\r\n    private _reject: Function = () => {};\r\n    public promise: Promise<T> = new Promise<T>( this.exe.bind(this) );\r\n        \r\n    constructor() {}\r\n    \r\n    private exe(resolve, reject) {\r\n        this._resolve = resolve;\r\n        this._reject = reject;\r\n    }\r\n    \r\n    resolve(data) {\r\n        this._resolve(data);\r\n        return this.promise;\r\n    }\r\n    reject(data) {\r\n        this._reject(data);\r\n        return this.promise;\r\n    }\r\n    \r\n}\r\n\r\nexport { Deferred };\r\n","\r\ninterface IDetector {\r\n    detect(e: CustomEvent): any;\r\n}\r\n\r\n/**\r\n * @intention\r\n *  Provide a means to subscribe to specific actions on specific data on an object.\r\n * @KnownIssues\r\n *  * Only works for set-operations\r\n * @usage\r\n * var detector = {\r\n *    detect(e) {\r\n *        console.log('Detector.detect', e.type, e.detail);\r\n *    }\r\n * };\r\n* var detective = new Detective(object, detector);\r\n* detective\r\n*     .subscribe('name')\r\n*     .subscribe('key')\r\n*     .subscribe('param')\r\n*     ;\r\n* // |\r\n* // | AND|OR\r\n* // V\r\n* var detective = new Detective(object[, detector]);\r\n* detective.subscribe('name', (e) => console.log('#name', e.type, e.detail) );\r\n* detective.subscribe('key', (e) => console.log('#key', e.type, e.detail) );\r\n*/\r\nclass Detective {\r\n    target: EventTarget = new EventTarget();\r\n    proxy: typeof Proxy = new Proxy( new class Outlet {}, this);\r\n    context: any = null;\r\n    detector: IDetector = { detect(e) {} };\r\n    \r\n    constructor(context: any, detector?: IDetector) {\r\n        var detector = detector || this.detector;\r\n        \r\n        this.context = context;\r\n        this.detector = detector;\r\n    }\r\n    \r\n    set(target: any, key: string, value: any, receiver: Detective) {\r\n        var { target: emitter, proxy, detector } = this;\r\n        var oldValue = proxy[key];\r\n        var detail = { action: 'set', oldValue, value };\r\n        var e = new CustomEvent(key, { detail });\r\n        var result = Reflect.set(target, key, value, receiver);\r\n        \r\n        if (oldValue === value) return result;\r\n        \r\n        detector.detect(e);\r\n        emitter.dispatchEvent(e);\r\n        return result;\r\n    }\r\n    \r\n    private getPropertyDescriptor(context: any, key: string) {\r\n        var prototype = Object.getPrototypeOf(context);\r\n        var dtor = Object.getOwnPropertyDescriptor(context, key);\r\n        \r\n        if (!dtor && !!prototype) return this.getPropertyDescriptor(prototype, key);\r\n        return dtor;\r\n    }\r\n    \r\n    private configure(key: string) {\r\n        var { context, proxy, target } = this;\r\n        var dtor = this.getPropertyDescriptor(context, key)\r\n          , getter = dtor && dtor.get\r\n          , setter = dtor && dtor.set\r\n          ;\r\n        var defaults = { configurable: true, enumerable: true };\r\n        var config = { ...defaults, get: get.bind(context, key), set: set.bind(context, key) };\r\n        \r\n        function get(key) {\r\n            var value = getter ? getter.call(context) : proxy[key];\r\n            return value;\r\n        }\r\n        \r\n        function set(key, value) {\r\n            if (setter) setter.call(context, value);\r\n            proxy[key] = value;\r\n        }\r\n        \r\n        Object.defineProperty(context, key, config);\r\n    }\r\n    \r\n    hasProperty(context: any, key: string) {\r\n        var prototype = Object.getPrototypeOf(context);\r\n        var has = context.hasOwnProperty(key);\r\n        \r\n        if (!has && !!prototype) return this.hasProperty(prototype, key);\r\n        return has;\r\n    }\r\n    \r\n    subscribe(key: string, handler?: Function) {\r\n        var { target, proxy, context } = this;\r\n        \r\n        proxy[key] = context[key];  // ensure oldValue has initial/current before configuration\r\n        this.configure(key);\r\n        if (handler) target.addEventListener(key, <EventListenerOrEventListenerObject>handler, false);\r\n        \r\n        return this;\r\n    }\r\n    \r\n}\r\n\r\nexport { Detective };\r\n  ","\r\nexport { Utilities } from './utilities';\r\nexport { keycodes } from './keycodes';\r\n// export { patterns } from './patterns';\r\n// export { ds } from './ds';\r\nexport { Deferred } from './patterns/other/deferred';\r\nexport { Detective } from './patterns/other/detective';\r\n","\r\nclass Handler {\r\n    respond(e: CustomEvent): any {\r\n        // e.preventDefault();\r\n        // e.stopPropagation();\r\n        // e.stopImmediatePropagation();\r\n        // return false;\r\n        return e.detail;\r\n    }\r\n}\r\n\r\n/**\r\n * @intention \r\n * @usage \r\n *  * var cor = new ChainOfResponsibility({ ... });  // see config/constructor\r\n *  * cor.push({ respond(e) {...} });\r\n *  * cor.push({ respond(e) { e.stopPropagation(); return false } }, { respond(e) {...} }, ...);\r\n *  * [EventTarget].addEventListener('click', cor.respond.bind(cor), false);  // only 1st 2 handlers get invoked\r\n *  * \r\n    * private nodeHandlers: ChainOfResponsibility = new ChainOfResponsibility({}, [\r\n    *     { respond: (e: CustomEvent) => console.log('COR: A', e) },\r\n          { respond: (e: CustomEvent) => console.log('COR: B', e) },\r\n          // { respond: (e: CustomEvent) => e.stopPropagation() },\r\n          { respond: ({ detail: value }: CustomEvent) => console.log('COR: C', value) },\r\n    * ]);\r\n */\r\nclass ChainOfResponsibility extends Array {\r\n    protected config: any = { cancelable: false, bubbles: true };\r\n        \r\n    constructor(config, responders: Handler[] = []) {\r\n        super();\r\n        var { bubbles, cancelBubble, cancelable, defaultPrevented } = config;\r\n        \r\n        this.config = { ...this.config, ...config };\r\n        this.push(...responders);\r\n        \r\n        return this;\r\n    }\r\n    \r\n    protected execute(e: CustomEvent, i: number = 0, handlers: Handler[] = this.slice()): CustomEvent {\r\n        var handler = handlers[i] || new Handler();\r\n        var result = this.propagate(e, handler, i, handlers);  // process & reassign in case of change\r\n        var event = new CustomEvent(e.type, { detail: result }), next = handlers[i + 1];\r\n        \r\n        if (e.cancelBubble) event.stopPropagation();\r\n        if (e.cancelBubble) return event;  // if cancelled, stop immediately. return with value from cancellor.\r\n        if (next) return this.execute(event, ++i);  // has sibling handler. continue with new detail.\r\n        return event;  // if end reached and event not cancelled\r\n    }\r\n    \r\n    protected propagate(e: CustomEvent|any, handler: Handler, i: number, handlers: Handler[]): any {  // TODO: use Recursion to avoid unnecessary iterations\r\n        if (e.cancelBubble) return e;\r\n        var { config } = this;\r\n        var value = handler.respond.call(handler, e)\r\n          , cancelBubble = !{ 'undefined': true, 'false': false }[ value ]\r\n          ;\r\n        if (config.cancelable && cancelBubble) ( e.stopPropagation(), e.stopImmediatePropagation() );\r\n        // e.eventPhase = i;\r\n        \r\n        return value;\r\n    }\r\n    \r\n    chain(handler: Handler, ...handlers: Handler[]): ChainOfResponsibility {\r\n        this.push(handler, ...handlers);\r\n        return this;\r\n    }\r\n    \r\n    respond(e: CustomEvent<any>): CustomEvent<any> {\r\n        var event = this.execute(e);\r\n        // var result = this.reduce( this.propagate.bind(this), e );\r\n        return event;  // subclasses can implement return result.cancelBubble or return false;\r\n    }\r\n    \r\n}\r\n\r\nexport { ChainOfResponsibility, Handler };\r\n","\r\n/**\r\n * @intention \r\n * @usage \r\n *  * var command = new Command(console, 'log');\r\n *  * command.execute('This gets logged by the console');\r\n */\r\nclass Command {\r\n    private context: any = null;\r\n    private action: string = '';\r\n        \r\n    constructor(context, action) {\r\n        this.context = context;\r\n        this.action = action;\r\n    }\r\n    \r\n    execute(...splat: any[]) {\r\n        var { context, action } = this;\r\n        var value = context[action](...splat);\r\n        return value;\r\n    }\r\n    \r\n}\r\n\r\nclass StrictCommand extends Command {\r\n    \r\n    public execute = (...splat: any[]) => super.execute(...splat);\r\n    \r\n}\r\n\r\nexport { Command, StrictCommand };\r\n","/**\r\n * THIS SHOULD ACTUALLY BE JUST AN EVENT-AGGREGATOR THAT CAN BE USED [PER USUAL] ACROSS\r\n * THE SYSTEM, WHILE A \"WebSocketDecorator\" CAN BE USED TO NORMALIZE THE EXTERNAL LIBRARY.\r\n */\r\nvar EventEmitter = EventTarget;\r\nclass EventHub extends EventEmitter {\r\n    \r\n    publish(channel: string, data?: any, ...more: any[]) {\r\n        var e = new CustomEvent(channel, { detail: data });\r\n        this.dispatchEvent(e);\r\n        return this;\r\n    }\r\n    subscribe(channel: string, handler: any) {\r\n        this.addEventListener(channel, handler, false);\r\n        return this;\r\n    }\r\n    unsubscribe(channel: string, handler: any) {\r\n        this.removeEventListener(channel, handler, false);  // what is 3rd param again?\r\n        return this;\r\n    }\r\n    \r\n}\r\n\r\nexport { EventHub };\r\n","\r\nexport { ChainOfResponsibility } from './chainOfRespnsibility';\r\nexport { Command, StrictCommand } from './command';\r\nexport { Mediator } from './mediator';\r\nexport { Subject } from './observer';\r\n","\r\nimport { Reactive as Mediator } from '../mediator';\r\n\r\n\r\nclass Store extends Mediator {\r\n    private $data: Map<any, any> = new Map();\r\n    public id: string;\r\n\r\n    constructor(options: any = {}) {\r\n        super();\r\n        var { id } = options;\r\n        this.id = id;\r\n\r\n        return this;\r\n    }\r\n\r\n    next(e: CustomEvent, key: any) {\r\n        var { type, detail } = e;\r\n        var child = this.get(key)\r\n          , data = child.data()\r\n          ;\r\n        var paths = {\r\n            'parent/child/datum': `${this.id}/${key}/${type}`,\r\n            'parent/*/datum': `${this.id}/*/${type}`,\r\n            '**/child/datum': `**/${key}/${type}`,\r\n            '**/*/datum': `**/*/${type}`,\r\n        };\r\n        \r\n        this.publish(paths['parent/child/datum'], detail);\r\n        this.publish(paths['parent/*/datum'], detail);\r\n        this.publish(paths['**/child/datum'], detail);\r\n        this.publish(paths['**/*/datum'], detail);\r\n    }\r\n    error(error: Error) {}\r\n    complete() {}\r\n\r\n    has(key: any) {\r\n        var has = this.$data.has(key);\r\n        return has;\r\n    }\r\n\r\n    get(key: any) {\r\n        var value = this.$data.get(key);\r\n        return value;\r\n    }\r\n\r\n    set(key: any, value: any) {\r\n        this.$data.set(key, value);\r\n        this.publish(key, value);\r\n        this.publish('*', value);\r\n        this.publish('**/*', value);\r\n        this.publish(`**/${key}`, value);\r\n        if (value instanceof Store) value.attach({ next: (e) => this.next(e, key) });\r\n        \r\n        return this;\r\n    }\r\n\r\n    data() {\r\n        var entries = Array.from( this.$data.entries() ), o = { };\r\n        for (let [key, value] of entries) o[key] = value;\r\n        return o;\r\n    }\r\n\r\n    toJSON() {\r\n        return this.data();\r\n    }\r\n\r\n}\r\n\r\nexport { Store };\r\n","\r\nexport { Store as Reactive } from './store.rxjs';\r\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","/** PURE_IMPORTS_START  PURE_IMPORTS_END */\nexport function isFunction(x) {\n    return typeof x === 'function';\n}\n//# sourceMappingURL=isFunction.js.map\n","/** PURE_IMPORTS_START  PURE_IMPORTS_END */\nvar _enable_super_gross_mode_that_will_cause_bad_things = false;\nexport var config = {\n    Promise: undefined,\n    set useDeprecatedSynchronousErrorHandling(value) {\n        if (value) {\n            var error = /*@__PURE__*/ new Error();\n            /*@__PURE__*/ console.warn('DEPRECATED! RxJS was set to use deprecated synchronous error handling behavior by code at: \\n' + error.stack);\n        }\n        else if (_enable_super_gross_mode_that_will_cause_bad_things) {\n            /*@__PURE__*/ console.log('RxJS: Back to a better error behavior. Thank you. <3');\n        }\n        _enable_super_gross_mode_that_will_cause_bad_things = value;\n    },\n    get useDeprecatedSynchronousErrorHandling() {\n        return _enable_super_gross_mode_that_will_cause_bad_things;\n    },\n};\n//# sourceMappingURL=config.js.map\n","/** PURE_IMPORTS_START  PURE_IMPORTS_END */\nexport function hostReportError(err) {\n    setTimeout(function () { throw err; }, 0);\n}\n//# sourceMappingURL=hostReportError.js.map\n","/** PURE_IMPORTS_START _config,_util_hostReportError PURE_IMPORTS_END */\nimport { config } from './config';\nimport { hostReportError } from './util/hostReportError';\nexport var empty = {\n    closed: true,\n    next: function (value) { },\n    error: function (err) {\n        if (config.useDeprecatedSynchronousErrorHandling) {\n            throw err;\n        }\n        else {\n            hostReportError(err);\n        }\n    },\n    complete: function () { }\n};\n//# sourceMappingURL=Observer.js.map\n","/** PURE_IMPORTS_START  PURE_IMPORTS_END */\nexport var isArray = /*@__PURE__*/ (function () { return Array.isArray || (function (x) { return x && typeof x.length === 'number'; }); })();\n//# sourceMappingURL=isArray.js.map\n","/** PURE_IMPORTS_START  PURE_IMPORTS_END */\nvar UnsubscriptionErrorImpl = /*@__PURE__*/ (function () {\n    function UnsubscriptionErrorImpl(errors) {\n        Error.call(this);\n        this.message = errors ?\n            errors.length + \" errors occurred during unsubscription:\\n\" + errors.map(function (err, i) { return i + 1 + \") \" + err.toString(); }).join('\\n  ') : '';\n        this.name = 'UnsubscriptionError';\n        this.errors = errors;\n        return this;\n    }\n    UnsubscriptionErrorImpl.prototype = /*@__PURE__*/ Object.create(Error.prototype);\n    return UnsubscriptionErrorImpl;\n})();\nexport var UnsubscriptionError = UnsubscriptionErrorImpl;\n//# sourceMappingURL=UnsubscriptionError.js.map\n","/** PURE_IMPORTS_START _util_isArray,_util_isObject,_util_isFunction,_util_UnsubscriptionError PURE_IMPORTS_END */\nimport { isArray } from './util/isArray';\nimport { isObject } from './util/isObject';\nimport { isFunction } from './util/isFunction';\nimport { UnsubscriptionError } from './util/UnsubscriptionError';\nvar Subscription = /*@__PURE__*/ (function () {\n    function Subscription(unsubscribe) {\n        this.closed = false;\n        this._parentOrParents = null;\n        this._subscriptions = null;\n        if (unsubscribe) {\n            this._unsubscribe = unsubscribe;\n        }\n    }\n    Subscription.prototype.unsubscribe = function () {\n        var errors;\n        if (this.closed) {\n            return;\n        }\n        var _a = this, _parentOrParents = _a._parentOrParents, _unsubscribe = _a._unsubscribe, _subscriptions = _a._subscriptions;\n        this.closed = true;\n        this._parentOrParents = null;\n        this._subscriptions = null;\n        if (_parentOrParents instanceof Subscription) {\n            _parentOrParents.remove(this);\n        }\n        else if (_parentOrParents !== null) {\n            for (var index = 0; index < _parentOrParents.length; ++index) {\n                var parent_1 = _parentOrParents[index];\n                parent_1.remove(this);\n            }\n        }\n        if (isFunction(_unsubscribe)) {\n            try {\n                _unsubscribe.call(this);\n            }\n            catch (e) {\n                errors = e instanceof UnsubscriptionError ? flattenUnsubscriptionErrors(e.errors) : [e];\n            }\n        }\n        if (isArray(_subscriptions)) {\n            var index = -1;\n            var len = _subscriptions.length;\n            while (++index < len) {\n                var sub = _subscriptions[index];\n                if (isObject(sub)) {\n                    try {\n                        sub.unsubscribe();\n                    }\n                    catch (e) {\n                        errors = errors || [];\n                        if (e instanceof UnsubscriptionError) {\n                            errors = errors.concat(flattenUnsubscriptionErrors(e.errors));\n                        }\n                        else {\n                            errors.push(e);\n                        }\n                    }\n                }\n            }\n        }\n        if (errors) {\n            throw new UnsubscriptionError(errors);\n        }\n    };\n    Subscription.prototype.add = function (teardown) {\n        var subscription = teardown;\n        if (!teardown) {\n            return Subscription.EMPTY;\n        }\n        switch (typeof teardown) {\n            case 'function':\n                subscription = new Subscription(teardown);\n            case 'object':\n                if (subscription === this || subscription.closed || typeof subscription.unsubscribe !== 'function') {\n                    return subscription;\n                }\n                else if (this.closed) {\n                    subscription.unsubscribe();\n                    return subscription;\n                }\n                else if (!(subscription instanceof Subscription)) {\n                    var tmp = subscription;\n                    subscription = new Subscription();\n                    subscription._subscriptions = [tmp];\n                }\n                break;\n            default: {\n                throw new Error('unrecognized teardown ' + teardown + ' added to Subscription.');\n            }\n        }\n        var _parentOrParents = subscription._parentOrParents;\n        if (_parentOrParents === null) {\n            subscription._parentOrParents = this;\n        }\n        else if (_parentOrParents instanceof Subscription) {\n            if (_parentOrParents === this) {\n                return subscription;\n            }\n            subscription._parentOrParents = [_parentOrParents, this];\n        }\n        else if (_parentOrParents.indexOf(this) === -1) {\n            _parentOrParents.push(this);\n        }\n        else {\n            return subscription;\n        }\n        var subscriptions = this._subscriptions;\n        if (subscriptions === null) {\n            this._subscriptions = [subscription];\n        }\n        else {\n            subscriptions.push(subscription);\n        }\n        return subscription;\n    };\n    Subscription.prototype.remove = function (subscription) {\n        var subscriptions = this._subscriptions;\n        if (subscriptions) {\n            var subscriptionIndex = subscriptions.indexOf(subscription);\n            if (subscriptionIndex !== -1) {\n                subscriptions.splice(subscriptionIndex, 1);\n            }\n        }\n    };\n    Subscription.EMPTY = (function (empty) {\n        empty.closed = true;\n        return empty;\n    }(new Subscription()));\n    return Subscription;\n}());\nexport { Subscription };\nfunction flattenUnsubscriptionErrors(errors) {\n    return errors.reduce(function (errs, err) { return errs.concat((err instanceof UnsubscriptionError) ? err.errors : err); }, []);\n}\n//# sourceMappingURL=Subscription.js.map\n","/** PURE_IMPORTS_START  PURE_IMPORTS_END */\nexport function isObject(x) {\n    return x !== null && typeof x === 'object';\n}\n//# sourceMappingURL=isObject.js.map\n","/** PURE_IMPORTS_START  PURE_IMPORTS_END */\nexport var rxSubscriber = /*@__PURE__*/ (function () {\n    return typeof Symbol === 'function'\n        ? /*@__PURE__*/ Symbol('rxSubscriber')\n        : '@@rxSubscriber_' + /*@__PURE__*/ Math.random();\n})();\nexport var $$rxSubscriber = rxSubscriber;\n//# sourceMappingURL=rxSubscriber.js.map\n","/** PURE_IMPORTS_START tslib,_util_isFunction,_Observer,_Subscription,_internal_symbol_rxSubscriber,_config,_util_hostReportError PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { isFunction } from './util/isFunction';\nimport { empty as emptyObserver } from './Observer';\nimport { Subscription } from './Subscription';\nimport { rxSubscriber as rxSubscriberSymbol } from '../internal/symbol/rxSubscriber';\nimport { config } from './config';\nimport { hostReportError } from './util/hostReportError';\nvar Subscriber = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(Subscriber, _super);\n    function Subscriber(destinationOrNext, error, complete) {\n        var _this = _super.call(this) || this;\n        _this.syncErrorValue = null;\n        _this.syncErrorThrown = false;\n        _this.syncErrorThrowable = false;\n        _this.isStopped = false;\n        switch (arguments.length) {\n            case 0:\n                _this.destination = emptyObserver;\n                break;\n            case 1:\n                if (!destinationOrNext) {\n                    _this.destination = emptyObserver;\n                    break;\n                }\n                if (typeof destinationOrNext === 'object') {\n                    if (destinationOrNext instanceof Subscriber) {\n                        _this.syncErrorThrowable = destinationOrNext.syncErrorThrowable;\n                        _this.destination = destinationOrNext;\n                        destinationOrNext.add(_this);\n                    }\n                    else {\n                        _this.syncErrorThrowable = true;\n                        _this.destination = new SafeSubscriber(_this, destinationOrNext);\n                    }\n                    break;\n                }\n            default:\n                _this.syncErrorThrowable = true;\n                _this.destination = new SafeSubscriber(_this, destinationOrNext, error, complete);\n                break;\n        }\n        return _this;\n    }\n    Subscriber.prototype[rxSubscriberSymbol] = function () { return this; };\n    Subscriber.create = function (next, error, complete) {\n        var subscriber = new Subscriber(next, error, complete);\n        subscriber.syncErrorThrowable = false;\n        return subscriber;\n    };\n    Subscriber.prototype.next = function (value) {\n        if (!this.isStopped) {\n            this._next(value);\n        }\n    };\n    Subscriber.prototype.error = function (err) {\n        if (!this.isStopped) {\n            this.isStopped = true;\n            this._error(err);\n        }\n    };\n    Subscriber.prototype.complete = function () {\n        if (!this.isStopped) {\n            this.isStopped = true;\n            this._complete();\n        }\n    };\n    Subscriber.prototype.unsubscribe = function () {\n        if (this.closed) {\n            return;\n        }\n        this.isStopped = true;\n        _super.prototype.unsubscribe.call(this);\n    };\n    Subscriber.prototype._next = function (value) {\n        this.destination.next(value);\n    };\n    Subscriber.prototype._error = function (err) {\n        this.destination.error(err);\n        this.unsubscribe();\n    };\n    Subscriber.prototype._complete = function () {\n        this.destination.complete();\n        this.unsubscribe();\n    };\n    Subscriber.prototype._unsubscribeAndRecycle = function () {\n        var _parentOrParents = this._parentOrParents;\n        this._parentOrParents = null;\n        this.unsubscribe();\n        this.closed = false;\n        this.isStopped = false;\n        this._parentOrParents = _parentOrParents;\n        return this;\n    };\n    return Subscriber;\n}(Subscription));\nexport { Subscriber };\nvar SafeSubscriber = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(SafeSubscriber, _super);\n    function SafeSubscriber(_parentSubscriber, observerOrNext, error, complete) {\n        var _this = _super.call(this) || this;\n        _this._parentSubscriber = _parentSubscriber;\n        var next;\n        var context = _this;\n        if (isFunction(observerOrNext)) {\n            next = observerOrNext;\n        }\n        else if (observerOrNext) {\n            next = observerOrNext.next;\n            error = observerOrNext.error;\n            complete = observerOrNext.complete;\n            if (observerOrNext !== emptyObserver) {\n                context = Object.create(observerOrNext);\n                if (isFunction(context.unsubscribe)) {\n                    _this.add(context.unsubscribe.bind(context));\n                }\n                context.unsubscribe = _this.unsubscribe.bind(_this);\n            }\n        }\n        _this._context = context;\n        _this._next = next;\n        _this._error = error;\n        _this._complete = complete;\n        return _this;\n    }\n    SafeSubscriber.prototype.next = function (value) {\n        if (!this.isStopped && this._next) {\n            var _parentSubscriber = this._parentSubscriber;\n            if (!config.useDeprecatedSynchronousErrorHandling || !_parentSubscriber.syncErrorThrowable) {\n                this.__tryOrUnsub(this._next, value);\n            }\n            else if (this.__tryOrSetError(_parentSubscriber, this._next, value)) {\n                this.unsubscribe();\n            }\n        }\n    };\n    SafeSubscriber.prototype.error = function (err) {\n        if (!this.isStopped) {\n            var _parentSubscriber = this._parentSubscriber;\n            var useDeprecatedSynchronousErrorHandling = config.useDeprecatedSynchronousErrorHandling;\n            if (this._error) {\n                if (!useDeprecatedSynchronousErrorHandling || !_parentSubscriber.syncErrorThrowable) {\n                    this.__tryOrUnsub(this._error, err);\n                    this.unsubscribe();\n                }\n                else {\n                    this.__tryOrSetError(_parentSubscriber, this._error, err);\n                    this.unsubscribe();\n                }\n            }\n            else if (!_parentSubscriber.syncErrorThrowable) {\n                this.unsubscribe();\n                if (useDeprecatedSynchronousErrorHandling) {\n                    throw err;\n                }\n                hostReportError(err);\n            }\n            else {\n                if (useDeprecatedSynchronousErrorHandling) {\n                    _parentSubscriber.syncErrorValue = err;\n                    _parentSubscriber.syncErrorThrown = true;\n                }\n                else {\n                    hostReportError(err);\n                }\n                this.unsubscribe();\n            }\n        }\n    };\n    SafeSubscriber.prototype.complete = function () {\n        var _this = this;\n        if (!this.isStopped) {\n            var _parentSubscriber = this._parentSubscriber;\n            if (this._complete) {\n                var wrappedComplete = function () { return _this._complete.call(_this._context); };\n                if (!config.useDeprecatedSynchronousErrorHandling || !_parentSubscriber.syncErrorThrowable) {\n                    this.__tryOrUnsub(wrappedComplete);\n                    this.unsubscribe();\n                }\n                else {\n                    this.__tryOrSetError(_parentSubscriber, wrappedComplete);\n                    this.unsubscribe();\n                }\n            }\n            else {\n                this.unsubscribe();\n            }\n        }\n    };\n    SafeSubscriber.prototype.__tryOrUnsub = function (fn, value) {\n        try {\n            fn.call(this._context, value);\n        }\n        catch (err) {\n            this.unsubscribe();\n            if (config.useDeprecatedSynchronousErrorHandling) {\n                throw err;\n            }\n            else {\n                hostReportError(err);\n            }\n        }\n    };\n    SafeSubscriber.prototype.__tryOrSetError = function (parent, fn, value) {\n        if (!config.useDeprecatedSynchronousErrorHandling) {\n            throw new Error('bad call');\n        }\n        try {\n            fn.call(this._context, value);\n        }\n        catch (err) {\n            if (config.useDeprecatedSynchronousErrorHandling) {\n                parent.syncErrorValue = err;\n                parent.syncErrorThrown = true;\n                return true;\n            }\n            else {\n                hostReportError(err);\n                return true;\n            }\n        }\n        return false;\n    };\n    SafeSubscriber.prototype._unsubscribe = function () {\n        var _parentSubscriber = this._parentSubscriber;\n        this._context = null;\n        this._parentSubscriber = null;\n        _parentSubscriber.unsubscribe();\n    };\n    return SafeSubscriber;\n}(Subscriber));\nexport { SafeSubscriber };\n//# sourceMappingURL=Subscriber.js.map\n","/** PURE_IMPORTS_START  PURE_IMPORTS_END */\nexport var observable = /*@__PURE__*/ (function () { return typeof Symbol === 'function' && Symbol.observable || '@@observable'; })();\n//# sourceMappingURL=observable.js.map\n","/** PURE_IMPORTS_START  PURE_IMPORTS_END */\nexport function noop() { }\n//# sourceMappingURL=noop.js.map\n","/** PURE_IMPORTS_START _noop PURE_IMPORTS_END */\nimport { noop } from './noop';\nexport function pipe() {\n    var fns = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        fns[_i] = arguments[_i];\n    }\n    return pipeFromArray(fns);\n}\nexport function pipeFromArray(fns) {\n    if (!fns) {\n        return noop;\n    }\n    if (fns.length === 1) {\n        return fns[0];\n    }\n    return function piped(input) {\n        return fns.reduce(function (prev, fn) { return fn(prev); }, input);\n    };\n}\n//# sourceMappingURL=pipe.js.map\n","/** PURE_IMPORTS_START _util_canReportError,_util_toSubscriber,_symbol_observable,_util_pipe,_config PURE_IMPORTS_END */\nimport { canReportError } from './util/canReportError';\nimport { toSubscriber } from './util/toSubscriber';\nimport { observable as Symbol_observable } from './symbol/observable';\nimport { pipeFromArray } from './util/pipe';\nimport { config } from './config';\nvar Observable = /*@__PURE__*/ (function () {\n    function Observable(subscribe) {\n        this._isScalar = false;\n        if (subscribe) {\n            this._subscribe = subscribe;\n        }\n    }\n    Observable.prototype.lift = function (operator) {\n        var observable = new Observable();\n        observable.source = this;\n        observable.operator = operator;\n        return observable;\n    };\n    Observable.prototype.subscribe = function (observerOrNext, error, complete) {\n        var operator = this.operator;\n        var sink = toSubscriber(observerOrNext, error, complete);\n        if (operator) {\n            sink.add(operator.call(sink, this.source));\n        }\n        else {\n            sink.add(this.source || (config.useDeprecatedSynchronousErrorHandling && !sink.syncErrorThrowable) ?\n                this._subscribe(sink) :\n                this._trySubscribe(sink));\n        }\n        if (config.useDeprecatedSynchronousErrorHandling) {\n            if (sink.syncErrorThrowable) {\n                sink.syncErrorThrowable = false;\n                if (sink.syncErrorThrown) {\n                    throw sink.syncErrorValue;\n                }\n            }\n        }\n        return sink;\n    };\n    Observable.prototype._trySubscribe = function (sink) {\n        try {\n            return this._subscribe(sink);\n        }\n        catch (err) {\n            if (config.useDeprecatedSynchronousErrorHandling) {\n                sink.syncErrorThrown = true;\n                sink.syncErrorValue = err;\n            }\n            if (canReportError(sink)) {\n                sink.error(err);\n            }\n            else {\n                console.warn(err);\n            }\n        }\n    };\n    Observable.prototype.forEach = function (next, promiseCtor) {\n        var _this = this;\n        promiseCtor = getPromiseCtor(promiseCtor);\n        return new promiseCtor(function (resolve, reject) {\n            var subscription;\n            subscription = _this.subscribe(function (value) {\n                try {\n                    next(value);\n                }\n                catch (err) {\n                    reject(err);\n                    if (subscription) {\n                        subscription.unsubscribe();\n                    }\n                }\n            }, reject, resolve);\n        });\n    };\n    Observable.prototype._subscribe = function (subscriber) {\n        var source = this.source;\n        return source && source.subscribe(subscriber);\n    };\n    Observable.prototype[Symbol_observable] = function () {\n        return this;\n    };\n    Observable.prototype.pipe = function () {\n        var operations = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            operations[_i] = arguments[_i];\n        }\n        if (operations.length === 0) {\n            return this;\n        }\n        return pipeFromArray(operations)(this);\n    };\n    Observable.prototype.toPromise = function (promiseCtor) {\n        var _this = this;\n        promiseCtor = getPromiseCtor(promiseCtor);\n        return new promiseCtor(function (resolve, reject) {\n            var value;\n            _this.subscribe(function (x) { return value = x; }, function (err) { return reject(err); }, function () { return resolve(value); });\n        });\n    };\n    Observable.create = function (subscribe) {\n        return new Observable(subscribe);\n    };\n    return Observable;\n}());\nexport { Observable };\nfunction getPromiseCtor(promiseCtor) {\n    if (!promiseCtor) {\n        promiseCtor = config.Promise || Promise;\n    }\n    if (!promiseCtor) {\n        throw new Error('no Promise impl found');\n    }\n    return promiseCtor;\n}\n//# sourceMappingURL=Observable.js.map\n","/** PURE_IMPORTS_START _Subscriber,_symbol_rxSubscriber,_Observer PURE_IMPORTS_END */\nimport { Subscriber } from '../Subscriber';\nimport { rxSubscriber as rxSubscriberSymbol } from '../symbol/rxSubscriber';\nimport { empty as emptyObserver } from '../Observer';\nexport function toSubscriber(nextOrObserver, error, complete) {\n    if (nextOrObserver) {\n        if (nextOrObserver instanceof Subscriber) {\n            return nextOrObserver;\n        }\n        if (nextOrObserver[rxSubscriberSymbol]) {\n            return nextOrObserver[rxSubscriberSymbol]();\n        }\n    }\n    if (!nextOrObserver && !error && !complete) {\n        return new Subscriber(emptyObserver);\n    }\n    return new Subscriber(nextOrObserver, error, complete);\n}\n//# sourceMappingURL=toSubscriber.js.map\n","/** PURE_IMPORTS_START _Subscriber PURE_IMPORTS_END */\nimport { Subscriber } from '../Subscriber';\nexport function canReportError(observer) {\n    while (observer) {\n        var _a = observer, closed_1 = _a.closed, destination = _a.destination, isStopped = _a.isStopped;\n        if (closed_1 || isStopped) {\n            return false;\n        }\n        else if (destination && destination instanceof Subscriber) {\n            observer = destination;\n        }\n        else {\n            observer = null;\n        }\n    }\n    return true;\n}\n//# sourceMappingURL=canReportError.js.map\n","/** PURE_IMPORTS_START  PURE_IMPORTS_END */\nvar ObjectUnsubscribedErrorImpl = /*@__PURE__*/ (function () {\n    function ObjectUnsubscribedErrorImpl() {\n        Error.call(this);\n        this.message = 'object unsubscribed';\n        this.name = 'ObjectUnsubscribedError';\n        return this;\n    }\n    ObjectUnsubscribedErrorImpl.prototype = /*@__PURE__*/ Object.create(Error.prototype);\n    return ObjectUnsubscribedErrorImpl;\n})();\nexport var ObjectUnsubscribedError = ObjectUnsubscribedErrorImpl;\n//# sourceMappingURL=ObjectUnsubscribedError.js.map\n","/** PURE_IMPORTS_START tslib,_Subscription PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { Subscription } from './Subscription';\nvar SubjectSubscription = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(SubjectSubscription, _super);\n    function SubjectSubscription(subject, subscriber) {\n        var _this = _super.call(this) || this;\n        _this.subject = subject;\n        _this.subscriber = subscriber;\n        _this.closed = false;\n        return _this;\n    }\n    SubjectSubscription.prototype.unsubscribe = function () {\n        if (this.closed) {\n            return;\n        }\n        this.closed = true;\n        var subject = this.subject;\n        var observers = subject.observers;\n        this.subject = null;\n        if (!observers || observers.length === 0 || subject.isStopped || subject.closed) {\n            return;\n        }\n        var subscriberIndex = observers.indexOf(this.subscriber);\n        if (subscriberIndex !== -1) {\n            observers.splice(subscriberIndex, 1);\n        }\n    };\n    return SubjectSubscription;\n}(Subscription));\nexport { SubjectSubscription };\n//# sourceMappingURL=SubjectSubscription.js.map\n","/** PURE_IMPORTS_START tslib,_Observable,_Subscriber,_Subscription,_util_ObjectUnsubscribedError,_SubjectSubscription,_internal_symbol_rxSubscriber PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { Observable } from './Observable';\nimport { Subscriber } from './Subscriber';\nimport { Subscription } from './Subscription';\nimport { ObjectUnsubscribedError } from './util/ObjectUnsubscribedError';\nimport { SubjectSubscription } from './SubjectSubscription';\nimport { rxSubscriber as rxSubscriberSymbol } from '../internal/symbol/rxSubscriber';\nvar SubjectSubscriber = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(SubjectSubscriber, _super);\n    function SubjectSubscriber(destination) {\n        var _this = _super.call(this, destination) || this;\n        _this.destination = destination;\n        return _this;\n    }\n    return SubjectSubscriber;\n}(Subscriber));\nexport { SubjectSubscriber };\nvar Subject = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(Subject, _super);\n    function Subject() {\n        var _this = _super.call(this) || this;\n        _this.observers = [];\n        _this.closed = false;\n        _this.isStopped = false;\n        _this.hasError = false;\n        _this.thrownError = null;\n        return _this;\n    }\n    Subject.prototype[rxSubscriberSymbol] = function () {\n        return new SubjectSubscriber(this);\n    };\n    Subject.prototype.lift = function (operator) {\n        var subject = new AnonymousSubject(this, this);\n        subject.operator = operator;\n        return subject;\n    };\n    Subject.prototype.next = function (value) {\n        if (this.closed) {\n            throw new ObjectUnsubscribedError();\n        }\n        if (!this.isStopped) {\n            var observers = this.observers;\n            var len = observers.length;\n            var copy = observers.slice();\n            for (var i = 0; i < len; i++) {\n                copy[i].next(value);\n            }\n        }\n    };\n    Subject.prototype.error = function (err) {\n        if (this.closed) {\n            throw new ObjectUnsubscribedError();\n        }\n        this.hasError = true;\n        this.thrownError = err;\n        this.isStopped = true;\n        var observers = this.observers;\n        var len = observers.length;\n        var copy = observers.slice();\n        for (var i = 0; i < len; i++) {\n            copy[i].error(err);\n        }\n        this.observers.length = 0;\n    };\n    Subject.prototype.complete = function () {\n        if (this.closed) {\n            throw new ObjectUnsubscribedError();\n        }\n        this.isStopped = true;\n        var observers = this.observers;\n        var len = observers.length;\n        var copy = observers.slice();\n        for (var i = 0; i < len; i++) {\n            copy[i].complete();\n        }\n        this.observers.length = 0;\n    };\n    Subject.prototype.unsubscribe = function () {\n        this.isStopped = true;\n        this.closed = true;\n        this.observers = null;\n    };\n    Subject.prototype._trySubscribe = function (subscriber) {\n        if (this.closed) {\n            throw new ObjectUnsubscribedError();\n        }\n        else {\n            return _super.prototype._trySubscribe.call(this, subscriber);\n        }\n    };\n    Subject.prototype._subscribe = function (subscriber) {\n        if (this.closed) {\n            throw new ObjectUnsubscribedError();\n        }\n        else if (this.hasError) {\n            subscriber.error(this.thrownError);\n            return Subscription.EMPTY;\n        }\n        else if (this.isStopped) {\n            subscriber.complete();\n            return Subscription.EMPTY;\n        }\n        else {\n            this.observers.push(subscriber);\n            return new SubjectSubscription(this, subscriber);\n        }\n    };\n    Subject.prototype.asObservable = function () {\n        var observable = new Observable();\n        observable.source = this;\n        return observable;\n    };\n    Subject.create = function (destination, source) {\n        return new AnonymousSubject(destination, source);\n    };\n    return Subject;\n}(Observable));\nexport { Subject };\nvar AnonymousSubject = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(AnonymousSubject, _super);\n    function AnonymousSubject(destination, source) {\n        var _this = _super.call(this) || this;\n        _this.destination = destination;\n        _this.source = source;\n        return _this;\n    }\n    AnonymousSubject.prototype.next = function (value) {\n        var destination = this.destination;\n        if (destination && destination.next) {\n            destination.next(value);\n        }\n    };\n    AnonymousSubject.prototype.error = function (err) {\n        var destination = this.destination;\n        if (destination && destination.error) {\n            this.destination.error(err);\n        }\n    };\n    AnonymousSubject.prototype.complete = function () {\n        var destination = this.destination;\n        if (destination && destination.complete) {\n            this.destination.complete();\n        }\n    };\n    AnonymousSubject.prototype._subscribe = function (subscriber) {\n        var source = this.source;\n        if (source) {\n            return this.source.subscribe(subscriber);\n        }\n        else {\n            return Subscription.EMPTY;\n        }\n    };\n    return AnonymousSubject;\n}(Subject));\nexport { AnonymousSubject };\n//# sourceMappingURL=Subject.js.map\n","/** PURE_IMPORTS_START tslib,_AsyncAction PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { AsyncAction } from './AsyncAction';\nvar QueueAction = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(QueueAction, _super);\n    function QueueAction(scheduler, work) {\n        var _this = _super.call(this, scheduler, work) || this;\n        _this.scheduler = scheduler;\n        _this.work = work;\n        return _this;\n    }\n    QueueAction.prototype.schedule = function (state, delay) {\n        if (delay === void 0) {\n            delay = 0;\n        }\n        if (delay > 0) {\n            return _super.prototype.schedule.call(this, state, delay);\n        }\n        this.delay = delay;\n        this.state = state;\n        this.scheduler.flush(this);\n        return this;\n    };\n    QueueAction.prototype.execute = function (state, delay) {\n        return (delay > 0 || this.closed) ?\n            _super.prototype.execute.call(this, state, delay) :\n            this._execute(state, delay);\n    };\n    QueueAction.prototype.requestAsyncId = function (scheduler, id, delay) {\n        if (delay === void 0) {\n            delay = 0;\n        }\n        if ((delay !== null && delay > 0) || (delay === null && this.delay > 0)) {\n            return _super.prototype.requestAsyncId.call(this, scheduler, id, delay);\n        }\n        return scheduler.flush(this);\n    };\n    return QueueAction;\n}(AsyncAction));\nexport { QueueAction };\n//# sourceMappingURL=QueueAction.js.map\n","/** PURE_IMPORTS_START tslib,_Action PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { Action } from './Action';\nvar AsyncAction = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(AsyncAction, _super);\n    function AsyncAction(scheduler, work) {\n        var _this = _super.call(this, scheduler, work) || this;\n        _this.scheduler = scheduler;\n        _this.work = work;\n        _this.pending = false;\n        return _this;\n    }\n    AsyncAction.prototype.schedule = function (state, delay) {\n        if (delay === void 0) {\n            delay = 0;\n        }\n        if (this.closed) {\n            return this;\n        }\n        this.state = state;\n        var id = this.id;\n        var scheduler = this.scheduler;\n        if (id != null) {\n            this.id = this.recycleAsyncId(scheduler, id, delay);\n        }\n        this.pending = true;\n        this.delay = delay;\n        this.id = this.id || this.requestAsyncId(scheduler, this.id, delay);\n        return this;\n    };\n    AsyncAction.prototype.requestAsyncId = function (scheduler, id, delay) {\n        if (delay === void 0) {\n            delay = 0;\n        }\n        return setInterval(scheduler.flush.bind(scheduler, this), delay);\n    };\n    AsyncAction.prototype.recycleAsyncId = function (scheduler, id, delay) {\n        if (delay === void 0) {\n            delay = 0;\n        }\n        if (delay !== null && this.delay === delay && this.pending === false) {\n            return id;\n        }\n        clearInterval(id);\n        return undefined;\n    };\n    AsyncAction.prototype.execute = function (state, delay) {\n        if (this.closed) {\n            return new Error('executing a cancelled action');\n        }\n        this.pending = false;\n        var error = this._execute(state, delay);\n        if (error) {\n            return error;\n        }\n        else if (this.pending === false && this.id != null) {\n            this.id = this.recycleAsyncId(this.scheduler, this.id, null);\n        }\n    };\n    AsyncAction.prototype._execute = function (state, delay) {\n        var errored = false;\n        var errorValue = undefined;\n        try {\n            this.work(state);\n        }\n        catch (e) {\n            errored = true;\n            errorValue = !!e && e || new Error(e);\n        }\n        if (errored) {\n            this.unsubscribe();\n            return errorValue;\n        }\n    };\n    AsyncAction.prototype._unsubscribe = function () {\n        var id = this.id;\n        var scheduler = this.scheduler;\n        var actions = scheduler.actions;\n        var index = actions.indexOf(this);\n        this.work = null;\n        this.state = null;\n        this.pending = false;\n        this.scheduler = null;\n        if (index !== -1) {\n            actions.splice(index, 1);\n        }\n        if (id != null) {\n            this.id = this.recycleAsyncId(scheduler, id, null);\n        }\n        this.delay = null;\n    };\n    return AsyncAction;\n}(Action));\nexport { AsyncAction };\n//# sourceMappingURL=AsyncAction.js.map\n","/** PURE_IMPORTS_START tslib,_Subscription PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { Subscription } from '../Subscription';\nvar Action = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(Action, _super);\n    function Action(scheduler, work) {\n        return _super.call(this) || this;\n    }\n    Action.prototype.schedule = function (state, delay) {\n        if (delay === void 0) {\n            delay = 0;\n        }\n        return this;\n    };\n    return Action;\n}(Subscription));\nexport { Action };\n//# sourceMappingURL=Action.js.map\n","var Scheduler = /*@__PURE__*/ (function () {\n    function Scheduler(SchedulerAction, now) {\n        if (now === void 0) {\n            now = Scheduler.now;\n        }\n        this.SchedulerAction = SchedulerAction;\n        this.now = now;\n    }\n    Scheduler.prototype.schedule = function (work, delay, state) {\n        if (delay === void 0) {\n            delay = 0;\n        }\n        return new this.SchedulerAction(this, work).schedule(state, delay);\n    };\n    Scheduler.now = function () { return Date.now(); };\n    return Scheduler;\n}());\nexport { Scheduler };\n//# sourceMappingURL=Scheduler.js.map\n","/** PURE_IMPORTS_START _QueueAction,_QueueScheduler PURE_IMPORTS_END */\nimport { QueueAction } from './QueueAction';\nimport { QueueScheduler } from './QueueScheduler';\nexport var queue = /*@__PURE__*/ new QueueScheduler(QueueAction);\n//# sourceMappingURL=queue.js.map\n","/** PURE_IMPORTS_START tslib,_AsyncScheduler PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { AsyncScheduler } from './AsyncScheduler';\nvar QueueScheduler = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(QueueScheduler, _super);\n    function QueueScheduler() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    return QueueScheduler;\n}(AsyncScheduler));\nexport { QueueScheduler };\n//# sourceMappingURL=QueueScheduler.js.map\n","/** PURE_IMPORTS_START tslib,_Scheduler PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { Scheduler } from '../Scheduler';\nvar AsyncScheduler = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(AsyncScheduler, _super);\n    function AsyncScheduler(SchedulerAction, now) {\n        if (now === void 0) {\n            now = Scheduler.now;\n        }\n        var _this = _super.call(this, SchedulerAction, function () {\n            if (AsyncScheduler.delegate && AsyncScheduler.delegate !== _this) {\n                return AsyncScheduler.delegate.now();\n            }\n            else {\n                return now();\n            }\n        }) || this;\n        _this.actions = [];\n        _this.active = false;\n        _this.scheduled = undefined;\n        return _this;\n    }\n    AsyncScheduler.prototype.schedule = function (work, delay, state) {\n        if (delay === void 0) {\n            delay = 0;\n        }\n        if (AsyncScheduler.delegate && AsyncScheduler.delegate !== this) {\n            return AsyncScheduler.delegate.schedule(work, delay, state);\n        }\n        else {\n            return _super.prototype.schedule.call(this, work, delay, state);\n        }\n    };\n    AsyncScheduler.prototype.flush = function (action) {\n        var actions = this.actions;\n        if (this.active) {\n            actions.push(action);\n            return;\n        }\n        var error;\n        this.active = true;\n        do {\n            if (error = action.execute(action.state, action.delay)) {\n                break;\n            }\n        } while (action = actions.shift());\n        this.active = false;\n        if (error) {\n            while (action = actions.shift()) {\n                action.unsubscribe();\n            }\n            throw error;\n        }\n    };\n    return AsyncScheduler;\n}(Scheduler));\nexport { AsyncScheduler };\n//# sourceMappingURL=AsyncScheduler.js.map\n","/** PURE_IMPORTS_START _Observable PURE_IMPORTS_END */\nimport { Observable } from '../Observable';\nexport var EMPTY = /*@__PURE__*/ new Observable(function (subscriber) { return subscriber.complete(); });\nexport function empty(scheduler) {\n    return scheduler ? emptyScheduled(scheduler) : EMPTY;\n}\nfunction emptyScheduled(scheduler) {\n    return new Observable(function (subscriber) { return scheduler.schedule(function () { return subscriber.complete(); }); });\n}\n//# sourceMappingURL=empty.js.map\n","/** PURE_IMPORTS_START  PURE_IMPORTS_END */\nexport function isScheduler(value) {\n    return value && typeof value.schedule === 'function';\n}\n//# sourceMappingURL=isScheduler.js.map\n","/** PURE_IMPORTS_START  PURE_IMPORTS_END */\nexport var subscribeToArray = function (array) {\n    return function (subscriber) {\n        for (var i = 0, len = array.length; i < len && !subscriber.closed; i++) {\n            subscriber.next(array[i]);\n        }\n        subscriber.complete();\n    };\n};\n//# sourceMappingURL=subscribeToArray.js.map\n","/** PURE_IMPORTS_START _observable_empty,_observable_of,_observable_throwError PURE_IMPORTS_END */\nimport { empty } from './observable/empty';\nimport { of } from './observable/of';\nimport { throwError } from './observable/throwError';\nexport var NotificationKind;\n/*@__PURE__*/ (function (NotificationKind) {\n    NotificationKind[\"NEXT\"] = \"N\";\n    NotificationKind[\"ERROR\"] = \"E\";\n    NotificationKind[\"COMPLETE\"] = \"C\";\n})(NotificationKind || (NotificationKind = {}));\nvar Notification = /*@__PURE__*/ (function () {\n    function Notification(kind, value, error) {\n        this.kind = kind;\n        this.value = value;\n        this.error = error;\n        this.hasValue = kind === 'N';\n    }\n    Notification.prototype.observe = function (observer) {\n        switch (this.kind) {\n            case 'N':\n                return observer.next && observer.next(this.value);\n            case 'E':\n                return observer.error && observer.error(this.error);\n            case 'C':\n                return observer.complete && observer.complete();\n        }\n    };\n    Notification.prototype.do = function (next, error, complete) {\n        var kind = this.kind;\n        switch (kind) {\n            case 'N':\n                return next && next(this.value);\n            case 'E':\n                return error && error(this.error);\n            case 'C':\n                return complete && complete();\n        }\n    };\n    Notification.prototype.accept = function (nextOrObserver, error, complete) {\n        if (nextOrObserver && typeof nextOrObserver.next === 'function') {\n            return this.observe(nextOrObserver);\n        }\n        else {\n            return this.do(nextOrObserver, error, complete);\n        }\n    };\n    Notification.prototype.toObservable = function () {\n        var kind = this.kind;\n        switch (kind) {\n            case 'N':\n                return of(this.value);\n            case 'E':\n                return throwError(this.error);\n            case 'C':\n                return empty();\n        }\n        throw new Error('unexpected notification kind value');\n    };\n    Notification.createNext = function (value) {\n        if (typeof value !== 'undefined') {\n            return new Notification('N', value);\n        }\n        return Notification.undefinedValueNotification;\n    };\n    Notification.createError = function (err) {\n        return new Notification('E', undefined, err);\n    };\n    Notification.createComplete = function () {\n        return Notification.completeNotification;\n    };\n    Notification.completeNotification = new Notification('C');\n    Notification.undefinedValueNotification = new Notification('N', undefined);\n    return Notification;\n}());\nexport { Notification };\n//# sourceMappingURL=Notification.js.map\n","/** PURE_IMPORTS_START _Observable,_Subscription PURE_IMPORTS_END */\nimport { Observable } from '../Observable';\nimport { Subscription } from '../Subscription';\nexport function scheduleArray(input, scheduler) {\n    return new Observable(function (subscriber) {\n        var sub = new Subscription();\n        var i = 0;\n        sub.add(scheduler.schedule(function () {\n            if (i === input.length) {\n                subscriber.complete();\n                return;\n            }\n            subscriber.next(input[i++]);\n            if (!subscriber.closed) {\n                sub.add(this.schedule());\n            }\n        }));\n        return sub;\n    });\n}\n//# sourceMappingURL=scheduleArray.js.map\n","/** PURE_IMPORTS_START _Observable,_util_subscribeToArray,_scheduled_scheduleArray PURE_IMPORTS_END */\nimport { Observable } from '../Observable';\nimport { subscribeToArray } from '../util/subscribeToArray';\nimport { scheduleArray } from '../scheduled/scheduleArray';\nexport function fromArray(input, scheduler) {\n    if (!scheduler) {\n        return new Observable(subscribeToArray(input));\n    }\n    else {\n        return scheduleArray(input, scheduler);\n    }\n}\n//# sourceMappingURL=fromArray.js.map\n","/** PURE_IMPORTS_START _Observable PURE_IMPORTS_END */\nimport { Observable } from '../Observable';\nexport function throwError(error, scheduler) {\n    if (!scheduler) {\n        return new Observable(function (subscriber) { return subscriber.error(error); });\n    }\n    else {\n        return new Observable(function (subscriber) { return scheduler.schedule(dispatch, 0, { error: error, subscriber: subscriber }); });\n    }\n}\nfunction dispatch(_a) {\n    var error = _a.error, subscriber = _a.subscriber;\n    subscriber.error(error);\n}\n//# sourceMappingURL=throwError.js.map\n","/** PURE_IMPORTS_START _util_isScheduler,_fromArray,_scheduled_scheduleArray PURE_IMPORTS_END */\nimport { isScheduler } from '../util/isScheduler';\nimport { fromArray } from './fromArray';\nimport { scheduleArray } from '../scheduled/scheduleArray';\nexport function of() {\n    var args = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        args[_i] = arguments[_i];\n    }\n    var scheduler = args[args.length - 1];\n    if (isScheduler(scheduler)) {\n        args.pop();\n        return scheduleArray(args, scheduler);\n    }\n    else {\n        return fromArray(args);\n    }\n}\n//# sourceMappingURL=of.js.map\n","/** PURE_IMPORTS_START tslib,_Subscriber,_Notification PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { Subscriber } from '../Subscriber';\nimport { Notification } from '../Notification';\nexport function observeOn(scheduler, delay) {\n    if (delay === void 0) {\n        delay = 0;\n    }\n    return function observeOnOperatorFunction(source) {\n        return source.lift(new ObserveOnOperator(scheduler, delay));\n    };\n}\nvar ObserveOnOperator = /*@__PURE__*/ (function () {\n    function ObserveOnOperator(scheduler, delay) {\n        if (delay === void 0) {\n            delay = 0;\n        }\n        this.scheduler = scheduler;\n        this.delay = delay;\n    }\n    ObserveOnOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new ObserveOnSubscriber(subscriber, this.scheduler, this.delay));\n    };\n    return ObserveOnOperator;\n}());\nexport { ObserveOnOperator };\nvar ObserveOnSubscriber = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(ObserveOnSubscriber, _super);\n    function ObserveOnSubscriber(destination, scheduler, delay) {\n        if (delay === void 0) {\n            delay = 0;\n        }\n        var _this = _super.call(this, destination) || this;\n        _this.scheduler = scheduler;\n        _this.delay = delay;\n        return _this;\n    }\n    ObserveOnSubscriber.dispatch = function (arg) {\n        var notification = arg.notification, destination = arg.destination;\n        notification.observe(destination);\n        this.unsubscribe();\n    };\n    ObserveOnSubscriber.prototype.scheduleMessage = function (notification) {\n        var destination = this.destination;\n        destination.add(this.scheduler.schedule(ObserveOnSubscriber.dispatch, this.delay, new ObserveOnMessage(notification, this.destination)));\n    };\n    ObserveOnSubscriber.prototype._next = function (value) {\n        this.scheduleMessage(Notification.createNext(value));\n    };\n    ObserveOnSubscriber.prototype._error = function (err) {\n        this.scheduleMessage(Notification.createError(err));\n        this.unsubscribe();\n    };\n    ObserveOnSubscriber.prototype._complete = function () {\n        this.scheduleMessage(Notification.createComplete());\n        this.unsubscribe();\n    };\n    return ObserveOnSubscriber;\n}(Subscriber));\nexport { ObserveOnSubscriber };\nvar ObserveOnMessage = /*@__PURE__*/ (function () {\n    function ObserveOnMessage(notification, destination) {\n        this.notification = notification;\n        this.destination = destination;\n    }\n    return ObserveOnMessage;\n}());\nexport { ObserveOnMessage };\n//# sourceMappingURL=observeOn.js.map\n","/** PURE_IMPORTS_START tslib,_Subject,_scheduler_queue,_Subscription,_operators_observeOn,_util_ObjectUnsubscribedError,_SubjectSubscription PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { Subject } from './Subject';\nimport { queue } from './scheduler/queue';\nimport { Subscription } from './Subscription';\nimport { ObserveOnSubscriber } from './operators/observeOn';\nimport { ObjectUnsubscribedError } from './util/ObjectUnsubscribedError';\nimport { SubjectSubscription } from './SubjectSubscription';\nvar ReplaySubject = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(ReplaySubject, _super);\n    function ReplaySubject(bufferSize, windowTime, scheduler) {\n        if (bufferSize === void 0) {\n            bufferSize = Number.POSITIVE_INFINITY;\n        }\n        if (windowTime === void 0) {\n            windowTime = Number.POSITIVE_INFINITY;\n        }\n        var _this = _super.call(this) || this;\n        _this.scheduler = scheduler;\n        _this._events = [];\n        _this._infiniteTimeWindow = false;\n        _this._bufferSize = bufferSize < 1 ? 1 : bufferSize;\n        _this._windowTime = windowTime < 1 ? 1 : windowTime;\n        if (windowTime === Number.POSITIVE_INFINITY) {\n            _this._infiniteTimeWindow = true;\n            _this.next = _this.nextInfiniteTimeWindow;\n        }\n        else {\n            _this.next = _this.nextTimeWindow;\n        }\n        return _this;\n    }\n    ReplaySubject.prototype.nextInfiniteTimeWindow = function (value) {\n        var _events = this._events;\n        _events.push(value);\n        if (_events.length > this._bufferSize) {\n            _events.shift();\n        }\n        _super.prototype.next.call(this, value);\n    };\n    ReplaySubject.prototype.nextTimeWindow = function (value) {\n        this._events.push(new ReplayEvent(this._getNow(), value));\n        this._trimBufferThenGetEvents();\n        _super.prototype.next.call(this, value);\n    };\n    ReplaySubject.prototype._subscribe = function (subscriber) {\n        var _infiniteTimeWindow = this._infiniteTimeWindow;\n        var _events = _infiniteTimeWindow ? this._events : this._trimBufferThenGetEvents();\n        var scheduler = this.scheduler;\n        var len = _events.length;\n        var subscription;\n        if (this.closed) {\n            throw new ObjectUnsubscribedError();\n        }\n        else if (this.isStopped || this.hasError) {\n            subscription = Subscription.EMPTY;\n        }\n        else {\n            this.observers.push(subscriber);\n            subscription = new SubjectSubscription(this, subscriber);\n        }\n        if (scheduler) {\n            subscriber.add(subscriber = new ObserveOnSubscriber(subscriber, scheduler));\n        }\n        if (_infiniteTimeWindow) {\n            for (var i = 0; i < len && !subscriber.closed; i++) {\n                subscriber.next(_events[i]);\n            }\n        }\n        else {\n            for (var i = 0; i < len && !subscriber.closed; i++) {\n                subscriber.next(_events[i].value);\n            }\n        }\n        if (this.hasError) {\n            subscriber.error(this.thrownError);\n        }\n        else if (this.isStopped) {\n            subscriber.complete();\n        }\n        return subscription;\n    };\n    ReplaySubject.prototype._getNow = function () {\n        return (this.scheduler || queue).now();\n    };\n    ReplaySubject.prototype._trimBufferThenGetEvents = function () {\n        var now = this._getNow();\n        var _bufferSize = this._bufferSize;\n        var _windowTime = this._windowTime;\n        var _events = this._events;\n        var eventsCount = _events.length;\n        var spliceCount = 0;\n        while (spliceCount < eventsCount) {\n            if ((now - _events[spliceCount].time) < _windowTime) {\n                break;\n            }\n            spliceCount++;\n        }\n        if (eventsCount > _bufferSize) {\n            spliceCount = Math.max(spliceCount, eventsCount - _bufferSize);\n        }\n        if (spliceCount > 0) {\n            _events.splice(0, spliceCount);\n        }\n        return _events;\n    };\n    return ReplaySubject;\n}(Subject));\nexport { ReplaySubject };\nvar ReplayEvent = /*@__PURE__*/ (function () {\n    function ReplayEvent(time, value) {\n        this.time = time;\n        this.value = value;\n    }\n    return ReplayEvent;\n}());\n//# sourceMappingURL=ReplaySubject.js.map\n","/** PURE_IMPORTS_START tslib,_Subscriber PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { Subscriber } from '../Subscriber';\nexport function filter(predicate, thisArg) {\n    return function filterOperatorFunction(source) {\n        return source.lift(new FilterOperator(predicate, thisArg));\n    };\n}\nvar FilterOperator = /*@__PURE__*/ (function () {\n    function FilterOperator(predicate, thisArg) {\n        this.predicate = predicate;\n        this.thisArg = thisArg;\n    }\n    FilterOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new FilterSubscriber(subscriber, this.predicate, this.thisArg));\n    };\n    return FilterOperator;\n}());\nvar FilterSubscriber = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(FilterSubscriber, _super);\n    function FilterSubscriber(destination, predicate, thisArg) {\n        var _this = _super.call(this, destination) || this;\n        _this.predicate = predicate;\n        _this.thisArg = thisArg;\n        _this.count = 0;\n        return _this;\n    }\n    FilterSubscriber.prototype._next = function (value) {\n        var result;\n        try {\n            result = this.predicate.call(this.thisArg, value, this.count++);\n        }\n        catch (err) {\n            this.destination.error(err);\n            return;\n        }\n        if (result) {\n            this.destination.next(value);\n        }\n    };\n    return FilterSubscriber;\n}(Subscriber));\n//# sourceMappingURL=filter.js.map\n","/** PURE_IMPORTS_START tslib,_Subscriber PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { Subscriber } from '../Subscriber';\nexport function map(project, thisArg) {\n    return function mapOperation(source) {\n        if (typeof project !== 'function') {\n            throw new TypeError('argument is not a function. Are you looking for `mapTo()`?');\n        }\n        return source.lift(new MapOperator(project, thisArg));\n    };\n}\nvar MapOperator = /*@__PURE__*/ (function () {\n    function MapOperator(project, thisArg) {\n        this.project = project;\n        this.thisArg = thisArg;\n    }\n    MapOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new MapSubscriber(subscriber, this.project, this.thisArg));\n    };\n    return MapOperator;\n}());\nexport { MapOperator };\nvar MapSubscriber = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(MapSubscriber, _super);\n    function MapSubscriber(destination, project, thisArg) {\n        var _this = _super.call(this, destination) || this;\n        _this.project = project;\n        _this.count = 0;\n        _this.thisArg = thisArg || _this;\n        return _this;\n    }\n    MapSubscriber.prototype._next = function (value) {\n        var result;\n        try {\n            result = this.project.call(this.thisArg, value, this.count++);\n        }\n        catch (err) {\n            this.destination.error(err);\n            return;\n        }\n        this.destination.next(result);\n    };\n    return MapSubscriber;\n}(Subscriber));\n//# sourceMappingURL=map.js.map\n","\r\n// https://stackblitz.com/edit/rxjs-mediator-with-operators?file=index.ts\r\nimport { of, from } from 'rxjs';\r\nimport { Observable, Subject, BehaviorSubject, ReplaySubject } from 'rxjs';\r\nimport { map, filter, last } from 'rxjs/operators';\r\n//\r\nimport { ISubscriber } from '../subscriber.interface';\r\nimport { IEventAggregator } from '../eventaggregator.interface';\r\n\r\nclass EventHub implements IEventAggregator {\r\n  private initializations: object = { errors: 0 };\r\n  private initialized: CustomEvent = new CustomEvent('$initialized', { detail: this.initializations });\r\n  public channels$: ReplaySubject<CustomEvent> = new ReplaySubject(1);\r\n\r\n  in(channel: string): Observable<CustomEvent> {\r\n    var filterChannel = filter( (o: CustomEvent) => channel === o.type )\r\n      , mapData = map( (o: CustomEvent) => o )\r\n      ;\r\n    var subscription = this.channels$.pipe(filterChannel).pipe(mapData);\r\n\r\n    return subscription;\r\n  }\r\n  \r\n  publish(channel: string, data: any = {}, ...more: any[]): IEventAggregator {\r\n    var event = new CustomEvent(channel, { detail: data });\r\n    this.channels$.next(event);\r\n    return this;\r\n  }\r\n\r\n  subscribe(channel: string, handler: any): Observable<CustomEvent> {\r\n    var subscription = this.in(channel);\r\n    if (handler) subscription.subscribe(handler);\r\n    return subscription;\r\n  }\r\n\r\n  unsubscribe(channel: string, handler: Function): IEventAggregator {\r\n    // this.channels$.unsubscribe();\r\n    return this;\r\n  }\r\n\r\n  attach(observer: ISubscriber): Observable<CustomEvent> {\r\n    var subscription = this.channels$;\r\n    if (observer) subscription.subscribe(observer);\r\n    return subscription;\r\n  }\r\n  \r\n  detach(observer: ISubscriber) {\r\n    // this.channels$.unsubscribe();\r\n    return this;\r\n  }\r\n\r\n}\r\n\r\nexport { EventHub };\r\n","\r\nexport { EventHub as Reactive } from './eventhub.rxjs';\r\n","\r\nimport { IEventAggregator } from '../eventaggregator.interface';\r\nimport { Reactive as EventHub } from '../eventhub';\r\n\r\n\r\nclass Mediator extends EventHub implements IEventAggregator {\r\n    private publishers: any = { };\r\n    private context: any = this;\r\n    \r\n    constructor() {\r\n        super();\r\n    }\r\n    \r\n    private registerPublishers(handlers: any) {\r\n        this.publishers = handlers;\r\n        return this;\r\n    }\r\n    protected register(type: 'publishers', handlers: any) {\r\n        var action = { 'publishers': 'registerPublishers' }[ type ];\r\n        this[action](handlers);\r\n        return this;\r\n    }\r\n  \r\n    protected dispatch(channel: string, data?: any, ...more: any[]) {\r\n      super.publish.call(this, channel, data, ...more);\r\n      return this;\r\n    }\r\n    \r\n    publish(channel: string, data?: any, ...more: any[]) {\r\n        var { publishers } = this;\r\n        if (!channel) console.warn(`Mediator.publish expected a channel-value but got \"${channel}\". Please check the spelling of your channel-key.`);\r\n        if (channel in publishers) publishers[channel].call(publishers, channel, data, ...more);\r\n        else this.dispatch.call(this, channel, data, ...more);\r\n        \r\n        return this;\r\n    }\r\n    \r\n}\r\n\r\nexport { Mediator };\r\n","\r\nexport { Mediator as Reactive } from './mediator.rxjs';\r\n","\r\nexport { Vertex as V } from './core';\r\nexport { Core } from './core';\r\nexport { Sandbox } from './core/sandbox';\r\nexport { Bootstrap } from './core/bootstrap';\r\nexport { Element, Attribute, Text, Comment, Directive, Pipe, Service } from './core';\r\nexport { observe, observee, observer, element, attr, listener, message } from './core';\r\n","\r\nimport { ISandbox, Sandbox as CommonSandbox } from '@motorman/core';\r\nimport { Core } from '@motorman/vertices/core/core';\r\nimport { Utilities } from '@motorman/core/utilities';\r\nimport { Subject } from '@motorman/core/utilities/patterns/behavioral/observer';\r\n\r\n\r\ntype TElement = 'element';\r\ntype TAttribute = 'attribute';\r\ntype TText = 'text';\r\ntype TComment = 'comment';\r\ntype TPipe = 'pipe';\r\ntype TService = 'service';\r\ntype TMicroService = 'microservice';\r\ntype TIoT = 'iot';\r\ntype TPrecept = (Node&Element) | (Node&Attr) | (Node&Text) | (Node&Comment) | Utilities;\r\n\r\n\r\nclass TemplateSubject extends Subject {\r\n    private template: string = '';\r\n    private repository: Node&DocumentFragment = new DocumentFragment();\r\n    private digestion: Node&HTMLDivElement = document.createElement('div');\r\n    public content: NodeList|Node[] = [ ];\r\n    \r\n    constructor(private sandbox: ElementSandboxState, private core: Core) {\r\n        super('content');\r\n        var { repository, digestion } = this;\r\n        repository.appendChild(digestion);\r\n    }\r\n    \r\n    /**\r\n     * @intention\r\n     *      Sets template and triggers update on all observers. This allows components to set a template from any source:\r\n     *          * import template from './x.component.html'; subject.set(template);  // compiletime\r\n     *          * http.get('template.html').then( (html) => subject.set(html) );  // runtime AJAX\r\n     *          * subject.set(Sandbox.data.occupee.innerHTML);  // runtime provided (slotless)\r\n     *          * subject.set(Sandbox.data.occupee.querySelector('template').content);  // runtime provided (slot)\r\n     *          * subject.set( utils.interpolate(template)(this) );  // runtime any interpolated\r\n     *      \r\n     */\r\n    set(template: string = '') {\r\n        var { digestion } = this;\r\n        \r\n        digestion.innerHTML = template;\r\n        this.template = template;\r\n        this.observation = this.content = Array.prototype.slice.call(digestion.childNodes);\r\n        \r\n        return this;\r\n    }\r\n    \r\n}\r\n\r\nclass MutationManager {  // https://developer.mozilla.org/pt-BR/docs/Web/API/MutationObserver\r\n    protected observer: MutationObserver = new MutationObserver( (r, o) => this.observe(r, o) );\r\n    protected bootstrap: any = this.core.configuration.bootstrap;\r\n    protected get node(): Node { return <Element>this.sandbox.target; }\r\n    protected get data(): any { return this.sandbox.data; }\r\n    protected get selector(): string { return this.data.selector; }\r\n    protected get instance(): string { return this.data.instance; }\r\n    \r\n    constructor(private sandbox: ElementSandboxState, private core: Core) {}\r\n    \r\n    private observe(changes: MutationRecord[], observer: MutationObserver) {\r\n        for(let mutation of changes) this[mutation.type](mutation);\r\n    }\r\n    \r\n    private trigger(type: string, mutation: MutationRecord) {\r\n        var { target, addedNodes, removedNodes } = mutation;\r\n        var nodes = { 'children:added': addedNodes, 'children:removed': removedNodes }[ type ];\r\n        var detail = { mutation, nodes };\r\n        var e = new CustomEvent(type, { detail });\r\n        \r\n        target.dispatchEvent(e);\r\n        for (let i = 0, len = nodes.length; i < len; i++) trigger(target, type, mutation, nodes[i]);\r\n        \r\n        function trigger(target: Node, type: string, mutation: MutationRecord, node: Node) {\r\n            var detail = { mutation, node, target };\r\n            var tChild = { 'children:added': 'node:added', 'children:removed': 'node:removed' }[ type ];\r\n            var tParent = { 'children:added': 'child:added', 'children:removed': 'child:removed' }[ type ];\r\n            var c = new CustomEvent(tChild, { detail });\r\n            var p = new CustomEvent(tParent, { detail });\r\n            \r\n            node.dispatchEvent(c);\r\n            target.dispatchEvent(p);\r\n        }\r\n        \r\n        return this;\r\n    }\r\n    \r\n    private ['childList'](mutation: MutationRecord) {\r\n        var { sandbox, node, bootstrap } = this;\r\n        var detail = { mutation }\r\n          , e = new CustomEvent('mutation:children', { detail })\r\n          ;\r\n        this.trigger('children:added', mutation);\r\n        this.trigger('children:removed', mutation);\r\n        if (mutation.addedNodes.length) bootstrap.parseNode( mutation.addedNodes[0] );\r\n        // console.log('MutationManager - childList', mutation);\r\n    }\r\n    private ['attributes'](mutation: MutationRecord) {\r\n        console.log('mutation:attributes', mutation);\r\n        var { sandbox, node, selector, instance } = this;\r\n        var { attributeName: name, target: element }: any&{ target: HTMLElement } = mutation;\r\n        var attr = element.getAttributeNode(name);\r\n        var detail = { mutation, node: attr, operation: 'update' }\r\n          , a = new CustomEvent('mutation', { detail })\r\n          , e = new CustomEvent('mutation:attribute', { detail })\r\n          ;\r\n        if ( !element.hasAttribute(name) ) detail.operation = 'delete';\r\n        if ( { 'null': true, 'undefined': true, '': true }[ mutation.oldValue ] ) detail.operation = 'create';\r\n        \r\n        element.dispatchEvent(e);\r\n        if ( { 'delete': true }[ detail.operation ]) element.dispatchEvent( new CustomEvent('node:removed', { detail }) );\r\n        if (!{ 'delete': true }[ detail.operation ]) attr.dispatchEvent(a);\r\n    }\r\n    private ['characterData'](mutation: MutationRecord) {\r\n        var { sandbox, node } = this;\r\n        console.log('MutationManager - characterData', mutation);\r\n    }\r\n    private ['subtree'](mutation: MutationRecord) {\r\n        var { sandbox, node } = this;\r\n        console.log('MutationManager - subtree', mutation);\r\n    }\r\n    \r\n    connect(config?: any) {\r\n        var { observer, node } = this;\r\n        var config = {\r\n            attributes: true,\r\n            childList: true,\r\n            characterData: true,\r\n            subtree: true,\r\n            attributeOldValue: true,\r\n            characterDataOldValue: true,\r\n            // attributeFilter: true,\r\n            ...config\r\n        };\r\n        \r\n        observer.observe(node, config);\r\n        \r\n        return this;\r\n    }\r\n    \r\n    disconnect() {\r\n        var { observer } = this;\r\n        observer.disconnect();\r\n        return this;\r\n    }\r\n    \r\n}\r\n\r\nclass EventManager {\r\n    private emit: (e: Event|CustomEvent) => any;\r\n    private $events: Map<string, any> = new Map();\r\n    get events(): string[] { return Array.from( this.$events.keys() ); }\r\n    get node(): Node { return <Element>this.sandbox.target; }\r\n    get proxy(): EventTarget { return EventTarget.prototype; }\r\n    // get proxy(): EventTarget { return this.node; }\r\n    get data(): any { return this.sandbox.data; }\r\n    get instance(): any { return this.data.instance; }\r\n    \r\n    constructor(private sandbox: ElementSandboxState, private core: Core) {}\r\n    \r\n    private proxyEventTargetSource(source: EventTarget): boolean {\r\n        var { node } = this;\r\n        \r\n        this.getEventTypes(<Element>node);\r\n        this.events.forEach( (type) => node.addEventListener(type, this.handleAll, true) );\r\n        \r\n        return !!this.events.length;\r\n    }\r\n    \r\n    /**\r\n     * @param : source := EventTarget\r\n     *  *   EventTarget.prototype\r\n     *  *   Node (Element, Attr, etc)\r\n     * @usage : [Node].addEventListener('*', ({ detail: e }) => {...}, false);\r\n     */\r\n    private proxyEventTargetSource_IDEAL(source: EventTarget) {\r\n        var emit = source.dispatchEvent;  // obtain reference\r\n\r\n        function proxy(e: Event|CustomEvent) {\r\n            var { type } = e, any = new CustomEvent('*', { detail: e });  // use original event as detail\r\n            if (!{ '*': true }[ type ]) emit.call(this, any);  // only emit \"any\" if type is not any.type ('*')\r\n            return emit.call(this, e);\r\n        }\r\n\r\n        if ({ 'dispatchEvent': true }[ emit.name ]) source.dispatchEvent = proxy;  // attempt overwrite only if not already set (avoid rewrapping)\r\n        this.emit = emit;\r\n\r\n        return (source.dispatchEvent === proxy);  // indicate if its set after we try to\r\n    }\r\n    \r\n    private getEventTypes(node: Node&Element): Node {\r\n        if ( !{ [1]: true }[ node.nodeType ] ) return node;\r\n        var { attributes, tagName } = node, re = /^\\((.*)\\)$/;\r\n        \r\n        for (let i = 0, len = attributes.length; i < len; i++) this.checkAttrNode(attributes[i], i, attributes);\r\n        if (node.firstElementChild) this.getEventTypes(node.firstElementChild);\r\n        if (node.nextElementSibling) this.getEventTypes(node.nextElementSibling);\r\n        \r\n        return node;\r\n    }\r\n    \r\n    private checkAttrNode(attribute: Attr, i: number, attributes: NamedNodeMap) {\r\n        var { name, value } = attribute, re = /^\\((.*)\\)$/;\r\n        var match = re.test(name), matches = name.match(re), full, type;\r\n        if (matches && matches.length) [ full, type ] = matches;\r\n        if (matches && matches.length) this.$events.set(type, true);\r\n    }\r\n    \r\n    connect() {\r\n        var { node, proxy } = this;\r\n        var successful = this.proxyEventTargetSource(proxy);\r\n        \r\n        node.addEventListener('*', this.handleAny, true);  // `useCapture`\r\n        \r\n        return this;\r\n    }\r\n    \r\n    disconnect() {\r\n        var { node, proxy } = this;\r\n        \r\n        node.removeEventListener('*', this.handleAll);\r\n        proxy.dispatchEvent = this.emit;\r\n        \r\n        return this;\r\n    }\r\n    \r\n    public handleAll = (e: Event|CustomEvent) => {\r\n        var { type, target } = e, any = new CustomEvent('*', { detail: e });  // use original event as detail\r\n        return target.dispatchEvent(any);\r\n    };\r\n    \r\n    public handleAny = (any: CustomEvent) => {\r\n        if ( !any.detail.target.attributes[`(${any.detail.type})`] ) return;\r\n        var { instance } = this;\r\n        var { detail: e } = any\r\n          , { type, target } = <Event>e\r\n          , property = `(${type})`\r\n          , attr = (target as Element).attributes[property]\r\n          , { name, value }: Attr = attr\r\n          ;\r\n        var re = /^(\\w+)\\((.*)\\)$/\r\n          , matches = value.match(re) || [ ]\r\n          , [ full, action, params ] = matches\r\n          ;\r\n        var method = instance[action]\r\n          , invoke = new Function('fn', 'ctx', '$event', `with (ctx) return fn.call(ctx, ${params})`)\r\n          , result = invoke(method, instance, e)\r\n          ;\r\n        return result;\r\n    };\r\n    \r\n}\r\n\r\nclass Sandbox extends CommonSandbox implements ISandbox {\r\n    protected get core() { return this.details.core; }\r\n    // protected get config() { return this.core.configuration; }\r\n    public get data() { return this.details.data; }\r\n    public get target() { return this.details.target; }\r\n    public content: Subject;\r\n    \r\n    constructor(protected details: { type, target: TPrecept, data: any, core: Core }) {\r\n        super(details.core.configuration.director);\r\n    }\r\n    \r\n    publish(channel: string, data?: any, ...more: any[]) {\r\n        var { director } = this;\r\n        director.publish(channel, data, ...more);\r\n        return this;\r\n    }\r\n    subscribe(channel: string, handler: Function) {\r\n        var { director } = this;\r\n        director.subscribe(channel, handler);\r\n        return this;\r\n    }\r\n    unsubscribe(channel: string, handler: Function) {\r\n        var { director } = this;\r\n        director.unsubscribe(channel, handler);\r\n        return this;\r\n    }\r\n    \r\n    bootstrap(root: Node) {\r\n        var { core } = this, { configuration } = core, { bootstrap } = configuration;\r\n        var result = bootstrap.parseNode(root);\r\n        return result;\r\n    }\r\n    \r\n}\r\n\r\nclass NodeSandbox extends Sandbox {\r\n    \r\n    constructor(details: { type, target: Element|Attr|Text|Comment, data: any, core: Core }) {\r\n        super(details);\r\n        var { target } = details, node = target;\r\n        \r\n        if ({ [Node.ATTRIBUTE_NODE]: true }[ node.nodeType ]) node = (node as Attr).ownerElement;\r\n    }\r\n    \r\n    protected handleNodeRemoved(e: CustomEvent) {\r\n        console.warn('TODO (SUPER): core.stop(e.target).destroy(e.target)', e);\r\n    }\r\n    \r\n}\r\nclass ElementNodeSandbox extends NodeSandbox {\r\n    \r\n    constructor(details: { type, target: Element|Attr|Text|Comment, data: any, core: Core }) {\r\n        super(details);\r\n        var { target } = details;\r\n        target.addEventListener('node:removed', this.handleNodeRemoved, false);\r\n        target.addEventListener('children:removed', this.handleChildrenRemoved, false);\r\n        target.addEventListener('child:removed', this.handleChildRemoved, false);\r\n    }\r\n    \r\n    protected handleNodeRemoved = (e: CustomEvent) => {\r\n        console.warn('TODO (ELEMENT): handle target+instance destroy', e);\r\n        super.handleNodeRemoved(e);\r\n    }\r\n    \r\n    protected handleChildrenRemoved = (e: CustomEvent) => {}\r\n    \r\n    protected handleChildRemoved = (e: CustomEvent) => {}\r\n    \r\n}\r\nclass AttrNodeSandbox extends NodeSandbox {\r\n    \r\n    constructor(details: { type, target: Attr, data: any, core: Core }) {\r\n        super(details);\r\n        var { target } = details;\r\n        target.ownerElement.addEventListener('node:removed', this.handleNodeRemoved, false);\r\n    }\r\n    \r\n    protected handleNodeRemoved = (e: CustomEvent) => {\r\n        console.warn('TODO (ATTRIBUTE): handle target+instance destroy', e);\r\n        super.handleNodeRemoved(e);\r\n    }\r\n    \r\n}\r\nclass TextNodeSandbox extends NodeSandbox {\r\n    \r\n    constructor(details: { type, target: Text, data: any, core: Core }) {\r\n        super(details);\r\n    }\r\n    \r\n}\r\nclass CommentNodeSandbox extends NodeSandbox {\r\n    \r\n    constructor(details: { type, target: Comment, data: any, core: Core }) {\r\n        super(details);\r\n    }\r\n    \r\n}\r\n\r\n\r\n\r\nclass ElementProxy {\r\n    \r\n    constructor(private sandbox: Sandbox, private target: Element, private core: Core) {}\r\n    \r\n    get(target: Element, key: string|number|symbol, receiver: ElementProxy): any {\r\n        var result: any = Reflect.get(target, key, receiver);\r\n        return result;\r\n    }\r\n    \r\n}\r\n\r\nclass NamedNodeMapProxy {\r\n    \r\n    constructor(private sandbox: Sandbox, private target: NamedNodeMap, private core: Core) {}\r\n    \r\n    get(target: NamedNodeMap, key: string|number|symbol, receiver: NamedNodeMapProxy): Attr {\r\n        var attr: Attr = Reflect.get(target, key, receiver);\r\n        var handler: AttributeProxy = new AttributeProxy(this.sandbox, attr, this.core);\r\n        var result: Attr = new Proxy(attr, handler);\r\n        \r\n        return result;\r\n    }\r\n    \r\n}\r\n\r\nclass AttributeProxy implements ProxyHandler<Attr> {\r\n    \r\n    constructor(private sandbox: Sandbox, private target: Attr, private core: Core) {}\r\n    \r\n    get(target: Attr, key: string|number|symbol, receiver: AttributeProxy): any {\r\n        var result: any = Reflect.get(target, key, receiver);\r\n        return result;\r\n    }\r\n    \r\n    set(target: Attr, key: string|number|symbol, value: any, receiver: AttributeProxy): any {\r\n        var current = target[key];\r\n        var result: any = Reflect.set(target, key, value, receiver);\r\n        var changed = (current !== result);\r\n        if ({ value: true, nodeValue: true }[ key ] && changed) this.trigger('changed', { oldValue: current });\r\n        \r\n        return result;\r\n    }\r\n    \r\n    deleteProperty(target: Attr, key: string|number|symbol): any {\r\n        var current = target[key];\r\n        var result: any = Reflect.deleteProperty(target, key);\r\n        var changed = (current !== result);\r\n        if ({ value: true, nodeValue: true }[ key ] && changed) this.trigger('deleted', { oldValue: current });\r\n        \r\n        return result;\r\n    }\r\n    \r\n    trigger(trigger: string, data: { oldValue: any, newValue?: any }) {\r\n        var { target } = this;\r\n        var { name, value, ownerElement } = target;\r\n        var operation = { 'changed': 'change', 'deleted': 'delete' }[ trigger ];\r\n        var type = { 'changed': 'attribute:changed', 'deleted': 'attribute:deleted' }[ trigger ];\r\n        var spec = `${name}:${trigger}`;\r\n        var detail = { ...data, target, ownerElement, name, value, old: data.oldValue, operation };\r\n        var t = new CustomEvent(type, { detail });  // example: ('attribute:changed', detail: {...})\r\n        var m = new CustomEvent(spec, { detail });  // example: ('active:changed', detail: { ..., name: 'active', value: 'true', oldValue: 'false', ..., })\r\n        \r\n        ownerElement.dispatchEvent(t);  // dispatch generic\r\n        ownerElement.dispatchEvent(m);  // dispatch specific\r\n        \r\n        return this;\r\n    }\r\n    \r\n}\r\n\r\nclass ElementSandboxState extends ElementNodeSandbox implements ISandbox {\r\n    protected delegations: EventManager = new EventManager(this, this.core);\r\n    protected mutations: MutationManager = new MutationManager(this, this.core);\r\n    public content: TemplateSubject = new TemplateSubject(this, this.core);\r\n    public element: Element = new Proxy( <any>this.target, new ElementProxy(this, <Element>this.target, this.core) );\r\n    public attributes: NamedNodeMap = (this.target as Element).attributes;\r\n    public attrs: NamedNodeMap = new Proxy( this.attributes, new NamedNodeMapProxy(this, (this.target as Element).attributes, this.core) );\r\n    public $classes: DOMTokenList = (this.target as Element).classList;\r\n    public $dataset: DOMStringMap = (this.target as HTMLElement).dataset;\r\n    \r\n    constructor(node: Node&Element, data: any, core: Core) {\r\n        super({ type: node.nodeType, target: node, data, core });\r\n        this.content.attach(this);\r\n        this.mutations.connect();\r\n        // this.subscribe(this.channels['ELEMENT:MUTATION:ATTRIBUTE:OBSERVED'], (m) => console.log('ELEMENT:MUTATION:ATTRIBUTE:OBSERVED', m) );\r\n        // this.node.addEventListener('OUTPUT', (e) => console.log('OUTPUT', e), false );\r\n        // this.node.addEventListener('mutation:io', (e) => console.log('IO (io)', e), false);\r\n        return this;\r\n    }\r\n    \r\n    update(state: NamedNodeMap) {  // Chain of Responsibility Pattern\r\n        var { mutations, delegations, target } = this;\r\n        mutations.disconnect();  // reconnect after to avoid mutation events\r\n        (target as Element).innerHTML = '';  // clear current contents\r\n        for (let child of state) (target as Element).appendChild(child);\r\n        mutations.connect();  // reconnect after to avoid mutation events\r\n        delegations.connect();\r\n    }\r\n    \r\n}\r\n\r\nclass AttributeSandboxState extends AttrNodeSandbox implements ISandbox {\r\n    public attribute: Attr = new Proxy( <Attr>this.target, new AttributeProxy(this, <Attr>this.target, this.core) );\r\n    public element: Element = (this.target as Attr).ownerElement;\r\n    public owner: any = this.data.owner;\r\n    \r\n    constructor(node: Node&Attr, data: any, core: Core) {\r\n        super({ type: 'attribute', target: node, data, core });\r\n        return this;\r\n    }\r\n    \r\n}\r\n\r\n\r\nclass TextSandboxState extends TextNodeSandbox {\r\n    \r\n    constructor(target: Text, data: any, core: Core) {\r\n        super({ type: 'text', target, data, core });\r\n    }\r\n    \r\n}\r\nclass CommentSandboxState extends CommentNodeSandbox {\r\n    \r\n    constructor(target: Comment, data: any, core: Core) {\r\n        super({ type: 'comment', target, data, core });\r\n    }\r\n    \r\n}\r\n\r\nclass PipeSandboxState {}\r\n\r\nclass ServiceSandboxState extends Sandbox implements ISandbox {\r\n    private get config() { return this.core.configuration; }\r\n    // private get director() { return this.config.director; }\r\n    // public get channels() { return this.director.channels; }\r\n    \r\n    constructor(target: Utilities, data: any, core: Core) {\r\n        super({ type: 'service', target, data, core });\r\n        return this;\r\n    }\r\n    \r\n}\r\n\r\nclass MicroserviceSandboxState {}\r\nclass IoTSandboxState {}\r\n\r\n\r\nfunction select(details: { type, target: TPrecept, data: any, core: Core }): any {\r\n    var { type, target, data, core } = details;\r\n    var Sandbox = {\r\n        ['element']: ElementSandboxState,\r\n        ['attribute']: AttributeSandboxState,\r\n        ['text']: TextSandboxState,\r\n        ['comment']: CommentSandboxState,\r\n        ['pipe']: PipeSandboxState,\r\n        ['service']: ServiceSandboxState,\r\n        ['microservice']: MicroserviceSandboxState,\r\n        ['iot']: IoTSandboxState,\r\n    }[ type ] as any;\r\n    var sandbox = new Sandbox(target, data, core);\r\n    \r\n    return sandbox;\r\n}\r\n\r\n\r\nclass SandboxContext extends Sandbox implements ISandbox {\r\n    public element: Element;  // stub\r\n    public content: TemplateSubject;  // stub\r\n    \r\n    constructor(details: { type, target: TPrecept, data: any, core: Core }) {\r\n        super(details);\r\n        var sandbox = select(details);\r\n        return sandbox;\r\n    }\r\n    \r\n}\r\n\r\n\r\nexport {\r\n    SandboxContext as Sandbox,\r\n    ServiceSandboxState as ServiceSandbox,\r\n    ElementSandboxState as ComponentSandbox,\r\n};\r\n","\r\nimport { Core, Sandbox } from '@motorman/vertices/core';\r\nimport { ChainOfResponsibility } from '@motorman/core/utilities/patterns/behavioral';\r\nimport { Utilities, Deferred } from '@motorman/core/utilities';\r\n\r\nvar utils = new Utilities();\r\n\r\ntype IMetadata = { type: string, selector: string, Class: any, Sandbox: typeof Sandbox };\r\ntype IReferenceInstance = IMetadata & {\r\n    target: Node | Utilities,\r\n    instance: any,\r\n    sandbox: Sandbox,\r\n    owner?: any,\r\n    parent?: any,\r\n    occupants?: Node[],\r\n    occupee?: Node,\r\n    $occupants?: Map<string, Node>,\r\n};\r\n\r\nclass Bootstrap {\r\n    private core: Core = null;  // assume !null if pEnvironment.[[status]] !== pending\r\n    public dEnvironment: Deferred<any> = new Deferred();  // resolver must set this.core before invoking resolve()\r\n    public pEnvironment: Promise<any> = this.dEnvironment.promise;\r\n    get modules() { if (this.core) return this.core.modules; else return null; }\r\n    protected pipeNodeHandler = (handler: Function) => (e: CustomEvent) => handler.call(this, e.detail, e);\r\n    protected nodeProcessors: ChainOfResponsibility = new ChainOfResponsibility({}, [\r\n        { respond: this.pipeNodeHandler(this.processElementNode) },\r\n        { respond: this.pipeNodeHandler(this.processTextNode) },\r\n        { respond: this.pipeNodeHandler(this.processCommentNode) },\r\n    ]);\r\n    \r\n    constructor(options: any = {}) {\r\n        var { pEnvironment } = this;\r\n        \r\n        pEnvironment\r\n            // .then( (env) => this.bootstrapDirector(env) )\r\n            .then( (env) => this.bootstrapServices(env) )\r\n            .then( (env) => this.parseNode(env) )\r\n            ;\r\n        return this;\r\n    }\r\n    \r\n    execute(core: Core): Node&Document {\r\n        var { configuration } = core;\r\n        var { environment } = configuration;\r\n        \r\n        this.core = core;\r\n        this.dEnvironment.resolve(environment);\r\n        \r\n        return environment;\r\n    }\r\n    \r\n    bootstrapServices(env: Document): Node&Document {\r\n        var { core } = this;\r\n        var { modules } = core;\r\n        var { service: $services = new Map() } = modules;\r\n        \r\n        for (let [key, val] of $services) this.bootstrapService(val, key, $services);\r\n        \r\n        return env;\r\n    }\r\n    bootstrapService(metadata: IMetadata, key: string, $services: Map<string, IMetadata>) {\r\n        var { core } = this;\r\n        var { $instances } = core;\r\n        var { Sandbox, Class, selector } = metadata;\r\n        var data: IReferenceInstance = { target: utils, instance: null, selector, sandbox: null, ...metadata };\r\n        var sandbox = new Sandbox({ type: 'service', target: utils, data, core });\r\n        var instance = new Class(sandbox);\r\n        data.instance = instance;  // is there a better way to do this using Hoisting?\r\n        data.sandbox = sandbox;  // is there a better way to do this using Hoisting?\r\n    }\r\n    \r\n    parseNode(node: Node): Node {\r\n        var { nodeProcessors: cor } = this;\r\n        var e = new CustomEvent('domnodeprocess', { detail: <any>node })\r\n            , e = cor.respond(e)\r\n            , { detail: result } = e\r\n            ;\r\n        var { isConnected, parentNode: parent, previousSibling: previous, nextSibling: next, firstChild: child } = result;\r\n        \r\n        // RECURSION\r\n        // if (result !== node) return this.parseNode(result);  // reparse. assume replacement occurred. do not continue for next or child.\r\n        if (child) this.parseNode(child);  // TCO???\r\n        if (next) this.parseNode(next);  // TCO???\r\n        return node;  // result can still equal node\r\n    }\r\n        \r\n    private decorateElement(node: Node&Element, metadata: IMetadata, selector: string, $elements: Map<string, IMetadata>) {\r\n        if ( !node.matches(selector) ) return;\r\n        var { core } = this;\r\n        var { $instances, $targets } = core;\r\n        var { Class, Sandbox } = metadata;\r\n        var { nodeType, childNodes } = node;\r\n        var occupants = Array.prototype.slice.call(childNodes);\r\n        // var occupee = new DocumentFragment();\r\n        var occupee = document.createElement('div');\r\n        var $occupants = new Map();\r\n        \r\n        function addOccupant($occupants: Map<string, Node[]>, occupee: Element, schema: Node&HTMLSlotElement) {\r\n            var { slot: name = '' } = schema, node = schema.cloneNode(true);\r\n            if ( !$occupants.has(name) ) $occupants.set(name, [ ]);\r\n            // console.log('<?>', name);\r\n            $occupants.get(name).push(node);\r\n            occupee.appendChild(node);\r\n        }\r\n        \r\n        occupants.forEach( c => addOccupant($occupants, occupee, c) );\r\n        // while (node.lastChild) node.firstChild.remove();  // clear from original parent to obviate child.cloneNode and maintain same object in Heap\r\n        let owner = this.getOwnerInstance(node), parentData: IReferenceInstance = $instances.get(owner);\r\n        // console.log('-->', node.tagName, owner);\r\n        let data: IReferenceInstance = { selector, target: node, instance: null, owner, sandbox: null, occupants, occupee, $occupants, ...metadata };\r\n        if ( $instances.has(owner) ) data.parent = { occupants: parentData.occupants, $occupants: parentData.$occupants, occupee: parentData.occupee, Class: parentData.Class };\r\n        let sandbox = new Sandbox({ type: 'element', target: node, data, core });  // must be constructed after node is emptied to avoid mutation events.\r\n        let instance = new Class(sandbox);\r\n        data.instance = instance;  // is there a better way to do this using Hoisting?\r\n        data.sandbox = sandbox;  // is there a better way to do this using Hoisting?\r\n        // occupants.forEach( c => addOccupant($occupants, occupee, c) );\r\n        \r\n        $targets.set(node, data);\r\n        $instances.set(instance, data);\r\n    }\r\n    \r\n    private processElementNode(node: Node&Element): Node&Element {  // Node.ELEMENT_NODE === 1\r\n        if ( !{ '1': true }[ node.nodeType ] ) return node;  // https://developer.mozilla.org/en-US/docs/Web/API/Node/nodeType\r\n        var { modules = {} } = this;\r\n        var { element: $elements = new Map() } = modules;\r\n        var { attributes } = node;\r\n        var attribute = attributes[0];\r\n        \r\n        for (let [key, val] of $elements) this.decorateElement(node, val, key, $elements);\r\n        if (attribute) this.processAttributeNode(attribute, ...node.attributes);\r\n        \r\n        return node;\r\n    }\r\n    \r\n    private processAttributeNode(node?: Node&Attr, ...more: (Node&Attr)[]): Node&Attr {\r\n        if ( !node ) return node;\r\n        if ( !{ [Node.ATTRIBUTE_NODE]: true }[ node.nodeType ] ) return node;\r\n        if ( !this.modules.attribute ) return node;\r\n        var { core, modules = {} } = this;\r\n        var { $targets, $instances } = core;\r\n        var { attribute: $attributes = new Map() } = modules;\r\n        var { name, value } = node, metadata = $attributes.get(name);\r\n        var reBinding = /^\\[.+\\]$/\r\n          , reReporter = /^{[^{}]*}$/\r\n          , isBinding = reBinding.test(name)\r\n          , isReporter = reReporter.test(name)\r\n          , hasBinding = $attributes.get('[*]')\r\n          , hasReporter = $attributes.get('{*}')\r\n          , bindable = (isBinding && hasBinding)\r\n          , reportable = (isReporter && hasReporter)\r\n          ;\r\n        \r\n        if ( !$attributes.has(name) && !bindable && !reportable ) return this.processAttributeNode(...more);\r\n        if (bindable) metadata = $attributes.get('[*]');\r\n        if (reportable) metadata = $attributes.get('{*}');\r\n        \r\n        if (!metadata) console.log('([!])', name, $attributes);\r\n        let { Sandbox, Class, selector }: IMetadata = metadata;\r\n        let owner = this.getOwnerInstance(node.ownerElement), parentData: IReferenceInstance = $instances.get(owner);\r\n        let data: IReferenceInstance = { target: node, instance: null, selector, sandbox: null, value, owner, ...metadata };\r\n        if ( $instances.has(owner) ) data.parent = { occupants: parentData.occupants, $occupants: parentData.$occupants, occupee: parentData.occupee, Class: parentData.Class };\r\n        let sandbox = new Sandbox({ type: 'attribute', target: node, data, core });  // must be constructed after node is emptied to avoid mutation events.\r\n        let instance = new Class(sandbox);\r\n        data.instance = instance;  // is there a better way to do this using Hoisting?\r\n        data.sandbox = sandbox;  // is there a better way to do this using Hoisting?\r\n        $targets.set(node, data);\r\n        $instances.set(instance, data);\r\n        \r\n        if ( !more.length ) return node;\r\n        return this.processAttributeNode(...more);\r\n    }\r\n    \r\n    private processTextNode(node: Node&Text): Node&Text {  // Node.TEXT_NODE === 3\r\n        if (!{ '3': true }[ node.nodeType ]) return node;  // https://developer.mozilla.org/en-US/docs/Web/API/Node/nodeType\r\n        if ( !this.modules.text ) return node;\r\n        var { modules } = this;\r\n        var { text: $texts }: { text: Map<RegExp, IMetadata> } = modules;\r\n        \r\n        for (let [key, val] of $texts) this.initializeInstance(node, val, key, $texts);\r\n        \r\n        return node;\r\n    }\r\n    \r\n    private processCommentNode(node: Node&Comment): Node&Comment {  // Node.COMMENT_NODE === 8\r\n        if (!{ '8': true }[ node.nodeType ]) return node;  // https://developer.mozilla.org/en-US/docs/Web/API/Node/nodeType\r\n        if ( !this.modules.comment ) return node;\r\n        var { modules } = this;\r\n        var { comment: $comments }: { comment: Map<RegExp, IMetadata> } = modules;\r\n        \r\n        for (let [key, val] of $comments) this.initializeInstance(node, val, key, $comments);\r\n        \r\n        return node;\r\n    }\r\n    \r\n    private getOwnerInstance(node: Element): any {\r\n        if ( !this.core.$targets.has(node) && !node.parentElement ) return null;\r\n        if ( !this.core.$targets.has(node) ) return this.getOwnerInstance(node.parentElement);\r\n        var { core } = this;\r\n        var { $targets } = core, metadata = $targets.get(node);\r\n        var { instance } = metadata;\r\n        \r\n        if (node && (node as Element).id && (node as Element).id.toString() === '0') console.log('<N>', this.core.$targets.has(node), node.parentNode );\r\n        return instance;\r\n    }\r\n    \r\n    private initializeInstance(node: Node&(Text|Comment), metadata: IMetadata, key: RegExp, $text: Map<RegExp, IMetadata>) {\r\n        var { core } = this;\r\n        var { $instances, $targets } = core;\r\n        var { nodeType, nodeValue } = node;\r\n        var { Sandbox, Class, selector } = metadata;\r\n        \r\n        if ( !key.test(nodeValue) && !{ '#text': true }[ selector ] ) return;\r\n        let owner = this.getOwnerInstance(node.parentElement);\r\n        let type = { [Node.TEXT_NODE]: 'text', [Node.COMMENT_NODE]: 'comment' }[ nodeType ];\r\n        let data: IReferenceInstance = { target: node, instance: null, selector, sandbox: null, owner, ...metadata };\r\n        let sandbox = new Sandbox({ type, target: node, data, core });\r\n        let instance = new Class(sandbox);\r\n        \r\n        data.instance = instance;  // is there a better way to do this using Hoisting?\r\n        data.sandbox = sandbox;  // is there a better way to do this using Hoisting?\r\n        $instances.set(instance, data);\r\n        $targets.set(node, data);\r\n    }\r\n    \r\n}\r\n\r\nexport { Bootstrap };\r\n","\r\ninterface IObserver {\r\n    update(state?: any): any;\r\n}\r\n\r\n/**\r\n * @deviations \r\n *  * @param #this: key\r\n *  *   * Demarcates a given datum to use as an instance's \"state\".\r\n *  * @param #this: observation\r\n *  *   * Provides convenience for getting an instance's state based upon `key`.\r\n *  *   * @reasoning\r\n *  *   *   * The key-name `state` is common between problem-domains; as so, objects such as an Address may \r\n *  *   *   * naturally encapsulate a datum named `state`. This allows the subclass to override `get key() {}` \r\n *  *   *   * to provide that of their own. The words \"key\" & \"observation\" are assumed to \r\n *  *   *   * be less common than \"state\", and preferred over [modified] words like \"$state\". In the case\r\n *  *   *   * that `this` is to be returned as \"state\", omitting `key` from the constructor provides the\r\n *  *   *   * implementor opportunity to define `get undefined() { return this; }` (accommodated by setter)\r\n *  *   *   * because, in which case,\r\n *  *   *   * `get observation() { return this[this.key]; }`\r\n *  *   *   * `===`\r\n *  *   *   * `get observation() { return this.undefined; }`\r\n *  *   *   * `===`\r\n *  *   *   * `get undefined() { return this; }`\r\n *  * @param #attach(): notify\r\n *  *   *   Type: Boolean\r\n *  *   *   Allows for any given Observer to declare whether or not it's `update()` method should be invoked\r\n *  *   *   upon attachment, in order to obtain the Subject's current state.\r\n */\r\nclass Subject {\r\n    private observers: IObserver[] = [ ];\r\n    get observation() { return this[this.key]; }  // (aliases Observer Pattern \"state\" datum) uses given datum for state\r\n    set observation(value) { this[this.key] = value; this.notify(); }  // manually sets state & notifies observers\r\n    \r\n    constructor(private key?: any) {}\r\n    \r\n    attach(observer: IObserver, notify?: boolean): Subject {\r\n        var { observers, observation } = this;\r\n        observers.push(observer);\r\n        if (notify) observer.update(observation);\r\n        return this;\r\n    }\r\n    \r\n    detach(observer: IObserver): Subject {\r\n        var { observers } = this;\r\n        for (let i = observers.length; i--;) if (observers[i] === observer) observers.splice(i, 1);\r\n        return this;\r\n    }\r\n    \r\n    notify(state?: any): Subject {\r\n        var { observers, observation } = this, state = state || observation;\r\n        for (let i = 0, len = observers.length; i < len; i++) observers[i].update(state);\r\n        return this;\r\n    }\r\n    \r\n}\r\n\r\nexport { Subject, IObserver };\r\n","\r\nimport { IEventAggregator } from '../eventaggregator.interface';\r\nimport { IDirectorOptions } from './options.interface';\r\nimport { Reactive as Store } from '../store';\r\nimport { Utilities } from '../utilities';\r\n\r\n\r\nclass Director extends Store implements IEventAggregator {\r\n    private dependencies: IDirectorOptions;\r\n    private actionHandlers: any;\r\n    private stateHandlers: any;\r\n    public utils: Utilities = new Utilities();\r\n    public channels: any;\r\n\r\n    constructor(options: IDirectorOptions) {\r\n        super({ id: 'app' });\r\n        var { channels, ActionHandlers, StateHandlers, Dependencies } = options;\r\n        var dependencies = new Dependencies(this);\r\n        var actionHandlers = new ActionHandlers(this, dependencies)\r\n          , stateHandlers = new StateHandlers(this, dependencies)\r\n          ;\r\n        \r\n        this.channels = channels;\r\n        this.dependencies = dependencies;\r\n        this.actionHandlers = actionHandlers;\r\n        this.stateHandlers = stateHandlers;\r\n        this.register('publishers', actionHandlers);\r\n        this.attach({ next: this.handleState });\r\n    }\r\n\r\n    private handleState = (e: CustomEvent) => {\r\n        var { type, detail } = e;\r\n        var { stateHandlers: handlers } = this;\r\n        var action = handlers[type];\r\n\r\n        if (action) action.call(handlers, e);\r\n        // else setTimeout( () => console.log('@ OBSERVED STATE', type, detail), (1000 * 10) );\r\n    };\r\n\r\n    emit(channel: string, data?: any, ...more: any[]) {\r\n        this.dispatch(channel, data, ...more);\r\n        return this;\r\n    }\r\n\r\n}\r\n\r\nexport { Director };\r\n","\r\nimport { ISubscriber } from '../subscriber.interface';\r\nimport { Reactive as Director } from '../director';\r\nimport { ISandbox } from './sandbox.interface';\r\n\r\n\r\nclass Sandbox implements ISandbox {\r\n    get utils() { return this.director.utils; }\r\n    get channels() { return this.director.channels; }\r\n\r\n    constructor(protected director: Director) {\r\n        return this;\r\n    }\r\n\r\n    in(channel: string) {\r\n        return this.director.in(channel);\r\n    }\r\n    publish(channel: string, data?: any, ...more: any[]) {\r\n        this.director.publish(channel, data, ...more);\r\n        return this;\r\n    }\r\n    subscribe(channel: string, handler: Function) {\r\n        this.director.subscribe(channel, handler);\r\n        return this;\r\n    }\r\n    unsubscribe(channel: string, handler: Function) {\r\n        this.director.unsubscribe(channel, handler);\r\n        return this;\r\n    }\r\n    attach(observer: ISubscriber) {\r\n        this.director.attach(observer);\r\n        return this;\r\n    }\r\n    detach(observer: ISubscriber) {\r\n        this.director.detach(observer);\r\n        return this;\r\n    }\r\n\r\n}\r\n\r\nexport { Sandbox };\r\n","\r\n// INTERFACES\r\nexport { IEventAggregator } from './eventaggregator.interface';\r\nexport { ISandbox } from './sandbox';\r\n// STANDARD/NATIVE\r\nexport { Reactive as EventHub } from './eventhub';  // |----------------------------------------------------------------\r\nexport { Reactive as Mediator } from './mediator';  // |\r\nexport { Reactive as Director } from './director';  // |         <-- TODO: use add normal, non-reactive\r\nexport { Reactive as Sandbox } from './sandbox';    // |\r\nexport { Reactive as Store } from './store';        // |----------------------------------------------------------------\r\n// REACTIVE\r\nimport * as reactive from './reactive';\r\nexport { reactive };\r\n","\"use strict\";\n\nvar isOldIE = function isOldIE() {\n  var memo;\n  return function memorize() {\n    if (typeof memo === 'undefined') {\n      // Test for IE <= 9 as proposed by Browserhacks\n      // @see http://browserhacks.com/#hack-e71d8692f65334173fee715c222cb805\n      // Tests for existence of standard globals is to allow style-loader\n      // to operate correctly into non-standard environments\n      // @see https://github.com/webpack-contrib/style-loader/issues/177\n      memo = Boolean(window && document && document.all && !window.atob);\n    }\n\n    return memo;\n  };\n}();\n\nvar getTarget = function getTarget() {\n  var memo = {};\n  return function memorize(target) {\n    if (typeof memo[target] === 'undefined') {\n      var styleTarget = document.querySelector(target); // Special case to return head of iframe instead of iframe itself\n\n      if (window.HTMLIFrameElement && styleTarget instanceof window.HTMLIFrameElement) {\n        try {\n          // This will throw an exception if access to iframe is blocked\n          // due to cross-origin restrictions\n          styleTarget = styleTarget.contentDocument.head;\n        } catch (e) {\n          // istanbul ignore next\n          styleTarget = null;\n        }\n      }\n\n      memo[target] = styleTarget;\n    }\n\n    return memo[target];\n  };\n}();\n\nvar stylesInDom = {};\n\nfunction modulesToDom(moduleId, list, options) {\n  for (var i = 0; i < list.length; i++) {\n    var part = {\n      css: list[i][1],\n      media: list[i][2],\n      sourceMap: list[i][3]\n    };\n\n    if (stylesInDom[moduleId][i]) {\n      stylesInDom[moduleId][i](part);\n    } else {\n      stylesInDom[moduleId].push(addStyle(part, options));\n    }\n  }\n}\n\nfunction insertStyleElement(options) {\n  var style = document.createElement('style');\n  var attributes = options.attributes || {};\n\n  if (typeof attributes.nonce === 'undefined') {\n    var nonce = typeof __webpack_nonce__ !== 'undefined' ? __webpack_nonce__ : null;\n\n    if (nonce) {\n      attributes.nonce = nonce;\n    }\n  }\n\n  Object.keys(attributes).forEach(function (key) {\n    style.setAttribute(key, attributes[key]);\n  });\n\n  if (typeof options.insert === 'function') {\n    options.insert(style);\n  } else {\n    var target = getTarget(options.insert || 'head');\n\n    if (!target) {\n      throw new Error(\"Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.\");\n    }\n\n    target.appendChild(style);\n  }\n\n  return style;\n}\n\nfunction removeStyleElement(style) {\n  // istanbul ignore if\n  if (style.parentNode === null) {\n    return false;\n  }\n\n  style.parentNode.removeChild(style);\n}\n/* istanbul ignore next  */\n\n\nvar replaceText = function replaceText() {\n  var textStore = [];\n  return function replace(index, replacement) {\n    textStore[index] = replacement;\n    return textStore.filter(Boolean).join('\\n');\n  };\n}();\n\nfunction applyToSingletonTag(style, index, remove, obj) {\n  var css = remove ? '' : obj.css; // For old IE\n\n  /* istanbul ignore if  */\n\n  if (style.styleSheet) {\n    style.styleSheet.cssText = replaceText(index, css);\n  } else {\n    var cssNode = document.createTextNode(css);\n    var childNodes = style.childNodes;\n\n    if (childNodes[index]) {\n      style.removeChild(childNodes[index]);\n    }\n\n    if (childNodes.length) {\n      style.insertBefore(cssNode, childNodes[index]);\n    } else {\n      style.appendChild(cssNode);\n    }\n  }\n}\n\nfunction applyToTag(style, options, obj) {\n  var css = obj.css;\n  var media = obj.media;\n  var sourceMap = obj.sourceMap;\n\n  if (media) {\n    style.setAttribute('media', media);\n  } else {\n    style.removeAttribute('media');\n  }\n\n  if (sourceMap && btoa) {\n    css += \"\\n/*# sourceMappingURL=data:application/json;base64,\".concat(btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))), \" */\");\n  } // For old IE\n\n  /* istanbul ignore if  */\n\n\n  if (style.styleSheet) {\n    style.styleSheet.cssText = css;\n  } else {\n    while (style.firstChild) {\n      style.removeChild(style.firstChild);\n    }\n\n    style.appendChild(document.createTextNode(css));\n  }\n}\n\nvar singleton = null;\nvar singletonCounter = 0;\n\nfunction addStyle(obj, options) {\n  var style;\n  var update;\n  var remove;\n\n  if (options.singleton) {\n    var styleIndex = singletonCounter++;\n    style = singleton || (singleton = insertStyleElement(options));\n    update = applyToSingletonTag.bind(null, style, styleIndex, false);\n    remove = applyToSingletonTag.bind(null, style, styleIndex, true);\n  } else {\n    style = insertStyleElement(options);\n    update = applyToTag.bind(null, style, options);\n\n    remove = function remove() {\n      removeStyleElement(style);\n    };\n  }\n\n  update(obj);\n  return function updateStyle(newObj) {\n    if (newObj) {\n      if (newObj.css === obj.css && newObj.media === obj.media && newObj.sourceMap === obj.sourceMap) {\n        return;\n      }\n\n      update(obj = newObj);\n    } else {\n      remove();\n    }\n  };\n}\n\nmodule.exports = function (moduleId, list, options) {\n  options = options || {}; // Force single-tag solution on IE6-9, which has a hard limit on the # of <style>\n  // tags it will allow on a page\n\n  if (!options.singleton && typeof options.singleton !== 'boolean') {\n    options.singleton = isOldIE();\n  }\n\n  moduleId = options.base ? moduleId + options.base : moduleId;\n  list = list || [];\n\n  if (!stylesInDom[moduleId]) {\n    stylesInDom[moduleId] = [];\n  }\n\n  modulesToDom(moduleId, list, options);\n  return function update(newList) {\n    newList = newList || [];\n\n    if (Object.prototype.toString.call(newList) !== '[object Array]') {\n      return;\n    }\n\n    if (!stylesInDom[moduleId]) {\n      stylesInDom[moduleId] = [];\n    }\n\n    modulesToDom(moduleId, newList, options);\n\n    for (var j = newList.length; j < stylesInDom[moduleId].length; j++) {\n      stylesInDom[moduleId][j]();\n    }\n\n    stylesInDom[moduleId].length = newList.length;\n\n    if (stylesInDom[moduleId].length === 0) {\n      delete stylesInDom[moduleId];\n    }\n  };\n};","\"use strict\";\n\n/*\n  MIT License http://www.opensource.org/licenses/mit-license.php\n  Author Tobias Koppers @sokra\n*/\n// css base code, injected by the css-loader\n// eslint-disable-next-line func-names\nmodule.exports = function (useSourceMap) {\n  var list = []; // return the list of modules as css string\n\n  list.toString = function toString() {\n    return this.map(function (item) {\n      var content = cssWithMappingToString(item, useSourceMap);\n\n      if (item[2]) {\n        return \"@media \".concat(item[2], \" {\").concat(content, \"}\");\n      }\n\n      return content;\n    }).join('');\n  }; // import a list of modules into the list\n  // eslint-disable-next-line func-names\n\n\n  list.i = function (modules, mediaQuery) {\n    if (typeof modules === 'string') {\n      // eslint-disable-next-line no-param-reassign\n      modules = [[null, modules, '']];\n    }\n\n    for (var i = 0; i < modules.length; i++) {\n      var item = [].concat(modules[i]);\n\n      if (mediaQuery) {\n        if (!item[2]) {\n          item[2] = mediaQuery;\n        } else {\n          item[2] = \"\".concat(mediaQuery, \" and \").concat(item[2]);\n        }\n      }\n\n      list.push(item);\n    }\n  };\n\n  return list;\n};\n\nfunction cssWithMappingToString(item, useSourceMap) {\n  var content = item[1] || ''; // eslint-disable-next-line prefer-destructuring\n\n  var cssMapping = item[3];\n\n  if (!cssMapping) {\n    return content;\n  }\n\n  if (useSourceMap && typeof btoa === 'function') {\n    var sourceMapping = toComment(cssMapping);\n    var sourceURLs = cssMapping.sources.map(function (source) {\n      return \"/*# sourceURL=\".concat(cssMapping.sourceRoot || '').concat(source, \" */\");\n    });\n    return [content].concat(sourceURLs).concat([sourceMapping]).join('\\n');\n  }\n\n  return [content].join('\\n');\n} // Adapted from convert-source-map (MIT)\n\n\nfunction toComment(sourceMap) {\n  // eslint-disable-next-line no-undef\n  var base64 = btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap))));\n  var data = \"sourceMappingURL=data:application/json;charset=utf-8;base64,\".concat(base64);\n  return \"/*# \".concat(data, \" */\");\n}","\r\nimport { Element } from '@motorman/vertices';\r\n// import { Element, attr, watch, bind, handle } from '@motorman/vertices';\r\n// import { Sandbox } from '@motorman/core';\r\n\r\nclass SingletonComponentRequest { constructor(options: any = {}) {} }  // MOCK/TEMP\r\n\r\nclass BackdropRequest extends SingletonComponentRequest {\r\n    id: string = '';\r\n    \r\n    constructor(options: any = {}) {\r\n        super(options);\r\n        var { id } = options;\r\n        this.id = id || this.id;\r\n        return this;\r\n    }\r\n    \r\n}\r\n\r\n@Element({ selector: 'v-backdrop' })\r\nexport class BackdropComponent {\r\n    // @attr() active: boolean = false;\r\n    // @attr() options: any = { };\r\n    // public request: BackdropRequest = new BackdropRequest({});\r\n    \r\n    // constructor(private $: Sandbox) {}\r\n    \r\n    // @watch('options') watchOptions(val, old) {\r\n    //     console.log('>', val, old);\r\n    // }\r\n    \r\n    // @bind('click') handleInteraction(e: Event) {\r\n    //     var { $, request } = this;\r\n    //     $.publish($.channels['BACKDROP:INSPECTED'], request);\r\n    // }\r\n    \r\n    // @handle('BACKDROP:REQUESTED') handleRequest(e: CustomEvent) {\r\n    //     var { type, detail } = e, request = new BackdropRequest(detail);\r\n    //     console.log('@ BackdropComponent', type, detail);\r\n    //     this.request = request;\r\n    //     this.active = true;\r\n    // }\r\n    \r\n    // @handle('BACKDROP:DISMISSED') handleDismissed(e: CustomEvent) {\r\n    //     var { type, detail } = e;\r\n    //     console.log('@ BackdropComponent', type, detail);\r\n    //     this.active = false;\r\n    // }\r\n    \r\n}\r\n","var api = require(\"!../../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../../node_modules/css-loader/dist/cjs.js!../../../../../../node_modules/sass-loader/dist/cjs.js!./backdrop.component.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(module.id, content, options);\n\nvar exported = content.locals ? content.locals : {};\n\n\n\nmodule.exports = exported;","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../../../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \"v-backdrop{position:fixed;top:0;bottom:0;left:0;right:0;background-color:#fff;opacity:0.8;display:none}v-backdrop[active=\\\"true\\\"]{display:block}\\n\", \"\"]);\n// Exports\nmodule.exports = exports;\n"],"sourceRoot":""}