{"version":3,"sources":["webpack:///./src/@motorman/vertices/core/defaults.js","webpack:///./src/@motorman/vertices/core/core.ts","webpack:///./src/@motorman/vertices/core/api.js","webpack:///./src/@motorman/vertices/core/element-engine.ts","webpack:///./src/@motorman/vertices/core/index.ts","webpack:///./src/@motorman/core/utilities/utilities.ts","webpack:///./src/@motorman/core/utilities/patterns/other/deferred.ts","webpack:///./src/@motorman/core/utilities/patterns/other/detective.ts","webpack:///./src/@motorman/core/utilities/index.ts","webpack:///./src/@motorman/core/utilities/patterns/behavioral/chainOfRespnsibility.ts","webpack:///./src/@motorman/core/utilities/patterns/behavioral/command.ts","webpack:///./src/@motorman/core/utilities/patterns/behavioral/mediator/eventhub.ts","webpack:///./src/@motorman/core/utilities/patterns/behavioral/index.ts","webpack:///./src/@motorman/vertices/index.ts","webpack:///./src/@motorman/vertices/core/decorators.ts","webpack:///./src/@motorman/core/utilities/patterns/behavioral/observer.ts","webpack:///./src/@motorman/core/store/store.rxjs.ts","webpack:///./src/@motorman/core/store/index.ts","webpack:///./node_modules/tslib/tslib.es6.js","webpack:///./node_modules/rxjs/_esm5/internal/util/isFunction.js","webpack:///./node_modules/rxjs/_esm5/internal/config.js","webpack:///./node_modules/rxjs/_esm5/internal/util/hostReportError.js","webpack:///./node_modules/rxjs/_esm5/internal/Observer.js","webpack:///./node_modules/rxjs/_esm5/internal/util/isArray.js","webpack:///./node_modules/rxjs/_esm5/internal/util/UnsubscriptionError.js","webpack:///./node_modules/rxjs/_esm5/internal/Subscription.js","webpack:///./node_modules/rxjs/_esm5/internal/util/isObject.js","webpack:///./node_modules/rxjs/_esm5/internal/symbol/rxSubscriber.js","webpack:///./node_modules/rxjs/_esm5/internal/Subscriber.js","webpack:///./node_modules/rxjs/_esm5/internal/symbol/observable.js","webpack:///./node_modules/rxjs/_esm5/internal/util/noop.js","webpack:///./node_modules/rxjs/_esm5/internal/util/pipe.js","webpack:///./node_modules/rxjs/_esm5/internal/Observable.js","webpack:///./node_modules/rxjs/_esm5/internal/util/toSubscriber.js","webpack:///./node_modules/rxjs/_esm5/internal/util/canReportError.js","webpack:///./node_modules/rxjs/_esm5/internal/util/ObjectUnsubscribedError.js","webpack:///./node_modules/rxjs/_esm5/internal/SubjectSubscription.js","webpack:///./node_modules/rxjs/_esm5/internal/Subject.js","webpack:///./node_modules/rxjs/_esm5/internal/scheduler/QueueAction.js","webpack:///./node_modules/rxjs/_esm5/internal/scheduler/AsyncAction.js","webpack:///./node_modules/rxjs/_esm5/internal/scheduler/Action.js","webpack:///./node_modules/rxjs/_esm5/internal/Scheduler.js","webpack:///./node_modules/rxjs/_esm5/internal/scheduler/queue.js","webpack:///./node_modules/rxjs/_esm5/internal/scheduler/QueueScheduler.js","webpack:///./node_modules/rxjs/_esm5/internal/scheduler/AsyncScheduler.js","webpack:///./node_modules/rxjs/_esm5/internal/observable/empty.js","webpack:///./node_modules/rxjs/_esm5/internal/util/isScheduler.js","webpack:///./node_modules/rxjs/_esm5/internal/util/subscribeToArray.js","webpack:///./node_modules/rxjs/_esm5/internal/Notification.js","webpack:///./node_modules/rxjs/_esm5/internal/scheduled/scheduleArray.js","webpack:///./node_modules/rxjs/_esm5/internal/observable/fromArray.js","webpack:///./node_modules/rxjs/_esm5/internal/observable/throwError.js","webpack:///./node_modules/rxjs/_esm5/internal/observable/of.js","webpack:///./node_modules/rxjs/_esm5/internal/operators/observeOn.js","webpack:///./node_modules/rxjs/_esm5/internal/ReplaySubject.js","webpack:///./node_modules/rxjs/_esm5/internal/operators/filter.js","webpack:///./node_modules/rxjs/_esm5/internal/operators/map.js","webpack:///./src/@motorman/core/eventhub/eventhub.rxjs.ts","webpack:///./src/@motorman/core/eventhub/index.ts","webpack:///./src/@motorman/core/mediator/mediator.rxjs.ts","webpack:///./src/@motorman/core/mediator/index.ts","webpack:///./src/@motorman/vertices/core/sandbox.ts","webpack:///./src/@motorman/vertices/core/bootstrap.ts","webpack:///./src/@motorman/core/utilities/ds/dictionary.ts","webpack:///./src/@motorman/core/utilities/ds/stack.ts","webpack:///./src/@motorman/core/utilities/ds/queue.ts","webpack:///./src/@motorman/core/utilities/ds/index.ts","webpack:///./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js","webpack:///./node_modules/css-loader/dist/runtime/api.js","webpack:///./src/@motorman/core/director/director.rxjs.ts","webpack:///./src/@motorman/core/sandbox/sandbox.rxjs.ts","webpack:///./src/@motorman/core/index.ts","webpack:///./src/@motorman/vertices/sdk/components/backdrop/backdrop.component.ts","webpack:///./src/@motorman/vertices/sdk/components/backdrop/backdrop.component.scss?c95c","webpack:///./src/@motorman/vertices/sdk/components/backdrop/backdrop.component.scss"],"names":["DefaultNodeSandbox","element","DEFAULT_CONFIG","director","selector","datasets","decorators","services","utils","components","dConfiguration","pConfiguration","this","promise","dInitialization","pInitialization","$instances","Map","$targets","modules","configuration","then","config","resolve","bootstrap","options","environment","execute","extend","metadata","registerModule","_selector","Sandbox","_Sandbox","type","Class","set","target","startServices","call","service","registry","i","len","length","startService","metadatum","data","id","ComponentSandbox","Vertex","Vertices","Core","Facade","V","register","apply","arguments","core","configure","init","component","name","command","composeCommand","item","handler","composeExecutor","CSV","collection","fields","delimiter","$table","$values","$lines","matrix","lines","span","Object","keys","reduce","o","x","width","j","height","value","y","row","rows","col","columns","_id","field","record","get","column","line","Math","max","join","tabs","Array","map","concat","replace","csv","split","slice","array","key","datum","bind","push","Utilities","console","object","first","more","k","null","undefined","0","splat","window","setTimeout","timeout","delay","thus","params","log","clearTimeout","fn","timer","context","threshhold","scope","deferTimer","now","Date","last","invoke","c","r","random","toString","s","path","shift","drill","str","Function","interpolate$","a","b","f","val","escapeHTML","re","matcher","RegExp","string","match","result","values","url","document","createElement","href","hash","host","hostname","origin","pathname","port","protocol","search","methods","prototype","sortByKey","size","unit","$","toFixed","$bytes","$KB","$MB","$GB","$TB","$PB","bytes","KB","MB","GB","TB","PB","auto","Infinity","n","Number","round","Deferred","_resolve","_reject","Promise","exe","reject","Detective","detector","EventTarget","proxy","Proxy","e","receiver","emitter","oldValue","CustomEvent","detail","action","Reflect","detect","dispatchEvent","getPrototypeOf","dtor","getOwnPropertyDescriptor","getPropertyDescriptor","getter","setter","configurable","enumerable","defineProperty","has","hasOwnProperty","hasProperty","addEventListener","Handler","ChainOfResponsibility","responders","super","cancelable","bubbles","cancelBubble","defaultPrevented","handlers","propagate","event","next","stopPropagation","respond","stopImmediatePropagation","StrictCommand","Metadata","klass","$members","$observedAttributes","$watchers","$elements","$attrs","$listeners","$subscriptions","DEFAULT_DESCRIPTOR","writable","ElementNode","definition","members","meta","AttributeNode","TextNode","CommentNode","Directive","Pipe","Service","ns","namespace","observe","attr","descriptor","constructor","true","false","process","hasGet","hasSet","hasGetOrSet","hasGetAndSet","decorator","alias","isHost","matches","exec","tagName","MethodProxy","args","observee","observer","listener","message","trigger","Subject","observers","notify","observation","update","splice","state","$data","paths","publish","error","attach","entries","from","extendStatics","d","setPrototypeOf","__proto__","p","__extends","__","create","isFunction","_enable_super_gross_mode_that_will_cause_bad_things","Error","stack","hostReportError","err","empty","closed","useDeprecatedSynchronousErrorHandling","complete","isArray","UnsubscriptionError","UnsubscriptionErrorImpl","errors","Subscription","unsubscribe","_parentOrParents","_subscriptions","_unsubscribe","remove","index","flattenUnsubscriptionErrors","sub","add","teardown","subscription","EMPTY","tmp","indexOf","subscriptions","subscriptionIndex","errs","rxSubscriber","Symbol","_super","Subscriber","destinationOrNext","_this","syncErrorValue","syncErrorThrown","syncErrorThrowable","isStopped","destination","subscriber","_next","_error","_complete","_unsubscribeAndRecycle","SafeSubscriber","_parentSubscriber","observerOrNext","_context","__tryOrSetError","__tryOrUnsub","wrappedComplete","parent","observable","noop","pipeFromArray","fns","input","prev","Observable","subscribe","_isScalar","_subscribe","lift","operator","source","sink","nextOrObserver","toSubscriber","_trySubscribe","_a","closed_1","canReportError","warn","forEach","promiseCtor","getPromiseCtor","pipe","operations","_i","toPromise","ObjectUnsubscribedError","ObjectUnsubscribedErrorImpl","SubjectSubscription","subject","subscriberIndex","SubjectSubscriber","hasError","thrownError","copy","asObservable","AnonymousSubject","QueueAction","scheduler","work","schedule","flush","_execute","requestAsyncId","AsyncAction","pending","recycleAsyncId","setInterval","clearInterval","errored","errorValue","actions","Action","Scheduler","SchedulerAction","queue","QueueScheduler","AsyncScheduler","delegate","active","scheduled","emptyScheduled","isScheduler","NotificationKind","scheduleArray","fromArray","dispatch","Notification","kind","hasValue","do","accept","toObservable","pop","of","createNext","undefinedValueNotification","createError","createComplete","completeNotification","ObserveOnSubscriber","arg","notification","scheduleMessage","ObserveOnMessage","ReplaySubject","bufferSize","windowTime","POSITIVE_INFINITY","_events","_infiniteTimeWindow","_bufferSize","_windowTime","nextInfiniteTimeWindow","nextTimeWindow","ReplayEvent","_getNow","_trimBufferThenGetEvents","eventsCount","spliceCount","time","FilterOperator","predicate","thisArg","FilterSubscriber","count","MapOperator","project","MapSubscriber","initializations","initialized","channels$","channel","filterChannel","mapData","TypeError","in","publishers","TemplateSubject","sandbox","repository","DocumentFragment","digestion","template","content","events","appendChild","whole","$1","$2","charCodeAt","html","collectEventTypes","encodePropertyTokens","interpolate","innerHTML","childNodes","StateSubject","states","peek","MutationManager","MutationObserver","instance","changes","mutation","addedNodes","removedNodes","nodes","node","tParent","parseNode","attributeName","getAttributeNode","operation","hasAttribute","attributes","childList","characterData","subtree","attributeOldValue","characterDataOldValue","disconnect","EventManager","$events","handleAll","parentElement","any","recursive","Event","isSameNode","handleAny","property","full","method","clear","emit","removeEventListener","details","NodeSandbox","ElementProxy","NamedNodeMapProxy","AttributeProxy","current","nodeValue","deleteProperty","ownerElement","spec","old","t","m","ElementSandboxState","delegations","mutations","attrs","$classes","classList","$dataset","dataset","handleNodeRemoved","handleChildrenRemoved","handleChildRemoved","handleTemplateUpdate","handleStateUpdate","connect","root","child","AttributeSandboxState","attribute","owner","TextSandboxState","CommentSandboxState","PipeSandboxState","ServiceSandboxState","MicroserviceSandboxState","IoTSandboxState","SandboxContext","select","Bootstrap","dEnvironment","pEnvironment","$processed","pipeNodeHandler","nodeProcessors","processElementNode","processTextNode","processCommentNode","env","bootstrapServices","$services","bootstrapService","routers","RouterSandbox","router","$routers","bootstrapRouter","cor","isConnected","parentNode","previousSibling","previous","nextSibling","firstChild","nodeType","occupants","occupee","$occupants","schema","slot","cloneNode","addOccupant","getOwnerInstance","parentData","decorateElement","processAttributeNode","Node","ATTRIBUTE_NODE","$attributes","isBinding","test","isReporter","hasBinding","hasReporter","bindable","reportable","text","$texts","initializeInstance","comment","$comments","$text","TEXT_NODE","COMMENT_NODE","Stack","JSON","stringify","json","parse","serialize","deserialize","valueOf","Queue","memo","isOldIE","Boolean","all","atob","getTarget","styleTarget","querySelector","HTMLIFrameElement","contentDocument","head","stylesInDom","modulesToDom","moduleId","list","part","css","media","sourceMap","addStyle","insertStyleElement","style","nonce","setAttribute","insert","textStore","replaceText","replacement","filter","applyToSingletonTag","obj","styleSheet","cssText","cssNode","createTextNode","removeChild","insertBefore","applyToTag","removeAttribute","btoa","unescape","encodeURIComponent","singleton","singletonCounter","styleIndex","removeStyleElement","newObj","module","exports","base","newList","useSourceMap","cssMapping","sourceMapping","base64","sourceURLs","sources","sourceRoot","cssWithMappingToString","mediaQuery","handleState","stateHandlers","channels","ActionHandlers","StateHandlers","Dependencies","dependencies","actionHandlers","detach","BackdropComponent","handleRequest","handleDismiss","api","__esModule","default","exported","locals","___CSS_LOADER_API_IMPORT___"],"mappings":"iGA6DA,SAASA,EAAmBC,GAAW,OAAOA,ECd9C,IACIC,EAAiB,CACjBC,SAFW,IDUf,QCPIC,SAAU,WACVC,SAAU,gBAEVC,WAAY,CAAEC,SDOlB,SAAgCC,GAAS,OAAOA,GCPIC,WAAY,IAGhE,MAAM,EAYF,cAXQ,KAAAC,eAAgC,IAAI,IACpC,KAAAC,eAA+BC,KAAKF,eAAeG,QACnD,KAAAC,gBAAiC,IAAI,IACrC,KAAAC,gBAAgCH,KAAKE,gBAAgBD,QACrD,KAAAL,MAAmB,IAAI,IAExB,KAAAQ,WAA4B,IAAIC,IAChC,KAAAC,SAA2B,IAAID,IAC/B,KAAAE,QAAe,GACf,KAAAC,cAAqBlB,EAGxB,IAAI,eAAES,EAAc,gBAAEI,GAAoBH,KAQ1C,OANAD,EACKU,KAAOC,GAAWV,KAAKE,gBAAgBS,QAAQD,IAEpDP,EACKM,KAAOC,GAAWV,KAAKY,UAAUF,IAE/BV,KAGX,KAAKa,GACD,IAAI,cAAEL,GAAkBR,KAExB,OAAOA,KAGX,UAAUU,GACN,IAAI,YAAEI,EAAW,UAAEF,GAAcF,EACjCE,EAAUG,QAAQf,MAGtB,UAAUU,GAIN,OAHAV,KAAKJ,MAAMoB,OAAOhB,KAAKQ,cAAeE,GAEtCV,KAAKF,eAAea,QAAQX,KAAKQ,eAC1BR,KAAKJ,MAAMoB,OAAO,GAAKhB,KAAKQ,eAGvC,SAASS,GACL,IAAI,eAAElB,GAAmBC,KAEzB,OADAD,EAAeU,KAAOC,GAA2BV,KAAKkB,eAAeR,EAAQO,IACtEjB,KAEH,eAAeU,EAAwBO,GAC3C,IAAI,QAAEV,GAAYP,MACZR,SAAU2B,EAAWC,QAASC,GAAaX,GAC7C,KAAEY,EAAI,SAAE9B,EAAW2B,EAAS,MAAEI,EAAK,QAAEH,EAAUC,GAAaJ,EAKhE,OAHMV,EAAQe,KAAQf,EAAQe,GAAQ,IAAIjB,KAC1CE,EAAQe,GAAME,IAAIhC,EAAU,OAAF,wBAAQyB,GAAQ,CAAEK,OAAM9B,WAAU+B,QAAOH,aAE5DpB,KAaX,IAAIa,GACA,IAAIH,EAASV,KAAKQ,cACdI,EAAYF,EAAOE,UACnBa,EAASZ,EAAQY,OAGrBzB,KAAK0B,gBACLd,EAAUe,KAAKjB,EAAQe,EAAQzB,MAGnC,gBACI,IAAI,cAAEQ,EAAa,QAAED,GAAYP,MAC3B4B,QAASC,GAAatB,EAC5B,IAAK,IAAIuB,EAAI,EAAGC,EAAMF,EAASG,OAAQF,EAAIC,EAAKD,IAAK9B,KAAKiC,aAAaJ,EAASC,GAAIA,EAAGD,GACvF,OAAO7B,KAEH,aAAakC,EAA4BJ,EAAWb,IAe5D,WAAW5B,EAAS8C,EAAMC,GACtB,IAAK/C,IAAY+C,EAAI,OAAO,KAG5B,IAAM5B,cAAeE,GAAWV,MAC5B,SAAET,EAAQ,WAAEG,GAAegB,GACzBb,WAAYwC,EAAmB,GAA4B3C,EAgBjE,MARc,CACV0C,GAAIA,EAEJ/C,QAASA,EACT8C,KAAMA,ICzKlB,IA6BIG,EAAS,IAAI,SAAUC,EAASC,EAAMC,GAOtC,OALQA,EAAOd,MAAM,SAASe,IAC1B,OAAI1C,gBAAgB0C,EAAU,IAAMH,EAASC,EAAMC,GAC5CC,EAAEC,SAASC,MAAMF,EAAGG,aAC5B,IAAIL,GALE,CAQV,GArCU,SAAgBM,GAuBzB,OALA9C,KAAKJ,MAAQkD,EAAKlD,MAClBI,KAAKU,OAhBL,WACI,OAAOoC,EAAKC,UAAUH,MAAME,EAAMD,YAgBtC7C,KAAK2C,SAbL,SAAkB1B,GAEd,OADA6B,EAAKH,SAAS1B,GACPjB,MAYXA,KAAKY,UATL,SAAmBC,GAEf,OADAiC,EAAKE,KAAKnC,GACHb,MASJA,Q,uBClBC,IAAI,cAAgC,IAE5C,eAAeiD,EAAgBC,GAE3B,OADc,IAAI,IAAQD,EAAWC,GAGzC,gBAAgBD,EAAgBC,GAC5B,IAAIC,EAAUnD,KAAKoD,eAAeH,EAAWC,IAAO,QAAEnC,GAAYoC,EAClE,OAAOpC,EAEX,YAAYkC,EAAgBI,GACxB,IAAI,KAAEH,GAASG,EACXC,EAAUtD,KAAKuD,gBAAgBN,EAAWC,GAC9C,OAD+D,OAAH,wBAAQG,GAAI,CAAEC,c,WCpBlF,qoB,6BCAA,IAAIE,EAAM,IAAI,MAGV,UAAUC,EAAYC,EAAQC,GAM1B,IAAIC,EAAS,IAAIvD,IACbwD,EAAU,IAAIxD,IACdyD,EAAS,IAAIzD,IACb0D,EAAS,GACTC,EAAQ,GACRC,EAAO,EAENP,IAAQA,EAASQ,OAAOC,KAAMV,EAAWW,OAAQ,CAACC,EAAGC,IAAO,OAAD,wBAAMD,GAAMC,GAAM,MAElF,IAAK,IAAIxC,EAAI,EAAGyC,EAASd,EAAWzB,OAAQF,EAAIyC,EAAQzC,IACxD,IAAK,IAAI0C,EAAI,EAAGC,EAASf,EAAO1B,OAAYwC,EAAIC,EAAQD,KAC9D,SAAiBE,GAAQJ,EAAGK,GAAIC,EAAK9C,EAAG+C,EAAMC,EAAKN,EAAGO,GAC5C,IAAIC,EAAMV,EAAGW,EAAQH,EACjBI,EAAStB,EAAOuB,IAAIH,IAAQ,CAAEA,OAC9BI,EAASvB,EAAQsB,IAAIL,IAAQ,GAC7BO,EAAOvB,EAAOqB,IAAIb,IAAM,IAExB,CAAE,WAAa,IAAQI,KAASA,EAAQ,IAC5CX,EAAOO,GAAKP,EAAOO,IAAM,GACzBP,EAAOO,GAAGK,GAAKO,EAAOD,GAASG,EAAOd,GAAKe,EAAKV,GAAKD,EAErDd,EAAOpC,IAAIwD,EAAKE,GAChBrB,EAAQrC,IAAIsD,EAAKM,GACjBtB,EAAOtC,IAAI8C,EAAGe,GAEdpB,EAAOqB,KAAKC,IAAI3C,MAAM,KAAM,CAAEqB,EAAMa,EAAI9C,OAAQ,GAAG0C,IAAQ1C,SAC3DgC,EAAMM,GAAKe,EAAKG,KAAK,KAf/B,CAiBS/B,EAAW3B,GAAI4B,EAAOc,IAAM,CAAC1C,EAAG0C,GAAIf,EAAW3B,GAAIA,EAAG2B,EAAYC,EAAOc,IAE5E,IAAIiB,EAAOC,MAAM9C,MAAM,KAAM,CAAEZ,OAAQiC,IACnCN,EAAY,CACZ,KAAM8B,EAAKE,IAAK,IAAM,MACtB,EAAMF,EAAKE,IAAK,IAAM,KACtB,UAAa,IACdhC,GAAY6B,KAAK,IAKpB,MAHU,CADI9B,EAAO8B,KAAK,MACJI,OAAO5B,GAAOwB,KAAK,MAC3BK,QAAQ,OAAQ,IAAIlC,KAKtC,MAAMmC,GACF,IAAI9B,EAAQ8B,EAAIC,MAAM,WAAarC,GAAWM,EAAON,EAASA,EAAOqC,MAAM,QAejF,OAfiG/B,EAAMgC,MAAM,GACvF5B,OAEhB,SAAmBV,EAAQuC,EAAOZ,EAAMT,EAAKZ,GACzC,IAAIK,EAAIX,EAAOU,OAGf,SAAkBiB,EAAMhB,EAAG6B,EAAKpE,EAAG4B,GAC/B,IAAiCgB,EAApBW,EAAKU,MAAM,QAAwBjE,GAAIqE,EAAQ,CAAE,CAACD,GAAMxB,GACrE,OAAO,OAAP,wBAAYL,GAAM8B,IALUC,KAAKpG,KAAMqF,GAAO,IAQlD,OAPAY,EAAMI,KAAKhC,GAOJ4B,GAXuBG,KAAKpG,KAAM0D,GAAS,MAkF9D,MAAM4C,EAIF,cACI,OAJJ,KAAA9C,IAAWA,EACX,KAAA+C,QAAeA,QAGJvG,KAGX,QAEA,OAAOwG,EAAQC,KAAWC,GACtB,IAAIrC,EAAIH,OAAOC,KAAKsC,GAAOrC,OAAQ,CAACC,EAAGsC,KAAOtC,EAAEsC,GAAKF,EAAME,GAAItC,GAAImC,GACnE,OAAIE,EAAK1E,OAAehC,KAAKgB,OAAOwF,KAAWE,GACxCrC,EAGX,GAAGK,GAEC,OADW,CAAEkC,MAAM,EAAMC,WAAW,EAAM,IAAI,EAAMC,GAAG,GAASpC,GAIpE,QAAQpB,KAAYyD,GAEhB,OADaC,OAAOC,WAAW3D,KAAYyD,GAI/C,QAAQzD,KAAYyD,GAEhB,OADa/G,KAAKkH,QAAQ5D,EAAS,KAAMyD,GAa7C,SAASzD,EAAS6D,KAAUJ,GACxB,IAAIK,EAAOpH,KAAMkH,EAAUE,EAAKF,SAEhC,SAAS1F,KAAO6F,GACZ,IAAMH,EAAU,OAAOX,QAAQe,IAAI,SACnChE,EAAQ3B,KAAK3B,QAASqH,GACtBH,EAAUE,EAAKF,QAAQ1F,EAAK2F,KAAUJ,KALGI,KAAUJ,GAavD,OANA,WAGI,OAFAQ,aAAaL,KACbA,EAAU,OAOlB,SAASM,EAAIL,GACT,IAAIM,EAAQ,KAQZ,OANA,YAAsBV,GAClB,IAAIW,EAAU1H,KACduH,aAAaE,GACbA,EAAQR,WAAY,IAAMO,EAAG7F,KAAK+F,KAAYX,GAAQI,IAM9D,SAASK,EAAIG,EAAYC,GACrB,IAA0CC,EAAtCF,EAAaA,GAAc,IAW/B,OATA,YAAsBZ,GAClB,IAAIW,EAAUE,GAAS5H,KAAM8H,GAAO,IAAKC,KAASC,EAAOF,EACrDG,EAAS,KAAQT,EAAG7F,KAAK+F,KAAYX,GAAQiB,EAAOF,GAExD,IAAKE,GAAQF,GAH0DE,EAAOL,EAGnD,OAAOM,IAClCV,aAAaM,GACbA,EAAaZ,WAAWgB,EAAQN,IAMxC,OAKI,MAAO,uCAAuC9B,QAAQ,SAJtD,SAAiBqC,GACjB,IAAIC,EAAoB,GAAhB7C,KAAK8C,SAAgB,EAC7B,OADyC,KAALF,EAAWC,EAAS,EAAJA,EAAU,GACrDE,SAAS,OAKtB,WAAWC,GACP,OAAOA,EAAEzC,QAAQ,WAAW,SAAUqC,GAClC,MAAO,CACH,IAAK,QACL,IAAK,SACL,IAAK,OACL,IAAK,QACPA,MAKV,MAAM/F,EAAWoG,GACb,IAAIpE,EAAOoE,EAAKxC,MAAM,KAAMG,EAAM/B,EAAKqE,QAEvC,GAAKrG,EACL,OAAK+D,EAEElG,KAAKyI,MAAOtG,EAAK+D,GAAM/B,EAAKqB,KAAK,MAFvBrD,EAKrB,aAAauG,GACT,OAAQrE,GAAM,IAAKsE,SAAS,kCAAkCD,QAAY/G,KAAK0C,GAEnF,YAAYqE,GAER,OAAQrE,GAAMrE,KAAK4I,aAAaF,EAAlB1I,CAAuBqE,GAMzC,aAAaqE,GACT,OAAQrE,GAAMqE,EAAI7C,QAAQ,gBAAiB,CAACgD,EAAGC,IACmE,GAAtG,IAAIH,SAAS,IAAK,kBAAkBG,6BAA6BA,qBAAqBA,QAAmBC,CAAE1E,IAO3H,kBAAkBqE,GACd,OAAQrE,GAAMqE,EAAI7C,QAAQ,gBAAiB,CAACgD,EAAGC,KAC3C,IAAwGE,EAAM,GAAtG,IAAIL,SAAS,IAAK,kBAAkBG,6BAA6BA,qBAAqBA,QAAmBC,CAAE1E,GACnH,OAAOrE,KAAKiJ,WAAWD,KAQ/B,mBAAmBN,GACf,OAAQrE,GACGqE,EAAI7C,QAAQ,gBAAiB,CAACgD,EAAGC,KACpC,IAAIE,EAAM,GAAG3E,EAAEyE,GACf,OAAO9I,KAAKiJ,WAAWD,KASnC,qBAAqBN,GACjB,OAAO,SAAqBrE,GACxB,OAAOqE,EAAI7C,QAAQ,iBAAiB,SAAUgD,EAAGC,GAE7C,MADU,GAAGzE,EAAEyE,OAS3B,YAAYJ,GACJA,EAAMA,GAAO,GAAjB,IACIQ,EAAK,wBACLC,EAAU,IAAIC,OAAOV,EAAI7C,QAAQqD,EAAI,cAEzC,OAAO,SAAmBG,GACtB,IAAKA,EAAOC,MAAMH,GAAU,OAAO,EACnC,IACII,GADAF,EAASA,GAAU,IACHC,MAAMH,GACtBhF,EAAOuE,EAAIY,MAAMJ,GACjBM,EAASD,EAAOvD,MAAM,GACtBL,EAAM,GAEV,GAAIxB,GAAQqF,EACR,IAAK,IAAI1H,EAAI,EAAGC,EAAMoC,EAAKnC,OAAQF,EAAIC,EAAKD,IAAK,CAC7C,IAAIoE,EAAM/B,EAAKrC,GAAG+D,QAAQ,UAAW,IACjCmD,EAAMQ,EAAO1H,GACboE,IAAQ8C,IAAKrD,EAAIO,GAAO8C,GAIpC,OAAOrD,GAIf,SAAS8D,GACL,IAAIZ,EAAIa,SAASC,cAAc,KAG/B,OAFAd,EAAEe,KAAOH,EAEF,CACHI,KAAMhB,EAAEgB,KACRC,KAAMjB,EAAEiB,KACRC,SAAUlB,EAAEkB,SACZH,KAAMf,EAAEe,KACRI,OAAQnB,EAAEmB,OACVC,SAAUpB,EAAEoB,SACZC,KAAMrB,EAAEqB,KACRC,SAAUtB,EAAEsB,SACZC,OAAQvB,EAAEuB,QAIlB,UAAUzD,EAAGkC,EAAGC,GAIZ,OAAID,EAAElC,GAAKmC,EAAEnC,GAAY,EACrBkC,EAAElC,GAAKmC,EAAEnC,IAAY,EAClB,EAIX,mBAAmB0D,EAASxB,EAAGC,GAI3B,IAAIhH,EAAI,EACR,IADWuI,EAAU3E,MAAM4E,UAAUtE,MAAMrE,KAAK0I,GAAW,GAAK,GACnD,IAANvI,GAAWuI,EAAQrI,QAAQF,EAAIuI,EAAQ7B,QAAQ7G,KAAK3B,KAAM6I,EAAGC,GACpE,OAAOhH,EAGX,gBAAgBqC,EAAM0E,EAAGC,GAerB,IAAIhH,EAAI,EACR,IADWqC,EAAOuB,MAAM4E,UAAUtE,MAAMrE,KAAKwC,GAAQ,GAAK,GAC7C,IAANrC,GAAWqC,EAAKnC,QAAQF,EAAI9B,KAAKuK,UAAU5I,KAAK3B,KAAMmE,EAAKqE,QAASK,EAAGC,GAC9E,OAAOhH,EAGX,YAAY0I,EAAMC,EAAO,QAgBrB,IAfA,IAAIC,EAAI1K,KAAK2K,QAAQvE,KAAKpG,MACtB4K,EAASF,EAAEF,GAAQ,GAAIK,EAAMH,EAAEE,EAAS,MAAOE,EAAMJ,EAAEG,EAAM,MAAOE,EAAML,EAAEI,EAAM,MAAOE,EAAMN,EAAEK,EAAM,MAAOE,EAAMP,EAAEM,EAAM,MAI5HxB,EAAS,CAAE0B,MAHH,GAAGN,UAGOO,GAHc,GAAGN,OAGbO,GAH4B,GAAGN,OAG3BO,GAH0C,GAAGN,OAGzCO,GAHwD,GAAGN,OAGvDO,GAHsE,GAAGN,OAGrEO,UAAM3E,GAC5C0C,EAAS,CAAEkB,KAAM,GAAI/F,MAAO+G,KAC5BhM,EAAW,CACf,CAAEgL,KAAM,QAAS/F,MAAOkG,GACxB,CAAEH,KAAM,KAAM/F,MAAOmG,GACrB,CAAEJ,KAAM,KAAM/F,MAAOoG,GACrB,CAAEL,KAAM,KAAM/F,MAAOqG,GACrB,CAAEN,KAAM,KAAM/F,MAAOsG,GACrB,CAAEP,KAAM,KAAM/F,MAAOuG,IAEZ1B,EAAO7E,MAAQ,MAAS,GAAKjF,EAASuC,QAASuH,EAAS9J,EAAS+I,QAK1E,OAJAgB,EAAOgC,KAAO,GAAGjC,EAAO7E,SAAS6E,EAAOkB,OAIjCjB,EAAOiB,GAGlB,QAAQiB,GAAK,OAAOC,OAAQrG,KAAKsG,QAAQF,EAAI,OAAS,OAEtD,OAAOA,GAAK,SAAUA,GCtZ1B,MAAMG,EAKF,cAJQ,KAAAC,SAAqB,OACrB,KAAAC,QAAoB,OACrB,KAAA9L,QAAsB,IAAI+L,QAAYhM,KAAKiM,IAAI7F,KAAKpG,OAInD,IAAIW,EAASuL,GACjBlM,KAAK8L,SAAWnL,EAChBX,KAAK+L,QAAUG,EAGnB,QAAQ/J,GAEJ,OADAnC,KAAK8L,SAAS3J,GACPnC,KAAKC,QAEhB,OAAOkC,GAEH,OADAnC,KAAK+L,QAAQ5J,GACNnC,KAAKC,SCIpB,MAAMkM,EAMF,YAAYzE,EAAc0E,GAL1B,KAAA3K,OAAsB,IAAI4K,YAC1B,KAAAC,MAAsB,IAAIC,MAAO,IAAI,QAAiBvM,MACtD,KAAA0H,QAAe,KACf,KAAA0E,SAAsB,CAAE,OAAOI,MAGvBJ,EAAWA,GAAYpM,KAAKoM,SAEhCpM,KAAK0H,QAAUA,EACf1H,KAAKoM,SAAWA,EAGpB,IAAI3K,EAAayE,EAAaxB,EAAY+H,GACtC,IAAMhL,OAAQiL,EAAO,MAAEJ,EAAK,SAAEF,GAAapM,KACvC2M,EAAWL,EAAMpG,GAEjBsG,EAAI,IAAII,YAAY1G,EAAK,CAAE2G,OADlB,CAAEC,OAAQ,MAAOH,WAAUjI,WAEpC6E,EAASwD,QAAQvL,IAAIC,EAAQyE,EAAKxB,EAAO+H,GAE7C,OAAIE,IAAajI,EAAc6E,GAE/B6C,EAASY,OAAOR,GAChBE,EAAQO,cAAcT,GACfjD,GAGH,sBAAsB7B,EAAcxB,GACxC,IAAIoE,EAAYpG,OAAOgJ,eAAexF,GAClCyF,EAAOjJ,OAAOkJ,yBAAyB1F,EAASxB,GAEpD,OAAKiH,GAAU7C,EAAkBtK,KAAKqN,sBAAsB/C,EAAWpE,GAChEiH,EAGH,UAAUjH,GACd,IAAI,QAAEwB,EAAO,MAAE4E,EAAK,OAAE7K,GAAWzB,KAC7BmN,EAAOnN,KAAKqN,sBAAsB3F,EAASxB,GAC3CoH,EAASH,GAAQA,EAAKhI,IACtBoI,EAASJ,GAAQA,EAAK3L,IAGtBd,EAAS,OAAH,wBADK,CAAE8M,cAAc,EAAMC,YAAY,IACvB,CAAEtI,IAE5B,SAAae,GAET,OADYoH,EAASA,EAAO3L,KAAK+F,GAAW4E,EAAMpG,IAHjBE,KAAKsB,EAASxB,GAAM1E,IAOzD,SAAa0E,EAAKxB,GACV6I,GAAQA,EAAO5L,KAAK+F,EAAShD,GACjC4H,EAAMpG,GAAOxB,GATiD0B,KAAKsB,EAASxB,KAYhFhC,OAAOwJ,eAAehG,EAASxB,EAAKxF,GAGxC,YAAYgH,EAAcxB,GACtB,IAAIoE,EAAYpG,OAAOgJ,eAAexF,GAClCiG,EAAMjG,EAAQkG,eAAe1H,GAEjC,OAAKyH,GAASrD,EAAkBtK,KAAK6N,YAAYvD,EAAWpE,GACrDyH,EAGX,UAAUzH,EAAa5C,GACnB,IAAI,OAAE7B,EAAM,MAAE6K,EAAK,QAAE5E,GAAY1H,KAMjC,OAJAsM,EAAMpG,GAAOwB,EAAQxB,GACrBlG,KAAK+C,UAAUmD,GACX5C,GAAS7B,EAAOqM,iBAAiB5H,EAAyC5C,GAAS,GAEhFtD,MCpGf,uG,6BCAA,MAAM+N,EACF,QAAQvB,GAKJ,OAAOA,EAAEK,QAmBjB,MAAMmB,UAA8BtI,MAGhC,YAAYhF,EAAQuN,EAAwB,IACxCC,QAHM,KAAAxN,OAAc,CAAEyN,YAAY,EAAOC,SAAS,GAIlD,IAAI,QAAEA,EAAO,aAAEC,EAAY,WAAEF,EAAU,iBAAEG,GAAqB5N,EAK9D,OAHAV,KAAKU,OAAS,OAAH,wBAAQV,KAAKU,QAAWA,GACnCV,KAAKqG,QAAQ4H,GAENjO,KAGD,QAAQwM,EAAgB1K,EAAY,EAAGyM,EAAsBvO,KAAKgG,SACxE,IAAI1C,EAAUiL,EAASzM,IAAM,IAAIiM,EAC7BxE,EAASvJ,KAAKwO,UAAUhC,EAAGlJ,EAASxB,EAAGyM,GACvCE,EAAQ,IAAI7B,YAAYJ,EAAElL,KAAM,CAAEuL,OAAQtD,IAAWmF,EAAOH,EAASzM,EAAI,GAG7E,OADI0K,EAAE6B,cAAcI,EAAME,kBACtBnC,EAAE6B,aAAqBI,EACvBC,EAAa1O,KAAKe,QAAQ0N,IAAS3M,GAChC2M,EAGD,UAAUjC,EAAoBlJ,EAAkBxB,EAAWyM,GACjE,GAAI/B,EAAE6B,aAAc,OAAO7B,EAC3B,IAAI,OAAE9L,GAAWV,KACb0E,EAAQpB,EAAQsL,QAAQjN,KAAK2B,EAASkJ,GACtC6B,GAAgB,CAAE,WAAa,EAAM,OAAS,GAAS3J,GAK3D,OAHIhE,EAAOyN,YAAcE,IAAgB7B,EAAEmC,kBAAmBnC,EAAEqC,4BAGzDnK,EAGX,MAAMpB,KAAqBiL,GAEvB,OADAvO,KAAKqG,KAAK/C,KAAYiL,GACfvO,KAGX,QAAQwM,GAGJ,OAFYxM,KAAKe,QAAQyL,IC5CjC,MAAMsC,UAjBN,MAII,YAAYpH,EAASoF,GAHb,KAAApF,QAAe,KACf,KAAAoF,OAAiB,GAGrB9M,KAAK0H,QAAUA,EACf1H,KAAK8M,OAASA,EAGlB,WAAW/F,GACP,IAAI,QAAEW,EAAO,OAAEoF,GAAW9M,KAE1B,OADY0H,EAAQoF,MAAW/F,KAMvC,c,oBAEW,KAAAhG,QAAU,IAAIgG,IAAiBmH,MAAMnN,WAAWgG,ICtBxCsF,Y,WCHnB,yG,6BCAA,g1B,6BCAA,8fAiEA,MAAM0C,EASF,YAAsBC,GAAA,KAAAA,QARf,KAAAC,SAA6B,IAAI5O,IACjC,KAAA6O,oBAAwC,IAAI7O,IAC5C,KAAA8O,UAA8B,IAAI9O,IAClC,KAAA+O,UAA8B,IAAI/O,IAClC,KAAAgP,OAA2B,IAAIhP,IAC/B,KAAAiP,WAA+B,IAAIjP,IACnC,KAAAkP,eAAmC,IAAIlP,IAG1C,IAAI,SAAEY,GAAa+N,GACf,SAAEC,EAAQ,oBAAEC,EAAmB,UAAEC,EAAS,UAAEC,EAAS,OAAEC,EAAM,WAAEC,EAAU,eAAEC,GAAoBtO,GAAY,GAW/G,OATAjB,KAAKiP,SAAWA,GAAYjP,KAAKiP,SACjCjP,KAAKkP,oBAAsBA,GAAuBlP,KAAKkP,oBACvDlP,KAAKmP,UAAYA,GAAanP,KAAKmP,UACnCnP,KAAKoP,UAAYA,GAAapP,KAAKoP,UACnCpP,KAAKqP,OAASA,GAAUrP,KAAKqP,OAC7BrP,KAAKsP,WAAaA,GAActP,KAAKsP,WACrCtP,KAAKuP,eAAiBA,GAAkBvP,KAAKuP,eAE7CP,EAAM/N,SAAWjB,KACVA,MAMf,IAAIwP,EAAqB,CAAEC,UAAU,EAAMjC,cAAc,EAAMC,YAAY,GAwB3E,SAASiC,EAAYC,EAAqD9O,EAAe,IACrF,IAAIsB,EAAO,OAAH,wBAAQwN,GAAU,CAAErO,KAAM,UAAW4E,IAAK,WAAYrF,UAAS+O,QAAS,KAEhF,OAAO,SAAarO,GAEhB,OADAA,EAAMsO,KAAO1N,EACN,OAAP,wBAAYA,GAAI,CAAEZ,WAG1B,SAASuO,EAAcH,GACnB,IAAIxN,EAAO,OAAH,wBAAQwN,GAAU,CAAErO,KAAM,YAAa4E,IAAK,aAEpD,OAAO,SAAa3E,GAChB,OAAO,OAAP,wBAAYY,GAAI,CAAEZ,WAG1B,SAASwO,EAASJ,GAId,IAAI,SAAEnQ,EAAW,SAAYmQ,EACzBxN,EAAO,OAAH,wBAAQwN,GAAU,CAAErO,KAAM,OAAQ9B,aAE1C,OAAO,SAAa+B,GAChB,OAAO,OAAP,wBAAYY,GAAI,CAAEZ,WAG1B,SAASyO,EAAYL,GAMjB,IAAI,SAAEnQ,EAAW,YAAemQ,EAC5BxN,EAAO,OAAH,wBAAQwN,GAAU,CAAErO,KAAM,UAAW9B,aAE7C,OAAO,SAAa+B,GAChB,OAAO,OAAP,wBAAYY,GAAI,CAAEZ,WAG1B,SAAS0O,EAAUN,GACf,IAAI,KAAErO,GAASqO,EAMf,MALU,CACN,QAASI,EAAS,OAAD,wBAAMJ,GAAU,CAAEnQ,SAAU,WAC7C,WAAYwQ,EAAY,OAAD,wBAAML,GAAU,CAAEnQ,SAAU,eACpD8B,GAIP,SAAS4O,KACT,SAASC,EAAQR,GACb,IAAIxN,EAAO,OAAH,wBAAQwN,GAAU,CAAErO,KAAM,YAElC,OAAO,SAAaC,GAChB,IAAMa,GAAI5C,EAAW+B,EAAM2B,MAASf,EACpC,OAAO,OAAP,wBAAYA,GAAI,CAAE3C,WAAU+B,WAMpC,IAAI7B,EAAa,IAAI,cAjFrB,MACI,UAAU8G,EAAa4J,EAAYjM,EAAiBiM,EAAGrK,MAAM,MACzD,KAAO5B,EAAKnC,QAAawE,EAAQrC,EAAK,MAAMqC,EAAQrC,EAAKqE,SAAY,IACrE,QAAS,IAAKG,SAAS,sBAAsByH,KAApC,GAEb,OAAO5J,EAAQ6J,EAAWnK,EAAKxB,GACd1E,KAAKqQ,UAAU7J,EAAQ6J,GAApC,IACI7O,EAAM,IAAImH,SAAS,QAAS,UAAU0H,cAEtClL,EAAM,IAAIwD,SAAS,iBAAiB0H,MAGxC,OADA7O,EAAIkD,GACGS,IAEX,KAAKqB,EAAQN,EAAK2J,GACd7P,KAAKqQ,UAAU7J,EAAQ,gBACvBA,EAAOqJ,KAAKD,QAAQ1J,GAAO2J,IAiEb,c,oBAQlB,KAAAS,QAAWC,IACP,IAAInJ,EAAOpH,KAEX,OAAO,SAAayB,EAAayE,EAAasK,EAAkB,IAC5D,IAAI,YAAEC,GAAgBhP,GAClB,MAAEiD,GAAU8L,EACZvP,EAAW,IAAI8N,EAAS0B,GAExB3D,GADA0D,EAAa,OAAH,wBAAQA,GAAehB,GACxB,CAAEkB,KAAM,WAAYC,MAAO,cAAqBjM,IACzDkM,EAAUxJ,EAAK0F,GAAQyD,GACvBpO,EAAOyO,KAAW/N,WAGtB,OADA5B,EAASgO,SAASzN,IAAI0E,EAAK/D,GACpBqO,IAGf,SAASD,GAGL,OAAO,SAAa9O,EAAayE,EAAasK,EAAkB,IAC5D,IAAI,YAAEC,GAAgBhP,GAClB,IAAE0D,EAAG,IAAE3D,GAAQgP,EAAYK,IAAW1L,EAAK2L,IAAWtP,EAAKuP,EAAeF,GAAUC,EAASE,EAAgBH,GAAUC,EACvH7P,EAAW,IAAI8N,EAAS0B,GAExBtO,EAAO,CAAE8O,UAAW,qBAAsB/N,KADlCqN,GAAQrK,EACgCgL,MADlBhL,EACyB2K,SAAQC,SAAQC,cAAaC,gBAMxF,OAJKD,IAAaP,EAAWf,UAAW,GACxCxO,EAASgO,SAASzN,IAAI0E,EAAK/D,GAC3BlB,EAASiO,oBAAoB1N,IAAI0E,EAAK/D,GAE/BA,GAGf,SAASoO,GAGL,OAAO,SAAa9O,EAAayE,EAAasK,EAAkB,IAC5D,IAAI,YAAEC,GAAgBhP,GAEhBiD,MAAOpB,IADTkN,EAAa,OAAH,wBAAQA,GAAehB,GACZgB,GACrBvP,EAAW,IAAI8N,EAAS0B,GAExBtO,EAAO,CAAE8O,UAAW,qBAAsB/N,KADnCgD,EACyCqK,OAAMjN,WAK1D,OAHArC,EAASgO,SAASzN,IAAI0E,EAAK/D,GAC3BlB,EAASkO,UAAU3N,IAAI+O,EAAMpO,GAEtBA,GAIf,QAAQ3C,GACJ,IACI2R,EAAuB,SAAb3R,EAEd,OAAO,SAAaiC,EAAayE,EAAasK,EAAkB,IAC5D,IAAI,YAAEC,GAAgBhP,EAElBR,GADAuP,EAAa,OAAH,wBAAQA,GAAehB,GACtB,IAAIT,EAAS0B,IAExBtO,EAAO,CAAE8O,UAAW,oBAAqB/N,KADlCgD,EACwCA,MAAK1G,WAAU2R,UAKlE,OAHAlQ,EAASgO,SAASzN,IAAI0E,EAAK/D,GAC3BlB,EAASmO,UAAU5N,IAAI0E,EAAK/D,GAErBqO,GAIf,KAAKhR,GACD,IAEI4R,EADK,IAAIhI,OAAO,kBACHiI,KAAK7R,IAAa8J,EAAOgI,EAASf,GAASa,EACxDD,EAAsB,SAAZG,EAEd,OAAO,SAAa7P,EAAayE,EAAasK,EAAkB,IAC5D,IAAI,YAAEC,GAAgBhP,EAElBR,GADAuP,EAAa,OAAH,wBAAQA,GAAehB,GACtB,IAAIT,EAAS0B,IAExBtO,EAAO,CAAE8O,UAAW,sBAAuB/N,KADpCqN,EAC0CrK,MAAK1G,WAAU2R,UAKpE,OAHAlQ,EAASgO,SAASzN,IAAI0E,EAAK/D,GAC3BlB,EAASoO,OAAO7N,IAAI0E,EAAK/D,GAElBqO,GAIf,SAASlP,GACL,IACI6P,GAAU7P,EAEd,OAAO,SAAaG,EAAayE,EAAasK,EAAkB,IAC5D,IAAI,YAAEC,GAAgBhP,GAEhBiD,MAAOpB,GAAYkN,EACrBvP,EAAW,IAAI8N,EAAS0B,GAExBtO,EAAO,CAAE8O,UAAW,cAAe/N,KAD5BgD,EACkCA,MAAK5E,OAAMgC,UAAS6N,UAKjE,OAHAlQ,EAASgO,SAASzN,IAAI0E,EAAK/D,GAC3BlB,EAASqO,WAAW9N,IAAI0E,EAAK/D,GAEtBqO,GAIf,QAAQlP,GAEJ,OAAO,SAAaG,EAAayE,EAAasK,EAAkB,IAC5D,IAAI,YAAEC,GAAgBhP,GAEhBiD,MAAOpB,IADTkN,EAAa,OAAH,wBAAQA,GAAehB,GACZgB,GACrBvP,EAAW,IAAI8N,EAAS0B,GAExBtO,EAAO,CAAE8O,UAAW,eAAgB/N,KAD7BgD,EACmCA,MAAK5E,OAAMgC,WAKzD,OAHArC,EAASgO,SAASzN,IAAI0E,EAAK/D,GAC3BlB,EAASsO,eAAe/N,IAAI0E,EAAK/D,GAE1BqO,GAIf,QAAQ1D,GACJ,MAAMyE,EACF,YAAoB9P,EAAqByB,GAArB,KAAAzB,SAAqB,KAAAyB,OACzC,MAAMsE,EAAcJ,EAAWoK,GAC3B,IAAI,OAAE/P,EAAM,KAAEyB,GAASlD,KACnBuJ,EAASwD,QAAQnK,MAAM4E,EAAIJ,EAAMoK,GAIrC,OAFA/P,EAAOqL,GAAQ5J,KAASsO,GAEjBjI,GAIf,OAAO,SAAa9H,EAAayE,EAAasK,EAAkB,IAC5D,IAAM9L,MAAO8C,GAAOgJ,EAChBlE,EAAQ,IAAIC,MAAO/E,EAAI,IAAI+J,EAAY9P,EAAQyE,IAGnD,OAFIsK,EAAa,OAAH,wBAAQA,GAAU,CAAE9L,MAAO4H,OASrD,MAAM,QACFgE,EAAO,SAAEmB,EAAQ,SAAEC,EAAQ,QAC3BrS,EAAO,KAAEkR,EAAI,SACboB,EAAQ,QAAEC,EAAO,QACjBC,GACAnS,G,6BChVJ,kCAwBA,MAAMoS,EAKF,YAAoB5L,GAAA,KAAAA,MAJZ,KAAA6L,UAAyB,GACjC,kBAAoB,OAAO/R,KAAKA,KAAKkG,KACrC,gBAAgBxB,GAAS1E,KAAKA,KAAKkG,KAAOxB,EAAO1E,KAAKgS,SAItD,OAAON,EAAqBM,GACxB,IAAI,UAAED,EAAS,YAAEE,GAAgBjS,KAGjC,OAFA+R,EAAU1L,KAAKqL,GACXM,GAAQN,EAASQ,OAAOD,GACrBjS,KAGX,OAAO0R,GACH,IAAI,UAAEK,GAAc/R,KACpB,IAAK,IAAI8B,EAAIiQ,EAAU/P,OAAQF,KAAUiQ,EAAUjQ,KAAO4P,GAAUK,EAAUI,OAAOrQ,EAAG,GACxF,OAAO9B,KAGX,OAAOoS,GACH,IAAI,UAAEL,EAAS,YAAEE,GAAgBjS,KAAMoS,EAAQA,GAASH,EACxD,IAAK,IAAInQ,EAAI,EAAGC,EAAMgQ,EAAU/P,OAAQF,EAAIC,EAAKD,IAAKiQ,EAAUjQ,GAAGoQ,OAAOE,GAC1E,OAAOpS,Q,wCChDf,MAAM,UAAc,IAIhB,YAAYa,EAAe,IACvBqN,QAJI,KAAAmE,MAAuB,IAAIhS,IAK/B,IAAI,GAAE+B,GAAOvB,EAGb,OAFAb,KAAKoC,GAAKA,EAEHpC,KAGX,KAAKwM,EAAgBtG,GACjB,IAAI,KAAE5E,EAAI,OAAEuL,GAAWL,EAInB8F,GAHQtS,KAAKmF,IAAIe,GACJ/D,OAEL,CACR,qBAAsB,GAAGnC,KAAKoC,MAAM8D,KAAO5E,IAC3C,iBAAkB,GAAGtB,KAAKoC,QAAQd,IAClC,iBAAkB,MAAM4E,KAAO5E,IAC/B,aAAc,QAAQA,MAG1BtB,KAAKuS,QAAQD,EAAM,sBAAuBzF,GAC1C7M,KAAKuS,QAAQD,EAAM,kBAAmBzF,GACtC7M,KAAKuS,QAAQD,EAAM,kBAAmBzF,GACtC7M,KAAKuS,QAAQD,EAAM,cAAezF,GAEtC,MAAM2F,IACN,YAEA,IAAItM,GAEA,OADUlG,KAAKqS,MAAM1E,IAAIzH,GAI7B,IAAIA,GAEA,OADYlG,KAAKqS,MAAMlN,IAAIe,GAI/B,IAAIA,EAAUxB,GAQV,OAPA1E,KAAKqS,MAAM7Q,IAAI0E,EAAKxB,GACpB1E,KAAKuS,QAAQrM,EAAKxB,GAClB1E,KAAKuS,QAAQ,IAAK7N,GAClB1E,KAAKuS,QAAQ,OAAQ7N,GACrB1E,KAAKuS,QAAQ,MAAMrM,IAAOxB,GACtBA,aAAiB,GAAOA,EAAM+N,OAAO,CAAE/D,KAAOlC,GAAMxM,KAAK0O,KAAKlC,EAAGtG,KAE9DlG,KAGX,OACI,IAAI0S,EAAUhN,MAAMiN,KAAM3S,KAAKqS,MAAMK,WAAarO,EAAI,GACtD,IAAK,IAAK6B,EAAKxB,KAAUgO,EAASrO,EAAE6B,GAAOxB,EAC3C,OAAOL,EAGX,SACI,OAAOrE,KAAKmC,QC/DpB,mC;;;;;;;;;;;;;;gFCeA,IAAIyQ,EAAgB,SAASC,EAAG/J,GAI5B,OAHA8J,EAAgB1O,OAAO4O,gBAClB,CAAEC,UAAW,cAAgBrN,OAAS,SAAUmN,EAAG/J,GAAK+J,EAAEE,UAAYjK,IACvE,SAAU+J,EAAG/J,GAAK,IAAK,IAAIkK,KAAKlK,EAAOA,EAAE8E,eAAeoF,KAAIH,EAAEG,GAAKlK,EAAEkK,MACpDH,EAAG/J,IAGrB,SAASmK,EAAUJ,EAAG/J,GAEzB,SAASoK,IAAOlT,KAAKyQ,YAAcoC,EADnCD,EAAcC,EAAG/J,GAEjB+J,EAAEvI,UAAkB,OAANxB,EAAa5E,OAAOiP,OAAOrK,IAAMoK,EAAG5I,UAAYxB,EAAEwB,UAAW,IAAI4I,GCzB5E,SAASE,EAAW9O,GACvB,MAAoB,mBAANA,ECDlB,IAAI+O,GAAsD,EAC/C3S,EAAS,CAChBsL,aAASnF,EACT,0CAA0CnC,GAClCA,IAC0B,IAAI4O,OACqGC,MAKvIF,EAAsD3O,GAE1D,4CACI,OAAO2O,ICdR,SAASG,EAAgBC,GAC5BxM,YAAW,WAAc,MAAMwM,IAAQ,GCCpC,IAAIC,EAAQ,CACfC,QAAQ,EACRjF,KAAM,SAAUhK,KAChB8N,MAAO,SAAUiB,GACb,GAAI/S,EAAOkT,sCACP,MAAMH,EAGND,EAAgBC,IAGxBI,SAAU,cCbHC,EAAwB,WAAe,OAAOpO,MAAMoO,SAAW,SAAWxP,GAAK,OAAOA,GAAyB,iBAAbA,EAAEtC,QAA5E,GCAnC,IAYW+R,EAZiC,WACxC,SAASC,EAAwBC,GAM7B,OALAX,MAAM3R,KAAK3B,MACXA,KAAK4R,QAAUqC,EACXA,EAAOjS,OAAS,4CAA8CiS,EAAOtO,KAAI,SAAU8N,EAAK3R,GAAK,OAAOA,EAAI,EAAI,KAAO2R,EAAIpL,cAAe7C,KAAK,QAAU,GACzJxF,KAAKkD,KAAO,sBACZlD,KAAKiU,OAASA,EACPjU,KAGX,OADAgU,EAAwB1J,UAA0BpG,OAAOiP,OAAOG,MAAMhJ,WAC/D0J,EAViC,GCIxC,EAA8B,WAC9B,SAASE,EAAaC,GAClBnU,KAAK2T,QAAS,EACd3T,KAAKoU,iBAAmB,KACxBpU,KAAKqU,eAAiB,KAClBF,IACAnU,KAAKsU,aAAeH,GAsH5B,OAnHAD,EAAa5J,UAAU6J,YAAc,WACjC,IAAIF,EACJ,IAAIjU,KAAK2T,OAAT,CAGA,IClBiBrP,EDkBF8P,EAANpU,KAA4BoU,iBAAkBE,EAA9CtU,KAAgEsU,aAAcD,EAA9ErU,KAAkGqU,eAI3G,GAHArU,KAAK2T,QAAS,EACd3T,KAAKoU,iBAAmB,KACxBpU,KAAKqU,eAAiB,KAClBD,aAA4BF,EAC5BE,EAAiBG,OAAOvU,WAEvB,GAAyB,OAArBoU,EACL,IAAK,IAAII,EAAQ,EAAGA,EAAQJ,EAAiBpS,SAAUwS,EAAO,CAC3CJ,EAAiBI,GACvBD,OAAOvU,MAGxB,GAAIoT,EAAWkB,GACX,IACIA,EAAa3S,KAAK3B,MAEtB,MAAOwM,GACHyH,EAASzH,aAAauH,EAAsBU,EAA4BjI,EAAEyH,QAAU,CAACzH,GAG7F,GAAIsH,EAAQO,GACR,CAAIG,GAAS,EAEb,IAFA,IACIzS,EAAMsS,EAAerS,SAChBwS,EAAQzS,GAAK,CAClB,IAAI2S,EAAML,EAAeG,GACzB,GC3CC,QADQlQ,ED4CIoQ,IC3CS,iBAANpQ,ED4CZ,IACIoQ,EAAIP,cAER,MAAO3H,GACHyH,EAASA,GAAU,GACfzH,aAAauH,EACbE,EAASA,EAAOrO,OAAO6O,EAA4BjI,EAAEyH,SAGrDA,EAAO5N,KAAKmG,KAMhC,GAAIyH,EACA,MAAM,IAAIF,EAAoBE,KAGtCC,EAAa5J,UAAUqK,IAAM,SAAUC,GACnC,IAAIC,EAAeD,EACnB,IAAKA,EACD,OAAOV,EAAaY,MAExB,cAAeF,GACX,IAAK,WACDC,EAAe,IAAIX,EAAaU,GACpC,IAAK,SACD,GAAIC,IAAiB7U,MAAQ6U,EAAalB,QAA8C,mBAA7BkB,EAAaV,YACpE,OAAOU,EAEN,GAAI7U,KAAK2T,OAEV,OADAkB,EAAaV,cACNU,EAEN,KAAMA,aAAwBX,GAAe,CAC9C,IAAIa,EAAMF,GACVA,EAAe,IAAIX,GACNG,eAAiB,CAACU,GAEnC,MACJ,QACI,MAAM,IAAIzB,MAAM,yBAA2BsB,EAAW,2BAG9D,IAAIR,EAAmBS,EAAaT,iBACpC,GAAyB,OAArBA,EACAS,EAAaT,iBAAmBpU,UAE/B,GAAIoU,aAA4BF,EAAc,CAC/C,GAAIE,IAAqBpU,KACrB,OAAO6U,EAEXA,EAAaT,iBAAmB,CAACA,EAAkBpU,UAElD,KAAwC,IAApCoU,EAAiBY,QAAQhV,MAI9B,OAAO6U,EAHPT,EAAiB/N,KAAKrG,MAK1B,IAAIiV,EAAgBjV,KAAKqU,eAOzB,OANsB,OAAlBY,EACAjV,KAAKqU,eAAiB,CAACQ,GAGvBI,EAAc5O,KAAKwO,GAEhBA,GAEXX,EAAa5J,UAAUiK,OAAS,SAAUM,GACtC,IAAII,EAAgBjV,KAAKqU,eACzB,GAAIY,EAAe,CACf,IAAIC,EAAoBD,EAAcD,QAAQH,IACnB,IAAvBK,GACAD,EAAc9C,OAAO+C,EAAmB,KAIpDhB,EAAaY,MAAS,SAAUpB,GAE5B,OADAA,EAAMC,QAAS,EACRD,EAFU,CAGnB,IAAIQ,GACCA,EA5HsB,GA+HjC,SAASO,EAA4BR,GACjC,OAAOA,EAAO7P,QAAO,SAAU+Q,EAAM1B,GAAO,OAAO0B,EAAKvP,OAAQ6N,aAAeM,EAAuBN,EAAIQ,OAASR,KAAS,IEpIzH,IAAI2B,EAA6B,WACpC,MAAyB,mBAAXC,OACMA,OAAO,gBACrB,kBAAkC/P,KAAK8C,SAHT,GCOpC,EAA4B,SAAUkN,GAEtC,SAASC,EAAWC,EAAmBhD,EAAOqB,GAC1C,IAAI4B,EAAQH,EAAO3T,KAAK3B,OAASA,KAKjC,OAJAyV,EAAMC,eAAiB,KACvBD,EAAME,iBAAkB,EACxBF,EAAMG,oBAAqB,EAC3BH,EAAMI,WAAY,EACVhT,UAAUb,QACd,KAAK,EACDyT,EAAMK,YAAcpC,EACpB,MACJ,KAAK,EACD,IAAK8B,EAAmB,CACpBC,EAAMK,YAAcpC,EACpB,MAEJ,GAAiC,iBAAtB8B,EAAgC,CACnCA,aAA6BD,GAC7BE,EAAMG,mBAAqBJ,EAAkBI,mBAC7CH,EAAMK,YAAcN,EACpBA,EAAkBb,IAAIc,KAGtBA,EAAMG,oBAAqB,EAC3BH,EAAMK,YAAc,IAAI,EAAeL,EAAOD,IAElD,MAER,QACIC,EAAMG,oBAAqB,EAC3BH,EAAMK,YAAc,IAAI,EAAeL,EAAOD,EAAmBhD,EAAOqB,GAGhF,OAAO4B,EAoDX,OArFA,EAAkBF,EAAYD,GAmC9BC,EAAWjL,UAAU8K,GAAsB,WAAc,OAAOpV,MAChEuV,EAAWpC,OAAS,SAAUzE,EAAM8D,EAAOqB,GACvC,IAAIkC,EAAa,IAAIR,EAAW7G,EAAM8D,EAAOqB,GAE7C,OADAkC,EAAWH,oBAAqB,EACzBG,GAEXR,EAAWjL,UAAUoE,KAAO,SAAUhK,GAC7B1E,KAAK6V,WACN7V,KAAKgW,MAAMtR,IAGnB6Q,EAAWjL,UAAUkI,MAAQ,SAAUiB,GAC9BzT,KAAK6V,YACN7V,KAAK6V,WAAY,EACjB7V,KAAKiW,OAAOxC,KAGpB8B,EAAWjL,UAAUuJ,SAAW,WACvB7T,KAAK6V,YACN7V,KAAK6V,WAAY,EACjB7V,KAAKkW,cAGbX,EAAWjL,UAAU6J,YAAc,WAC3BnU,KAAK2T,SAGT3T,KAAK6V,WAAY,EACjBP,EAAOhL,UAAU6J,YAAYxS,KAAK3B,QAEtCuV,EAAWjL,UAAU0L,MAAQ,SAAUtR,GACnC1E,KAAK8V,YAAYpH,KAAKhK,IAE1B6Q,EAAWjL,UAAU2L,OAAS,SAAUxC,GACpCzT,KAAK8V,YAAYtD,MAAMiB,GACvBzT,KAAKmU,eAEToB,EAAWjL,UAAU4L,UAAY,WAC7BlW,KAAK8V,YAAYjC,WACjB7T,KAAKmU,eAEToB,EAAWjL,UAAU6L,uBAAyB,WAC1C,IAAI/B,EAAmBpU,KAAKoU,iBAM5B,OALApU,KAAKoU,iBAAmB,KACxBpU,KAAKmU,cACLnU,KAAK2T,QAAS,EACd3T,KAAK6V,WAAY,EACjB7V,KAAKoU,iBAAmBA,EACjBpU,MAEJuV,EAtFoB,CAuF7B,GAEE,EAAgC,SAAUD,GAE1C,SAASc,EAAeC,EAAmBC,EAAgB9D,EAAOqB,GAC9D,IAEInF,EAFA+G,EAAQH,EAAO3T,KAAK3B,OAASA,KACjCyV,EAAMY,kBAAoBA,EAE1B,IAAI3O,EAAU+N,EAoBd,OAnBIrC,EAAWkD,GACX5H,EAAO4H,EAEFA,IACL5H,EAAO4H,EAAe5H,KACtB8D,EAAQ8D,EAAe9D,MACvBqB,EAAWyC,EAAezC,SACtByC,IAAmB5C,IAEfN,GADJ1L,EAAUxD,OAAOiP,OAAOmD,IACDnC,cACnBsB,EAAMd,IAAIjN,EAAQyM,YAAY/N,KAAKsB,IAEvCA,EAAQyM,YAAcsB,EAAMtB,YAAY/N,KAAKqP,KAGrDA,EAAMc,SAAW7O,EACjB+N,EAAMO,MAAQtH,EACd+G,EAAMQ,OAASzD,EACfiD,EAAMS,UAAYrC,EACX4B,EA0GX,OAnIA,EAAkBW,EAAgBd,GA2BlCc,EAAe9L,UAAUoE,KAAO,SAAUhK,GACtC,IAAK1E,KAAK6V,WAAa7V,KAAKgW,MAAO,CAC/B,IAAIK,EAAoBrW,KAAKqW,kBACxB3V,EAAOkT,uCAA0CyC,EAAkBT,mBAG/D5V,KAAKwW,gBAAgBH,EAAmBrW,KAAKgW,MAAOtR,IACzD1E,KAAKmU,cAHLnU,KAAKyW,aAAazW,KAAKgW,MAAOtR,KAO1C0R,EAAe9L,UAAUkI,MAAQ,SAAUiB,GACvC,IAAKzT,KAAK6V,UAAW,CACjB,IAAIQ,EAAoBrW,KAAKqW,kBACzBzC,EAAwClT,EAAOkT,sCACnD,GAAI5T,KAAKiW,OACArC,GAA0CyC,EAAkBT,oBAK7D5V,KAAKwW,gBAAgBH,EAAmBrW,KAAKiW,OAAQxC,GACrDzT,KAAKmU,gBALLnU,KAAKyW,aAAazW,KAAKiW,OAAQxC,GAC/BzT,KAAKmU,oBAOR,GAAKkC,EAAkBT,mBAQpBhC,GACAyC,EAAkBX,eAAiBjC,EACnC4C,EAAkBV,iBAAkB,GAGpCnC,EAAgBC,GAEpBzT,KAAKmU,kBAfuC,CAE5C,GADAnU,KAAKmU,cACDP,EACA,MAAMH,EAEVD,EAAgBC,MAc5B2C,EAAe9L,UAAUuJ,SAAW,WAChC,IAAI4B,EAAQzV,KACZ,IAAKA,KAAK6V,UAAW,CACjB,IAAIQ,EAAoBrW,KAAKqW,kBAC7B,GAAIrW,KAAKkW,UAAW,CAChB,IAAIQ,EAAkB,WAAc,OAAOjB,EAAMS,UAAUvU,KAAK8T,EAAMc,WACjE7V,EAAOkT,uCAA0CyC,EAAkBT,oBAKpE5V,KAAKwW,gBAAgBH,EAAmBK,GACxC1W,KAAKmU,gBALLnU,KAAKyW,aAAaC,GAClB1W,KAAKmU,oBAQTnU,KAAKmU,gBAIjBiC,EAAe9L,UAAUmM,aAAe,SAAUjP,EAAI9C,GAClD,IACI8C,EAAG7F,KAAK3B,KAAKuW,SAAU7R,GAE3B,MAAO+O,GAEH,GADAzT,KAAKmU,cACDzT,EAAOkT,sCACP,MAAMH,EAGND,EAAgBC,KAI5B2C,EAAe9L,UAAUkM,gBAAkB,SAAUG,EAAQnP,EAAI9C,GAC7D,IAAKhE,EAAOkT,sCACR,MAAM,IAAIN,MAAM,YAEpB,IACI9L,EAAG7F,KAAK3B,KAAKuW,SAAU7R,GAE3B,MAAO+O,GACH,OAAI/S,EAAOkT,uCACP+C,EAAOjB,eAAiBjC,EACxBkD,EAAOhB,iBAAkB,GAClB,IAGPnC,EAAgBC,IACT,GAGf,OAAO,GAEX2C,EAAe9L,UAAUgK,aAAe,WACpC,IAAI+B,EAAoBrW,KAAKqW,kBAC7BrW,KAAKuW,SAAW,KAChBvW,KAAKqW,kBAAoB,KACzBA,EAAkBlC,eAEfiC,EApIwB,CAqIjC,GCrOK,IAAI,EAA2B,WAAe,MAAyB,mBAAXf,QAAyBA,OAAOuB,YAAc,eAA3E,GCA/B,SAASC,KCQT,SAASC,EAAcC,GAC1B,OAAKA,EAGc,IAAfA,EAAI/U,OACG+U,EAAI,GAER,SAAeC,GAClB,OAAOD,EAAI3S,QAAO,SAAU6S,EAAMzP,GAAM,OAAOA,EAAGyP,KAAUD,IANrDH,ECLf,IAAI,EAA4B,WAC5B,SAASK,EAAWC,GAChBnX,KAAKoX,WAAY,EACbD,IACAnX,KAAKqX,WAAaF,GA6F1B,OA1FAD,EAAW5M,UAAUgN,KAAO,SAAUC,GAClC,IAAIX,EAAa,IAAIM,EAGrB,OAFAN,EAAWY,OAASxX,KACpB4W,EAAWW,SAAWA,EACfX,GAEXM,EAAW5M,UAAU6M,UAAY,SAAUb,EAAgB9D,EAAOqB,GAC9D,IAAI0D,EAAWvX,KAAKuX,SAChBE,ECjBL,SAAsBC,EAAgBlF,EAAOqB,GAChD,GAAI6D,EAAgB,CAChB,GAAIA,aAA0B,EAC1B,OAAOA,EAEX,GAAIA,EAAetC,GACf,OAAOsC,EAAetC,KAG9B,OAAKsC,GAAmBlF,GAAUqB,EAG3B,IAAI,EAAW6D,EAAgBlF,EAAOqB,GAFlC,IAAI,EAAWH,GDOXiE,CAAarB,EAAgB9D,EAAOqB,GAS/C,GARI0D,EACAE,EAAK9C,IAAI4C,EAAS5V,KAAK8V,EAAMzX,KAAKwX,SAGlCC,EAAK9C,IAAI3U,KAAKwX,QAAW9W,EAAOkT,wCAA0C6D,EAAK7B,mBAC3E5V,KAAKqX,WAAWI,GAChBzX,KAAK4X,cAAcH,IAEvB/W,EAAOkT,uCACH6D,EAAK7B,qBACL6B,EAAK7B,oBAAqB,EACtB6B,EAAK9B,iBACL,MAAM8B,EAAK/B,eAIvB,OAAO+B,GAEXP,EAAW5M,UAAUsN,cAAgB,SAAUH,GAC3C,IACI,OAAOzX,KAAKqX,WAAWI,GAE3B,MAAOhE,GACC/S,EAAOkT,wCACP6D,EAAK9B,iBAAkB,EACvB8B,EAAK/B,eAAiBjC,IE7C/B,SAAwB/B,GAC3B,KAAOA,GAAU,CACb,IAAImG,EAAKnG,EAAUoG,EAAWD,EAAGlE,OAAQmC,EAAc+B,EAAG/B,YAAaD,EAAYgC,EAAGhC,UACtF,GAAIiC,GAAYjC,EACZ,OAAO,EAGPnE,EADKoE,GAAeA,aAAuB,EAChCA,EAGA,KAGnB,OAAO,EFkCKiC,CAAeN,GAIflR,QAAQyR,KAAKvE,GAHbgE,EAAKjF,MAAMiB,KAOvByD,EAAW5M,UAAU2N,QAAU,SAAUvJ,EAAMwJ,GAC3C,IAAIzC,EAAQzV,KAEZ,OAAO,IADPkY,EAAcC,EAAeD,KACN,SAAUvX,EAASuL,GACtC,IAAI2I,EACJA,EAAeY,EAAM0B,WAAU,SAAUzS,GACrC,IACIgK,EAAKhK,GAET,MAAO+O,GACHvH,EAAOuH,GACHoB,GACAA,EAAaV,iBAGtBjI,EAAQvL,OAGnBuW,EAAW5M,UAAU+M,WAAa,SAAUtB,GACxC,IAAIyB,EAASxX,KAAKwX,OAClB,OAAOA,GAAUA,EAAOL,UAAUpB,IAEtCmB,EAAW5M,UAAU,GAAqB,WACtC,OAAOtK,MAEXkX,EAAW5M,UAAU8N,KAAO,WAExB,IADA,IAAIC,EAAa,GACRC,EAAK,EAAGA,EAAKzV,UAAUb,OAAQsW,IACpCD,EAAWC,GAAMzV,UAAUyV,GAE/B,OAA0B,IAAtBD,EAAWrW,OACJhC,KAEJ8W,EAAcuB,EAAdvB,CAA0B9W,OAErCkX,EAAW5M,UAAUiO,UAAY,SAAUL,GACvC,IAAIzC,EAAQzV,KAEZ,OAAO,IADPkY,EAAcC,EAAeD,KACN,SAAUvX,EAASuL,GACtC,IAAIxH,EACJ+Q,EAAM0B,WAAU,SAAU7S,GAAK,OAAOI,EAAQJ,KAAM,SAAUmP,GAAO,OAAOvH,EAAOuH,MAAS,WAAc,OAAO9S,EAAQ+D,UAGjIwS,EAAW/D,OAAS,SAAUgE,GAC1B,OAAO,IAAID,EAAWC,IAEnBD,EAjGoB,GAoG/B,SAASiB,EAAeD,GAIpB,GAHKA,IACDA,EAAcxX,EAAOsL,SAAWA,UAE/BkM,EACD,MAAM,IAAI5E,MAAM,yBAEpB,OAAO4E,EGhHX,IAUWM,EAVqC,WAC5C,SAASC,IAIL,OAHAnF,MAAM3R,KAAK3B,MACXA,KAAK4R,QAAU,sBACf5R,KAAKkD,KAAO,0BACLlD,KAGX,OADAyY,EAA4BnO,UAA0BpG,OAAOiP,OAAOG,MAAMhJ,WACnEmO,EARqC,GCE5C,EAAqC,SAAUnD,GAE/C,SAASoD,EAAoBC,EAAS5C,GAClC,IAAIN,EAAQH,EAAO3T,KAAK3B,OAASA,KAIjC,OAHAyV,EAAMkD,QAAUA,EAChBlD,EAAMM,WAAaA,EACnBN,EAAM9B,QAAS,EACR8B,EAkBX,OAxBA,EAAkBiD,EAAqBpD,GAQvCoD,EAAoBpO,UAAU6J,YAAc,WACxC,IAAInU,KAAK2T,OAAT,CAGA3T,KAAK2T,QAAS,EACd,IAAIgF,EAAU3Y,KAAK2Y,QACf5G,EAAY4G,EAAQ5G,UAExB,GADA/R,KAAK2Y,QAAU,KACV5G,GAAkC,IAArBA,EAAU/P,SAAgB2W,EAAQ9C,YAAa8C,EAAQhF,OAAzE,CAGA,IAAIiF,EAAkB7G,EAAUiD,QAAQhV,KAAK+V,aACpB,IAArB6C,GACA7G,EAAUI,OAAOyG,EAAiB,MAGnCF,EAzB6B,CA0BtC,GCrBE,EAAmC,SAAUpD,GAE7C,SAASuD,EAAkB/C,GACvB,IAAIL,EAAQH,EAAO3T,KAAK3B,KAAM8V,IAAgB9V,KAE9C,OADAyV,EAAMK,YAAcA,EACbL,EAEX,OANA,EAAkBoD,EAAmBvD,GAM9BuD,EAP2B,CAQpC,GAEE,EAAyB,SAAUvD,GAEnC,SAASxD,IACL,IAAI2D,EAAQH,EAAO3T,KAAK3B,OAASA,KAMjC,OALAyV,EAAM1D,UAAY,GAClB0D,EAAM9B,QAAS,EACf8B,EAAMI,WAAY,EAClBJ,EAAMqD,UAAW,EACjBrD,EAAMsD,YAAc,KACbtD,EAyFX,OAjGA,EAAkB3D,EAASwD,GAU3BxD,EAAQxH,UAAU8K,GAAsB,WACpC,OAAO,IAAI,EAAkBpV,OAEjC8R,EAAQxH,UAAUgN,KAAO,SAAUC,GAC/B,IAAIoB,EAAU,IAAI,EAAiB3Y,KAAMA,MAEzC,OADA2Y,EAAQpB,SAAWA,EACZoB,GAEX7G,EAAQxH,UAAUoE,KAAO,SAAUhK,GAC/B,GAAI1E,KAAK2T,OACL,MAAM,IAAI6E,EAEd,IAAKxY,KAAK6V,UAIN,IAHA,IAAI9D,EAAY/R,KAAK+R,UACjBhQ,EAAMgQ,EAAU/P,OAChBgX,EAAOjH,EAAU/L,QACZlE,EAAI,EAAGA,EAAIC,EAAKD,IACrBkX,EAAKlX,GAAG4M,KAAKhK,IAIzBoN,EAAQxH,UAAUkI,MAAQ,SAAUiB,GAChC,GAAIzT,KAAK2T,OACL,MAAM,IAAI6E,EAEdxY,KAAK8Y,UAAW,EAChB9Y,KAAK+Y,YAActF,EACnBzT,KAAK6V,WAAY,EAIjB,IAHA,IAAI9D,EAAY/R,KAAK+R,UACjBhQ,EAAMgQ,EAAU/P,OAChBgX,EAAOjH,EAAU/L,QACZlE,EAAI,EAAGA,EAAIC,EAAKD,IACrBkX,EAAKlX,GAAG0Q,MAAMiB,GAElBzT,KAAK+R,UAAU/P,OAAS,GAE5B8P,EAAQxH,UAAUuJ,SAAW,WACzB,GAAI7T,KAAK2T,OACL,MAAM,IAAI6E,EAEdxY,KAAK6V,WAAY,EAIjB,IAHA,IAAI9D,EAAY/R,KAAK+R,UACjBhQ,EAAMgQ,EAAU/P,OAChBgX,EAAOjH,EAAU/L,QACZlE,EAAI,EAAGA,EAAIC,EAAKD,IACrBkX,EAAKlX,GAAG+R,WAEZ7T,KAAK+R,UAAU/P,OAAS,GAE5B8P,EAAQxH,UAAU6J,YAAc,WAC5BnU,KAAK6V,WAAY,EACjB7V,KAAK2T,QAAS,EACd3T,KAAK+R,UAAY,MAErBD,EAAQxH,UAAUsN,cAAgB,SAAU7B,GACxC,GAAI/V,KAAK2T,OACL,MAAM,IAAI6E,EAGV,OAAOlD,EAAOhL,UAAUsN,cAAcjW,KAAK3B,KAAM+V,IAGzDjE,EAAQxH,UAAU+M,WAAa,SAAUtB,GACrC,GAAI/V,KAAK2T,OACL,MAAM,IAAI6E,EAET,OAAIxY,KAAK8Y,UACV/C,EAAWvD,MAAMxS,KAAK+Y,aACf,EAAajE,OAEf9U,KAAK6V,WACVE,EAAWlC,WACJ,EAAaiB,QAGpB9U,KAAK+R,UAAU1L,KAAK0P,GACb,IAAI,EAAoB/V,KAAM+V,KAG7CjE,EAAQxH,UAAU2O,aAAe,WAC7B,IAAIrC,EAAa,IAAI,EAErB,OADAA,EAAWY,OAASxX,KACb4W,GAEX9E,EAAQqB,OAAS,SAAU2C,EAAa0B,GACpC,OAAO,IAAI,EAAiB1B,EAAa0B,IAEtC1F,EAlGiB,CAmG1B,GAEE,EAAkC,SAAUwD,GAE5C,SAAS4D,EAAiBpD,EAAa0B,GACnC,IAAI/B,EAAQH,EAAO3T,KAAK3B,OAASA,KAGjC,OAFAyV,EAAMK,YAAcA,EACpBL,EAAM+B,OAASA,EACR/B,EA6BX,OAlCA,EAAkByD,EAAkB5D,GAOpC4D,EAAiB5O,UAAUoE,KAAO,SAAUhK,GACxC,IAAIoR,EAAc9V,KAAK8V,YACnBA,GAAeA,EAAYpH,MAC3BoH,EAAYpH,KAAKhK,IAGzBwU,EAAiB5O,UAAUkI,MAAQ,SAAUiB,GACzC,IAAIqC,EAAc9V,KAAK8V,YACnBA,GAAeA,EAAYtD,OAC3BxS,KAAK8V,YAAYtD,MAAMiB,IAG/ByF,EAAiB5O,UAAUuJ,SAAW,WAClC,IAAIiC,EAAc9V,KAAK8V,YACnBA,GAAeA,EAAYjC,UAC3B7T,KAAK8V,YAAYjC,YAGzBqF,EAAiB5O,UAAU+M,WAAa,SAAUtB,GAE9C,OADa/V,KAAKwX,OAEPxX,KAAKwX,OAAOL,UAAUpB,GAGtB,EAAajB,OAGrBoE,EAnC0B,CAoCnC,GCxJE,EAA6B,SAAU5D,GAEvC,SAAS6D,EAAYC,EAAWC,GAC5B,IAAI5D,EAAQH,EAAO3T,KAAK3B,KAAMoZ,EAAWC,IAASrZ,KAGlD,OAFAyV,EAAM2D,UAAYA,EAClB3D,EAAM4D,KAAOA,EACN5D,EA4BX,OAjCA,EAAkB0D,EAAa7D,GAO/B6D,EAAY7O,UAAUgP,SAAW,SAAUlH,EAAOjL,GAI9C,YAHc,IAAVA,IACAA,EAAQ,GAERA,EAAQ,EACDmO,EAAOhL,UAAUgP,SAAS3X,KAAK3B,KAAMoS,EAAOjL,IAEvDnH,KAAKmH,MAAQA,EACbnH,KAAKoS,MAAQA,EACbpS,KAAKoZ,UAAUG,MAAMvZ,MACdA,OAEXmZ,EAAY7O,UAAUvJ,QAAU,SAAUqR,EAAOjL,GAC7C,OAAQA,EAAQ,GAAKnH,KAAK2T,OACtB2B,EAAOhL,UAAUvJ,QAAQY,KAAK3B,KAAMoS,EAAOjL,GAC3CnH,KAAKwZ,SAASpH,EAAOjL,IAE7BgS,EAAY7O,UAAUmP,eAAiB,SAAUL,EAAWhX,EAAI+E,GAI5D,YAHc,IAAVA,IACAA,EAAQ,GAEG,OAAVA,GAAkBA,EAAQ,GAAiB,OAAVA,GAAkBnH,KAAKmH,MAAQ,EAC1DmO,EAAOhL,UAAUmP,eAAe9X,KAAK3B,KAAMoZ,EAAWhX,EAAI+E,GAE9DiS,EAAUG,MAAMvZ,OAEpBmZ,EAlCqB,CCAC,SAAU7D,GAEvC,SAASoE,EAAYN,EAAWC,GAC5B,IAAI5D,EAAQH,EAAO3T,KAAK3B,KAAMoZ,EAAWC,IAASrZ,KAIlD,OAHAyV,EAAM2D,UAAYA,EAClB3D,EAAM4D,KAAOA,EACb5D,EAAMkE,SAAU,EACTlE,EAiFX,OAvFA,EAAkBiE,EAAapE,GAQ/BoE,EAAYpP,UAAUgP,SAAW,SAAUlH,EAAOjL,GAI9C,QAHc,IAAVA,IACAA,EAAQ,GAERnH,KAAK2T,OACL,OAAO3T,KAEXA,KAAKoS,MAAQA,EACb,IAAIhQ,EAAKpC,KAAKoC,GACVgX,EAAYpZ,KAAKoZ,UAOrB,OANU,MAANhX,IACApC,KAAKoC,GAAKpC,KAAK4Z,eAAeR,EAAWhX,EAAI+E,IAEjDnH,KAAK2Z,SAAU,EACf3Z,KAAKmH,MAAQA,EACbnH,KAAKoC,GAAKpC,KAAKoC,IAAMpC,KAAKyZ,eAAeL,EAAWpZ,KAAKoC,GAAI+E,GACtDnH,MAEX0Z,EAAYpP,UAAUmP,eAAiB,SAAUL,EAAWhX,EAAI+E,GAI5D,YAHc,IAAVA,IACAA,EAAQ,GAEL0S,YAAYT,EAAUG,MAAMnT,KAAKgT,EAAWpZ,MAAOmH,IAE9DuS,EAAYpP,UAAUsP,eAAiB,SAAUR,EAAWhX,EAAI+E,GAI5D,QAHc,IAAVA,IACAA,EAAQ,GAEE,OAAVA,GAAkBnH,KAAKmH,QAAUA,IAA0B,IAAjBnH,KAAK2Z,QAC/C,OAAOvX,EAEX0X,cAAc1X,IAGlBsX,EAAYpP,UAAUvJ,QAAU,SAAUqR,EAAOjL,GAC7C,GAAInH,KAAK2T,OACL,OAAO,IAAIL,MAAM,gCAErBtT,KAAK2Z,SAAU,EACf,IAAInH,EAAQxS,KAAKwZ,SAASpH,EAAOjL,GACjC,GAAIqL,EACA,OAAOA,GAEe,IAAjBxS,KAAK2Z,SAAgC,MAAX3Z,KAAKoC,KACpCpC,KAAKoC,GAAKpC,KAAK4Z,eAAe5Z,KAAKoZ,UAAWpZ,KAAKoC,GAAI,QAG/DsX,EAAYpP,UAAUkP,SAAW,SAAUpH,EAAOjL,GAC9C,IAAI4S,GAAU,EACVC,OAAanT,EACjB,IACI7G,KAAKqZ,KAAKjH,GAEd,MAAO5F,GACHuN,GAAU,EACVC,IAAexN,GAAKA,GAAK,IAAI8G,MAAM9G,GAEvC,GAAIuN,EAEA,OADA/Z,KAAKmU,cACE6F,GAGfN,EAAYpP,UAAUgK,aAAe,WACjC,IAAIlS,EAAKpC,KAAKoC,GACVgX,EAAYpZ,KAAKoZ,UACjBa,EAAUb,EAAUa,QACpBzF,EAAQyF,EAAQjF,QAAQhV,MAC5BA,KAAKqZ,KAAO,KACZrZ,KAAKoS,MAAQ,KACbpS,KAAK2Z,SAAU,EACf3Z,KAAKoZ,UAAY,MACF,IAAX5E,GACAyF,EAAQ9H,OAAOqC,EAAO,GAEhB,MAANpS,IACApC,KAAKoC,GAAKpC,KAAK4Z,eAAeR,EAAWhX,EAAI,OAEjDpC,KAAKmH,MAAQ,MAEVuS,EAxFqB,CCAJ,SAAUpE,GAElC,SAAS4E,EAAOd,EAAWC,GACvB,OAAO/D,EAAO3T,KAAK3B,OAASA,KAQhC,OAVA,EAAkBka,EAAQ5E,GAI1B4E,EAAO5P,UAAUgP,SAAW,SAAUlH,EAAOjL,GAIzC,YAHc,IAAVA,IACAA,EAAQ,GAELnH,MAEJka,EAXgB,CAYzB,KCfEC,EAA2B,WAC3B,SAASA,EAAUC,EAAiBtS,QACpB,IAARA,IACAA,EAAMqS,EAAUrS,KAEpB9H,KAAKoa,gBAAkBA,EACvBpa,KAAK8H,IAAMA,EASf,OAPAqS,EAAU7P,UAAUgP,SAAW,SAAUD,EAAMlS,EAAOiL,GAIlD,YAHc,IAAVjL,IACAA,EAAQ,GAEL,IAAInH,KAAKoa,gBAAgBpa,KAAMqZ,GAAMC,SAASlH,EAAOjL,IAEhEgT,EAAUrS,IAAM,WAAc,OAAOC,KAAKD,OACnCqS,EAfmB,GCGnBE,EAAsB,ICAG,SAAU/E,GAE1C,SAASgF,IACL,OAAkB,OAAXhF,GAAmBA,EAAO1S,MAAM5C,KAAM6C,YAAc7C,KAE/D,OAJA,EAAkBsa,EAAgBhF,GAI3BgF,EALwB,CCAC,SAAUhF,GAE1C,SAASiF,EAAeH,EAAiBtS,QACzB,IAARA,IACAA,EAAMqS,EAAUrS,KAEpB,IAAI2N,EAAQH,EAAO3T,KAAK3B,KAAMoa,GAAiB,WAC3C,OAAIG,EAAeC,UAAYD,EAAeC,WAAa/E,EAChD8E,EAAeC,SAAS1S,MAGxBA,QAET9H,KAIN,OAHAyV,EAAMwE,QAAU,GAChBxE,EAAMgF,QAAS,EACfhF,EAAMiF,eAAY7T,EACX4O,EAkCX,OAlDA,EAAkB8E,EAAgBjF,GAkBlCiF,EAAejQ,UAAUgP,SAAW,SAAUD,EAAMlS,EAAOiL,GAIvD,YAHc,IAAVjL,IACAA,EAAQ,GAERoT,EAAeC,UAAYD,EAAeC,WAAaxa,KAChDua,EAAeC,SAASlB,SAASD,EAAMlS,EAAOiL,GAG9CkD,EAAOhL,UAAUgP,SAAS3X,KAAK3B,KAAMqZ,EAAMlS,EAAOiL,IAGjEmI,EAAejQ,UAAUiP,MAAQ,SAAUzM,GACvC,IAAImN,EAAUja,KAAKia,QACnB,GAAIja,KAAKya,OACLR,EAAQ5T,KAAKyG,OADjB,CAIA,IAAI0F,EACJxS,KAAKya,QAAS,EACd,GACI,GAAIjI,EAAQ1F,EAAO/L,QAAQ+L,EAAOsF,MAAOtF,EAAO3F,OAC5C,YAEC2F,EAASmN,EAAQzR,SAE1B,GADAxI,KAAKya,QAAS,EACVjI,EAAO,CACP,KAAO1F,EAASmN,EAAQzR,SACpBsE,EAAOqH,cAEX,MAAM3B,KAGP+H,EAnDwB,CAoDjCJ,IFpD+B,CAAmB,GGDzCrF,EAAsB,IAAI,GAAW,SAAUiB,GAAc,OAAOA,EAAWlC,cACnF,SAAS,EAAMuF,GAClB,OAAOA,EAEX,SAAwBA,GACpB,OAAO,IAAI,GAAW,SAAUrD,GAAc,OAAOqD,EAAUE,UAAS,WAAc,OAAOvD,EAAWlC,iBAHrF8G,CAAevB,GAAatE,ECH5C,SAAS8F,EAAYlW,GACxB,OAAOA,GAAmC,mBAAnBA,EAAM4U,SCD1B,ICGIuB,ECDJ,SAASC,EAAc9D,EAAOoC,GACjC,OAAO,IAAI,GAAW,SAAUrD,GAC5B,IAAIrB,EAAM,IAAI,EACV5S,EAAI,EAWR,OAVA4S,EAAIC,IAAIyE,EAAUE,UAAS,WACnBxX,IAAMkV,EAAMhV,QAIhB+T,EAAWrH,KAAKsI,EAAMlV,MACjBiU,EAAWpC,QACZe,EAAIC,IAAI3U,KAAKsZ,aALbvD,EAAWlC,eAQZa,KCbR,SAASqG,EAAU/D,EAAOoC,GAC7B,OAAKA,EAIM0B,EAAc9D,EAAOoC,GAHrB,IAAI,GHLqBnT,EGKO+Q,EHJpC,SAAUjB,GACb,IAAK,IAAIjU,EAAI,EAAGC,EAAMkE,EAAMjE,OAAQF,EAAIC,IAAQgU,EAAWpC,OAAQ7R,IAC/DiU,EAAWrH,KAAKzI,EAAMnE,IAE1BiU,EAAWlC,cALW,IAAU5N,EISxC,SAAS+U,EAASnD,GACd,IAAIrF,EAAQqF,EAAGrF,MAAoBqF,EAAG9B,WAC3BvD,MAAMA,GHHlBqI,IAAqBA,EAAmB,IAC3C,IAAI,EAA8B,WAC9B,SAASI,EAAaC,EAAMxW,EAAO8N,GAC/BxS,KAAKkb,KAAOA,EACZlb,KAAK0E,MAAQA,EACb1E,KAAKwS,MAAQA,EACbxS,KAAKmb,SAAoB,MAATD,EAyDpB,OAvDAD,EAAa3Q,UAAUgG,QAAU,SAAUoB,GACvC,OAAQ1R,KAAKkb,MACT,IAAK,IACD,OAAOxJ,EAAShD,MAAQgD,EAAShD,KAAK1O,KAAK0E,OAC/C,IAAK,IACD,OAAOgN,EAASc,OAASd,EAASc,MAAMxS,KAAKwS,OACjD,IAAK,IACD,OAAOd,EAASmC,UAAYnC,EAASmC,aAGjDoH,EAAa3Q,UAAU8Q,GAAK,SAAU1M,EAAM8D,EAAOqB,GAE/C,OADW7T,KAAKkb,MAEZ,IAAK,IACD,OAAOxM,GAAQA,EAAK1O,KAAK0E,OAC7B,IAAK,IACD,OAAO8N,GAASA,EAAMxS,KAAKwS,OAC/B,IAAK,IACD,OAAOqB,GAAYA,MAG/BoH,EAAa3Q,UAAU+Q,OAAS,SAAU3D,EAAgBlF,EAAOqB,GAC7D,OAAI6D,GAAiD,mBAAxBA,EAAehJ,KACjC1O,KAAKsQ,QAAQoH,GAGb1X,KAAKob,GAAG1D,EAAgBlF,EAAOqB,IAG9CoH,EAAa3Q,UAAUgR,aAAe,WAClC,IG7CmB9I,EAAO4G,EH8C1B,OADWpZ,KAAKkb,MAEZ,IAAK,IACD,OI9CT,WAEH,IADA,IAAI1J,EAAO,GACF8G,EAAK,EAAGA,EAAKzV,UAAUb,OAAQsW,IACpC9G,EAAK8G,GAAMzV,UAAUyV,GAEzB,IAAIc,EAAY5H,EAAKA,EAAKxP,OAAS,GACnC,OAAI4Y,EAAYxB,IACZ5H,EAAK+J,MACET,EAActJ,EAAM4H,IAGpB2B,EAAUvJ,GJmCFgK,CAAGxb,KAAK0E,OACnB,IAAK,IACD,OGlDW8N,EHkDOxS,KAAKwS,MG7CxB,IAAI,EAJV4G,EAIqB,SAAUrD,GAAc,OAAOqD,EAAUE,SAAS0B,EAAU,EAAG,CAAExI,MAAOA,EAAOuD,WAAYA,KAH3F,SAAUA,GAAc,OAAOA,EAAWvD,MAAMA,KHiDlE,IAAK,IACD,OAAO,IAEf,MAAM,IAAIc,MAAM,uCAEpB2H,EAAaQ,WAAa,SAAU/W,GAChC,YAAqB,IAAVA,EACA,IAAIuW,EAAa,IAAKvW,GAE1BuW,EAAaS,4BAExBT,EAAaU,YAAc,SAAUlI,GACjC,OAAO,IAAIwH,EAAa,SAAKpU,EAAW4M,IAE5CwH,EAAaW,eAAiB,WAC1B,OAAOX,EAAaY,sBAExBZ,EAAaY,qBAAuB,IAAIZ,EAAa,KACrDA,EAAaS,2BAA6B,IAAIT,EAAa,SAAKpU,GACzDoU,EA9DsB,GKEjC,IAcI,EAAqC,SAAU3F,GAE/C,SAASwG,EAAoBhG,EAAasD,EAAWjS,QACnC,IAAVA,IACAA,EAAQ,GAEZ,IAAIsO,EAAQH,EAAO3T,KAAK3B,KAAM8V,IAAgB9V,KAG9C,OAFAyV,EAAM2D,UAAYA,EAClB3D,EAAMtO,MAAQA,EACPsO,EAsBX,OA9BA,EAAkBqG,EAAqBxG,GAUvCwG,EAAoBd,SAAW,SAAUe,GACrC,IAAIC,EAAeD,EAAIC,aAAclG,EAAciG,EAAIjG,YACvDkG,EAAa1L,QAAQwF,GACrB9V,KAAKmU,eAET2H,EAAoBxR,UAAU2R,gBAAkB,SAAUD,GACpChc,KAAK8V,YACXnB,IAAI3U,KAAKoZ,UAAUE,SAASwC,EAAoBd,SAAUhb,KAAKmH,MAAO,IAAI+U,EAAiBF,EAAchc,KAAK8V,gBAE9HgG,EAAoBxR,UAAU0L,MAAQ,SAAUtR,GAC5C1E,KAAKic,gBAAgB,EAAaR,WAAW/W,KAEjDoX,EAAoBxR,UAAU2L,OAAS,SAAUxC,GAC7CzT,KAAKic,gBAAgB,EAAaN,YAAYlI,IAC9CzT,KAAKmU,eAET2H,EAAoBxR,UAAU4L,UAAY,WACtClW,KAAKic,gBAAgB,EAAaL,kBAClC5b,KAAKmU,eAEF2H,EA/B6B,CAgCtC,GAEEI,EAAkC,WAKlC,OAJA,SAA0BF,EAAclG,GACpC9V,KAAKgc,aAAeA,EACpBhc,KAAK8V,YAAcA,GAHU,GCpDjC,EAA+B,SAAUR,GAEzC,SAAS6G,EAAcC,EAAYC,EAAYjD,QACxB,IAAfgD,IACAA,EAAazQ,OAAO2Q,wBAEL,IAAfD,IACAA,EAAa1Q,OAAO2Q,mBAExB,IAAI7G,EAAQH,EAAO3T,KAAK3B,OAASA,KAajC,OAZAyV,EAAM2D,UAAYA,EAClB3D,EAAM8G,QAAU,GAChB9G,EAAM+G,qBAAsB,EAC5B/G,EAAMgH,YAAcL,EAAa,EAAI,EAAIA,EACzC3G,EAAMiH,YAAcL,EAAa,EAAI,EAAIA,EACrCA,IAAe1Q,OAAO2Q,mBACtB7G,EAAM+G,qBAAsB,EAC5B/G,EAAM/G,KAAO+G,EAAMkH,wBAGnBlH,EAAM/G,KAAO+G,EAAMmH,eAEhBnH,EA4EX,OAjGA,EAAkB0G,EAAe7G,GAuBjC6G,EAAc7R,UAAUqS,uBAAyB,SAAUjY,GACvD,IAAI6X,EAAUvc,KAAKuc,QACnBA,EAAQlW,KAAK3B,GACT6X,EAAQva,OAAShC,KAAKyc,aACtBF,EAAQ/T,QAEZ8M,EAAOhL,UAAUoE,KAAK/M,KAAK3B,KAAM0E,IAErCyX,EAAc7R,UAAUsS,eAAiB,SAAUlY,GAC/C1E,KAAKuc,QAAQlW,KAAK,IAAIwW,EAAY7c,KAAK8c,UAAWpY,IAClD1E,KAAK+c,2BACLzH,EAAOhL,UAAUoE,KAAK/M,KAAK3B,KAAM0E,IAErCyX,EAAc7R,UAAU+M,WAAa,SAAUtB,GAC3C,IAIIlB,EAJA2H,EAAsBxc,KAAKwc,oBAC3BD,EAAUC,EAAsBxc,KAAKuc,QAAUvc,KAAK+c,2BACpD3D,EAAYpZ,KAAKoZ,UACjBrX,EAAMwa,EAAQva,OAElB,GAAIhC,KAAK2T,OACL,MAAM,IAAI6E,EAYd,GAVSxY,KAAK6V,WAAa7V,KAAK8Y,SAC5BjE,EAAe,EAAaC,OAG5B9U,KAAK+R,UAAU1L,KAAK0P,GACpBlB,EAAe,IAAI,EAAoB7U,KAAM+V,IAE7CqD,GACArD,EAAWpB,IAAIoB,EAAa,IAAI,EAAoBA,EAAYqD,IAEhEoD,EACA,IAAK,IAAI1a,EAAI,EAAGA,EAAIC,IAAQgU,EAAWpC,OAAQ7R,IAC3CiU,EAAWrH,KAAK6N,EAAQza,SAI5B,IAASA,EAAI,EAAGA,EAAIC,IAAQgU,EAAWpC,OAAQ7R,IAC3CiU,EAAWrH,KAAK6N,EAAQza,GAAG4C,OASnC,OANI1E,KAAK8Y,SACL/C,EAAWvD,MAAMxS,KAAK+Y,aAEjB/Y,KAAK6V,WACVE,EAAWlC,WAERgB,GAEXsH,EAAc7R,UAAUwS,QAAU,WAC9B,OAAQ9c,KAAKoZ,WAAaiB,GAAOvS,OAErCqU,EAAc7R,UAAUyS,yBAA2B,WAO/C,IANA,IAAIjV,EAAM9H,KAAK8c,UACXL,EAAczc,KAAKyc,YACnBC,EAAc1c,KAAK0c,YACnBH,EAAUvc,KAAKuc,QACfS,EAAcT,EAAQva,OACtBib,EAAc,EACXA,EAAcD,KACZlV,EAAMyU,EAAQU,GAAaC,KAAQR,IAGxCO,IAQJ,OANID,EAAcP,IACdQ,EAAc3X,KAAKC,IAAI0X,EAAaD,EAAcP,IAElDQ,EAAc,GACdV,EAAQpK,OAAO,EAAG8K,GAEfV,GAEJJ,EAlGuB,CAmGhC,GAEEU,EAA6B,WAK7B,OAJA,SAAqBK,EAAMxY,GACvB1E,KAAKkd,KAAOA,EACZld,KAAK0E,MAAQA,GAHW,GCrGhC,IAAIyY,EAAgC,WAChC,SAASA,EAAeC,EAAWC,GAC/Brd,KAAKod,UAAYA,EACjBpd,KAAKqd,QAAUA,EAKnB,OAHAF,EAAe7S,UAAU3I,KAAO,SAAUoU,EAAYyB,GAClD,OAAOA,EAAOL,UAAU,IAAI,EAAiBpB,EAAY/V,KAAKod,UAAWpd,KAAKqd,WAE3EF,EARwB,GAU/B,EAAkC,SAAU7H,GAE5C,SAASgI,EAAiBxH,EAAasH,EAAWC,GAC9C,IAAI5H,EAAQH,EAAO3T,KAAK3B,KAAM8V,IAAgB9V,KAI9C,OAHAyV,EAAM2H,UAAYA,EAClB3H,EAAM4H,QAAUA,EAChB5H,EAAM8H,MAAQ,EACP9H,EAeX,OArBA,EAAkB6H,EAAkBhI,GAQpCgI,EAAiBhT,UAAU0L,MAAQ,SAAUtR,GACzC,IAAI6E,EACJ,IACIA,EAASvJ,KAAKod,UAAUzb,KAAK3B,KAAKqd,QAAS3Y,EAAO1E,KAAKud,SAE3D,MAAO9J,GAEH,YADAzT,KAAK8V,YAAYtD,MAAMiB,GAGvBlK,GACAvJ,KAAK8V,YAAYpH,KAAKhK,IAGvB4Y,EAtB0B,CAuBnC,GC9BF,IAAIE,EAA6B,WAC7B,SAASA,EAAYC,EAASJ,GAC1Brd,KAAKyd,QAAUA,EACfzd,KAAKqd,QAAUA,EAKnB,OAHAG,EAAYlT,UAAU3I,KAAO,SAAUoU,EAAYyB,GAC/C,OAAOA,EAAOL,UAAU,IAAI,EAAcpB,EAAY/V,KAAKyd,QAASzd,KAAKqd,WAEtEG,EARqB,GAW5B,EAA+B,SAAUlI,GAEzC,SAASoI,EAAc5H,EAAa2H,EAASJ,GACzC,IAAI5H,EAAQH,EAAO3T,KAAK3B,KAAM8V,IAAgB9V,KAI9C,OAHAyV,EAAMgI,QAAUA,EAChBhI,EAAM8H,MAAQ,EACd9H,EAAM4H,QAAUA,GAAW5H,EACpBA,EAaX,OAnBA,EAAkBiI,EAAepI,GAQjCoI,EAAcpT,UAAU0L,MAAQ,SAAUtR,GACtC,IAAI6E,EACJ,IACIA,EAASvJ,KAAKyd,QAAQ9b,KAAK3B,KAAKqd,QAAS3Y,EAAO1E,KAAKud,SAEzD,MAAO9J,GAEH,YADAzT,KAAK8V,YAAYtD,MAAMiB,GAG3BzT,KAAK8V,YAAYpH,KAAKnF,IAEnBmU,EApBuB,CAqBhC,GClCF,MAAM,EAAN,cACU,KAAAC,gBAA0B,CAAE1J,OAAQ,GACpC,KAAA2J,YAA2B,IAAIhR,YAAY,eAAgB,CAAEC,OAAQ7M,KAAK2d,kBAC3E,KAAAE,UAAwC,IAAI,EAAc,GAEjE,GAAGC,GACD,IFZmBV,EAAWC,EEY1BU,GFZeX,EEYU/Y,GAAmByZ,IAAYzZ,EAAE/C,KFXvD,SAAgCkW,GACnC,OAAOA,EAAOF,KAAK,IAAI6F,EAAeC,EAAWC,MEWjDW,EDbD,SAAaP,EAASJ,GACzB,OAAO,SAAsB7F,GACzB,GAAuB,mBAAZiG,EACP,MAAM,IAAIQ,UAAU,8DAExB,OAAOzG,EAAOF,KAAK,IAAIkG,EAAYC,EAASJ,KCQlC1X,CAAMtB,GAAmBA,GAIvC,OAFmBrE,KAAK6d,UAAUzF,KAAK2F,GAAe3F,KAAK4F,GAK7D,QAAQF,EAAiB3b,EAAY,MAAOuE,GAC1C,IAAI+H,EAAQ,IAAI7B,YAAYkR,EAAS,CAAEjR,OAAQ1K,IAE/C,OADAnC,KAAK6d,UAAUnP,KAAKD,GACbzO,KAGT,UAAU8d,EAAiBxa,GACzB,IAAIuR,EAAe7U,KAAKke,GAAGJ,GAE3B,OADIxa,GAASuR,EAAasC,UAAU7T,GAC7BuR,EAGT,YAAYiJ,EAAiBxa,GAE3B,OAAOtD,KAGT,OAAO0R,GACL,IAAImD,EAAe7U,KAAK6d,UAExB,OADInM,GAAUmD,EAAasC,UAAUzF,GAC9BmD,EAGT,OAAOnD,GAEL,OAAO1R,MC/CX,mC,wCCIA,MAAM,UAAiB,IAInB,cACIkO,QAJI,KAAAiQ,WAAkB,GAClB,KAAAzW,QAAe1H,KAMf,mBAAmBuO,GAEvB,OADAvO,KAAKme,WAAa5P,EACXvO,KAED,SAASsB,EAAoBiN,GAGnC,OADAvO,KADa,CAAE,WAAc,sBAAwBsB,IACxCiN,GACNvO,KAGD,SAAS8d,EAAiB3b,KAAeuE,GAEjD,OADAwH,MAAMqE,QAAQ5Q,KAAK3B,KAAM8d,EAAS3b,KAASuE,GACpC1G,KAGT,QAAQ8d,EAAiB3b,KAAeuE,GACpC,IAAI,WAAEyX,GAAene,KAKrB,OAJK8d,GAASvX,QAAQyR,KAAK,sDAAsD8F,sDAC7EA,KAAWK,EAAYA,EAAWL,GAASnc,KAAKwc,EAAYL,EAAS3b,KAASuE,GAC7E1G,KAAKgb,SAASrZ,KAAK3B,KAAM8d,EAAS3b,KAASuE,GAEzC1G,MCjCf,mC,8BCAA,6DAmBA,MAAMoe,UAAwB,IAO1B,YAAoBC,EAAsCvb,GACtDoL,MAAM,WADU,KAAAmQ,UAAsC,KAAAvb,OANlD,KAAAwb,WAAoC,IAAIC,iBACxC,KAAAC,UAAiC9U,SAASC,cAAc,OACzD,KAAA8U,SAAmB,GACnB,KAAAC,QAA2B,GAC3B,KAAAC,OAAmB,GAItB,IAAI,WAAEL,EAAU,UAAEE,GAAcxe,KAChCse,EAAWM,YAAYJ,GAGjB,qBAAqBC,GAC3B,OAAOA,EAAS5Y,QAAQ,0BAA0B,SAAiBgZ,EAAOC,EAAIC,GAE1E,MAAO,IADKD,EAAG/Y,MAAM,IAAmBJ,IAAKuC,GAAKA,EAAE8W,WAAW,IAAoBxZ,KAAK,UAClEuZ,QAIpB,kBAAkBN,GACxB,IAAIvV,EAAK,mBACLkI,GAAWqN,EAASnV,MAAMJ,IAAO,IAAIvD,IAAK2D,GAASA,EAAMzD,QAAQqD,EAAI,OAGzE,OAFAlJ,KAAK2e,OAAO3c,OAAS,EACrBhC,KAAK2e,OAAOtY,QAAQ+K,GACbqN,EAaX,IAAIA,EAAmB,IACnB,IAAI,QAAEJ,EAAO,UAAEG,GAAcxe,MACzB,MAAEoS,GAAUiM,EACZY,EAAOjf,KAAKkf,kBAAkBT,GAC9BQ,EAAOjf,KAAKmf,qBAAqBV,GACjCQ,EAAOZ,EAAQze,MAAMwf,YAAYH,EAA1BZ,CAAgCjM,EAAMjQ,MAOjD,OAJAqc,EAAUa,UAAYJ,EACtBjf,KAAKye,SAAWA,EAChBze,KAAKiS,YAAcjS,KAAK0e,QAAUhZ,MAAM4E,UAAUtE,MAAMrE,KAAK6c,EAAUc,YAEhEtf,MAIf,MAAMuf,UAAqB,IAIvB,YAAoBlB,EAAsCvb,GACtDoL,MAAM,QADU,KAAAmQ,UAAsC,KAAAvb,OAHnD,KAAA0c,OAAqB,IAAI,IAAM,IACtC,WAAyB,OAAOxf,KAAKwf,OAAOC,OAM5C,IAAIrN,EAAa,IAGb,OAFApS,KAAKwf,OAAOnZ,KAAK+L,GACjBpS,KAAKgS,SACEhS,MAKf,MAAM0f,EAQF,YAAoBrB,EAAsCvb,GAAtC,KAAAub,UAAsC,KAAAvb,OAPhD,KAAA4O,SAA6B,IAAIiO,iBAAkB,CAACxX,EAAG9D,IAAMrE,KAAKsQ,QAAQnI,EAAG9D,IAC7E,KAAAzD,UAAiBZ,KAAK8C,KAAKtC,cAAcI,UACnD,WAA6B,OAAOZ,KAAKqe,QAAQ5c,OACjD,WAA4B,OAAOzB,KAAKqe,QAAQlc,KAChD,eAAmC,OAAOnC,KAAKmC,KAAK3C,SACpD,eAAmC,OAAOQ,KAAKmC,KAAKyd,SAI5C,QAAQC,EAA2BnO,GACvC,IAAI,IAAIoO,KAAYD,EAAS7f,KAAK8f,EAASxe,MAAMwe,GAG7C,QAAQxe,EAAcwe,GAC1B,IAAI,OAAEre,EAAM,WAAEse,EAAU,aAAEC,GAAiBF,EACvCG,EAAQ,CAAE,iBAAkBF,EAAY,mBAAoBC,GAAgB1e,GAE5EkL,EAAI,IAAII,YAAYtL,EAAM,CAAEuL,OADnB,CAAEiT,WAAUG,WAGzBxe,EAAOwL,cAAcT,GACrB,IAAK,IAAI1K,EAAI,EAAGC,EAAMke,EAAMje,OAAQF,EAAIC,EAAKD,IAAK+P,EAAQpQ,EAAQH,EAAMwe,EAAUG,EAAMne,IAExF,SAAS+P,EAAQpQ,EAAcH,EAAcwe,EAA0BI,GACnE,IAAIrT,EAAS,CAAEiT,WAAUI,OAAMze,UAE3B0e,EAAU,CAAE,iBAAkB,cAAe,mBAAoB,iBAAmB7e,GACpF4G,EAAI,IAAI0E,YAFC,CAAE,iBAAkB,aAAc,mBAAoB,gBAAkBtL,GAErD,CAAEuL,WAC9BmG,EAAI,IAAIpG,YAAYuT,EAAS,CAAEtT,WAEnCqT,EAAKjT,cAAc/E,GACnBzG,EAAOwL,cAAc+F,GAGzB,OAAOhT,KAGH,UAAc8f,GAClB,IAAI,QAAEzB,EAAO,KAAE6B,EAAI,UAAEtf,GAAcZ,KAE3B,IAAI4M,YAAY,oBAAqB,CAAEC,OADlC,CAAEiT,cAGf9f,KAAK6R,QAAQ,iBAAkBiO,GAC/B9f,KAAK6R,QAAQ,mBAAoBiO,GAC7BA,EAASC,WAAW/d,QAAQpB,EAAUwf,UAAWN,EAASC,WAAW,IAErE,WAAeD,GACnB,IAAI,QAAEzB,EAAO,KAAE6B,EAAI,SAAE1gB,EAAQ,SAAEogB,GAAa5f,MACtCqgB,cAAend,EAAMzB,OAAQpC,GAAyCygB,EACxEvP,EAAOlR,EAAQihB,iBAAiBpd,GAChC2J,EAAS,CAAEiT,WAAUI,KAAM3P,EAAMgQ,UAAW,UAC5C1X,EAAI,IAAI+D,YAAY,WAAY,CAAEC,WAClCL,EAAI,IAAII,YAAY,qBAAsB,CAAEC,WAE1CxN,EAAQmhB,aAAatd,KAAQ2J,EAAO0T,UAAY,UACjD,CAAE,MAAQ,EAAM,WAAa,EAAM,IAAI,GAAQT,EAASnT,YAAaE,EAAO0T,UAAY,UAE7FlhB,EAAQ4N,cAAcT,GACjB,CAAE,QAAU,GAAQK,EAAO0T,YAAalhB,EAAQ4N,cAAe,IAAIL,YAAY,eAAgB,CAAEC,YACjG,CAAE,QAAU,GAAQA,EAAO0T,YAAahQ,EAAKtD,cAAcpE,GAE5D,cAAkBiX,GACtB,IAAI,QAAEzB,EAAO,KAAE6B,GAASlgB,KAGpB,QAAY8f,GAChB,IAAI,QAAEzB,EAAO,KAAE6B,GAASlgB,KAI5B,QAAQU,GACJ,IAAI,SAAEgR,EAAQ,KAAEwO,GAASlgB,KACrBU,EAAS,OAAH,QACN+f,YAAY,EACZC,WAAW,EACXC,eAAe,EACfC,SAAS,EACTC,mBAAmB,EACnBC,uBAAuB,GAEpBpgB,GAKP,OAFAgR,EAASpB,QAAQ4P,EAAMxf,GAEhBV,KAGX,aACI,IAAI,SAAE0R,GAAa1R,KAEnB,OADA0R,EAASqP,aACF/gB,MAKf,MAAMghB,EAWF,YAAoB3C,EAAsCvb,GAAtC,KAAAub,UAAsC,KAAAvb,OATlD,KAAAme,QAA4B,IAAI5gB,IAmDhC,KAAA6gB,UAAa1U,IACjB,IAAI,KAAE0T,GAASlgB,MACX,KAAEsB,EAAI,OAAEG,GAAoC+K,GAC1C2U,cAAexK,GAA2ClV,EAE5D2f,EAAM,IAAIxU,YAAY,IAAK,CAAEC,OAAQL,IAAM6U,EAAY,IAAIC,MAAMhgB,EAAM,CAAE8M,SAAS,IAKtF,OAHA3M,EAAOwL,cAAcmU,GACfzK,EAAO4K,WAAWrB,IAAQvJ,EAAO1J,cAAcoU,IAE9C,GAGJ,KAAAG,UAAaJ,IAChB,IAAMA,EAAIvU,OAAOpL,OAAOgf,WAAW,IAAIW,EAAIvU,OAAOvL,SAAW,OAAO,EACpE,IAAI,SAAEse,GAAa5f,MACb6M,OAAQL,GAAM4U,GAChB,KAAE9f,EAAI,OAAEG,GAAoC+K,EAC5CiV,EAAW,IAAIngB,KACfiP,EAAO9O,EAAOgf,WAAWgB,IACzB,KAAEve,EAAI,MAAEwB,GAAgB6L,EAGxBa,EAAU1M,EAAM4E,MADX,oBACwB,IAC3BoY,EAAM5U,EAAQzF,GAAW+J,EAE3BuQ,EAAS/B,EAAS9S,GAItB,OAHa,IAAInE,SAAS,KAAM,MAAO,SAAU,kCAAkCtB,KACtEY,CAAO0Z,EAAQ/B,EAAUpT,IA9E1C,aAAyB,OAAO9G,MAAMiN,KAAM3S,KAAKihB,QAAQ9c,QACzD,WAAWO,GAAmB1E,KAAKihB,QAAQW,QAASld,EAAMuT,QAAS3W,GAAQtB,KAAKihB,QAAQzf,IAAIF,EAAMA,IAClG,WAAmB,OAAOtB,KAAKqe,QAAQ5c,OACvC,YAA2B,OAAO4K,YAAY/B,UAE9C,WAAkB,OAAOtK,KAAKqe,QAAQlc,KACtC,eAAsB,OAAOnC,KAAKmC,KAAKyd,SAU/B,6BAA6BpI,GACjC,IAAIqK,EAAOrK,EAAOvK,cAElB,SAASX,EAAME,GACX,IAAI,KAAElL,GAASkL,EAAG4U,EAAM,IAAIxU,YAAY,IAAK,CAAEC,OAAQL,IAEvD,MADK,CAAE,KAAK,GAAQlL,IAAQugB,EAAKlgB,KAAK3B,KAAMohB,GACrCS,EAAKlgB,KAAK3B,KAAMwM,GAM3B,MAHI,CAAE,eAAiB,GAAQqV,EAAK3e,QAAQsU,EAAOvK,cAAgBX,GACnEtM,KAAK6hB,KAAOA,EAEJrK,EAAOvK,gBAAkBX,EAGrC,QAAQqS,GACJ,IAAI,KAAEuB,EAAI,MAAE5T,GAAUtM,KAMtB,OAJAA,KAAK2e,OAASA,EACd3e,KAAK2e,OAAO1G,QAAU3W,GAAS4e,EAAKpS,iBAAiBxM,EAAMtB,KAAKkhB,WAAW,IAC3EhB,EAAKpS,iBAAiB,IAAK9N,KAAKwhB,WAAW,GAEpCxhB,KAGX,aACI,IAAI,KAAEkgB,EAAI,MAAE5T,GAAUtM,KAKtB,OAHAkgB,EAAK4B,oBAAoB,IAAK9hB,KAAKkhB,WACnC5U,EAAMW,cAAgBjN,KAAK6hB,KAEpB7hB,MAsCf,MAAMoB,UAAgB,IAMlB,YAAsB2gB,GAClB7T,MAAM6T,EAAQjf,KAAKtC,cAAcjB,UADf,KAAAwiB,UAJf,KAAA5f,KAAYnC,KAAK+hB,QAAQ5f,KACzB,KAAAV,OAAczB,KAAK+hB,QAAQtgB,OAC3B,KAAAb,UAAiBZ,KAAK8C,KAAKtC,cAAcI,UAHhD,WAAuB,OAAOZ,KAAK+hB,QAAQjf,KAS3C,KAAKX,EAAY,IAGb,OAAOnC,MAKf,MAAMgiB,UAAoB5gB,EAEtB,YAAY2gB,GACR7T,MAAM6T,GAGA,kBAAkBvV,GACxBjG,QAAQyR,KAAK,sDAAuDxL,IAO5E,MAAMyV,EAEF,YAAoB5D,EAA0B5c,EAAyBqB,GAAnD,KAAAub,UAA0B,KAAA5c,SAAyB,KAAAqB,OAEvE,IAAIrB,EAAiByE,EAA2BuG,GAE5C,OADkBM,QAAQ5H,IAAI1D,EAAQyE,EAAKuG,IAMnD,MAAMyV,EAEF,YAAoB7D,EAA0B5c,EAA8BqB,GAAxD,KAAAub,UAA0B,KAAA5c,SAA8B,KAAAqB,OAE5E,IAAIrB,EAAsByE,EAA2BuG,GACjD,IAAI8D,EAAaxD,QAAQ5H,IAAI1D,EAAQyE,EAAKuG,GACtCnJ,EAA0B,IAAI6e,EAAeniB,KAAKqe,QAAS9N,EAAMvQ,KAAK8C,MAG1E,OAFmB,IAAIyJ,MAAMgE,EAAMjN,IAO3C,MAAM6e,EAEF,YAAoB9D,EAA0B5c,EAAsBqB,GAAhD,KAAAub,UAA0B,KAAA5c,SAAsB,KAAAqB,OAEpE,IAAIrB,EAAcyE,EAA2BuG,GAEzC,OADkBM,QAAQ5H,IAAI1D,EAAQyE,EAAKuG,GAI/C,IAAIhL,EAAcyE,EAA2BxB,EAAY+H,GACrD,IAAI2V,EAAU3gB,EAAOyE,GACjBqD,EAAcwD,QAAQvL,IAAIC,EAAQyE,EAAKxB,EAAO+H,GAIlD,MAFI,CAAE/H,OAAO,EAAM2d,WAAW,GAAQnc,IADvBkc,IAAY7Y,GAC6BvJ,KAAK6R,QAAQ,UAAW,CAAElF,SAAUyV,IAErF7Y,EAGX,eAAe9H,EAAcyE,GACzB,IAAIkc,EAAU3gB,EAAOyE,GACjBqD,EAAcwD,QAAQuV,eAAe7gB,EAAQyE,GAIjD,MAFI,CAAExB,OAAO,EAAM2d,WAAW,GAAQnc,IADvBkc,IAAY7Y,GAC6BvJ,KAAK6R,QAAQ,UAAW,CAAElF,SAAUyV,IAErF7Y,EAGX,QAAQsI,EAAiB1P,GACrB,IAAI,OAAEV,GAAWzB,MACb,KAAEkD,EAAI,MAAEwB,EAAK,aAAE6d,GAAiB9gB,EAChC8e,EAAY,CAAE,QAAW,SAAU,QAAW,UAAY1O,GAC1DvQ,EAAO,CAAE,QAAW,oBAAqB,QAAW,qBAAuBuQ,GAC3E2Q,EAAO,GAAGtf,KAAQ2O,IAClBhF,EAAS,OAAH,wBAAQ1K,GAAI,CAAEV,SAAQ8gB,eAAcrf,OAAMwB,QAAO+d,IAAKtgB,EAAKwK,SAAU4T,cAC3EmC,EAAI,IAAI9V,YAAYtL,EAAM,CAAEuL,WAC5B8V,EAAI,IAAI/V,YAAY4V,EAAM,CAAE3V,WAKhC,OAHA0V,EAAatV,cAAcyV,GAC3BH,EAAatV,cAAc0V,GAEpB3iB,MAKf,MAAM4iB,UAA4BZ,EAY9B,YAAYD,GACR7T,MAAM6T,GAZA,KAAAc,YAA4B,IAAI7B,EAAahhB,KAAMA,KAAK8C,MACxD,KAAAggB,UAA6B,IAAIpD,EAAgB1f,KAAMA,KAAK8C,MAC/D,KAAA4b,QAA2B,IAAIN,EAAgBpe,KAAMA,KAAK8C,MAC1D,KAAAsP,MAAsB,IAAImN,EAAavf,KAAMA,KAAK8C,MAClD,KAAAod,KAAgBlgB,KAAKyB,OACrB,KAAApC,QAAmB,IAAIkN,MAAOvM,KAAKyB,OAAQ,IAAIwgB,EAAajiB,KAAMA,KAAKyB,OAAQzB,KAAK8C,OACpF,KAAA2d,WAA2BzgB,KAAKyB,OAAOgf,WACvC,KAAAsC,MAAsB,IAAIxW,MAAOvM,KAAKygB,WAAY,IAAIyB,EAAkBliB,KAAMA,KAAKyB,OAAOgf,WAAYzgB,KAAK8C,OAC3G,KAAAkgB,SAAyBhjB,KAAKyB,OAAOwhB,UACrC,KAAAC,SAA0BljB,KAAKyB,OAAuB0hB,QAoCnD,KAAAC,kBAAqB5W,IAC3BjG,QAAQyR,KAAK,iDAAkDxL,GAC/D0B,MAAMkV,kBAAkB5W,IAGlB,KAAA6W,sBAAyB7W,MAEzB,KAAA8W,mBAAsB9W,MAvC5B,IAAI,OAAE/K,EAAM,KAAEU,GAAS4f,EASvB,OAPA/hB,KAAK0e,QAAQjM,OAAO,CAAEP,OAASE,GAAUpS,KAAKujB,qBAAqBnR,KACnEpS,KAAKoS,MAAMK,OAAO,CAAEP,OAASE,GAAUpS,KAAKwjB,kBAAkBpR,KAC9DpS,KAAK8iB,UAAUW,UACfhiB,EAAOqM,iBAAiB,eAAgB9N,KAAKojB,mBAAmB,GAChE3hB,EAAOqM,iBAAiB,mBAAoB9N,KAAKqjB,uBAAuB,GACxE5hB,EAAOqM,iBAAiB,gBAAiB9N,KAAKsjB,oBAAoB,GAE3DtjB,KAGX,EAAE0jB,GACE,IAAI,UAAE9iB,GAAcZ,KAEpB,OADaY,EAAUwf,UAAUsD,GAIrC,kBAAkBtR,GACdpS,KAAK0e,QAAQld,IAAIxB,KAAK0e,QAAQD,UAGlC,qBAAqBrM,GACjB,IAAI,QAAEsM,EAAO,UAAEoE,EAAS,YAAED,EAAW,OAAEphB,GAAWzB,KAElD6iB,EAAYY,QAAQ/E,EAAQC,QAC5BmE,EAAU/B,aACTtf,EAAmB4d,UAAY,GAChC,IAAK,IAAIsE,KAASvR,EAAQ3Q,EAAmBmd,YAAY+E,GACzDb,EAAUW,WAclB,MAAMG,UAA8B5B,EAMhC,YAAYD,GACR7T,MAAM6T,GANH,KAAA7B,KAAalgB,KAAKyB,OAClB,KAAAoiB,UAAkB,IAAItX,MAAOvM,KAAKyB,OAAQ,IAAI0gB,EAAeniB,KAAMA,KAAKyB,OAAQzB,KAAK8C,OACrF,KAAAzD,QAAmBW,KAAKyB,OAAO8gB,aAC/B,KAAAuB,MAAa9jB,KAAKmC,KAAK2hB,MASpB,KAAAV,kBAAqB5W,IAC3BjG,QAAQyR,KAAK,mDAAoDxL,GACjE0B,MAAMkV,kBAAkB5W,IAPxB,IAAI,OAAE/K,GAAWsgB,EAEjB,OADAtgB,EAAO8gB,aAAazU,iBAAiB,eAAgB9N,KAAKojB,mBAAmB,GACtEpjB,MAWf,MAAM+jB,UAAyB/B,EAE3B,YAAYD,GACR7T,MAAM6T,IAId,MAAMiC,UAA4BhC,EAE9B,YAAYD,GACR7T,MAAM6T,IAKd,MAAMkC,GAEN,MAAMC,UAA4B9iB,EAC9B,aAAuB,OAAOpB,KAAK8C,KAAKtC,cAIxC,YAAYuhB,GAER,OADA7T,MAAM6T,GACC/hB,MAKf,MAAMmkB,GACN,MAAMC,GAqBN,MAAMC,UAAuBjjB,EAIzB,YAAY2gB,GAGR,OAFA7T,MAAM6T,GAvBd,SAAgBA,GACZ,IAAI,KAAEzgB,EAAI,OAAEG,EAAM,KAAEU,EAAI,KAAEW,GAASif,EAanC,OAFc,IAAI3gB,EAVJ,CACV,QAAawhB,EACb,UAAegB,EACf,KAAUG,EACV,QAAaC,EACb,KAAUC,EACV,QAAaC,EACb,aAAkBC,EAClB,IAASC,GACV9iB,IACuBygB,GAYRuC,CAAOvC,M,6BC7f7B,oDAGIniB,EAAQ,IAAI,IAchB,MAAM2kB,EAaF,YAAY1jB,EAAe,IAZnB,KAAAiC,KAAa,KACd,KAAA0hB,aAA8B,IAAI,IAClC,KAAAC,aAA6BzkB,KAAKwkB,aAAavkB,QAE5C,KAAAykB,WAA6B,IAAIrkB,IACjC,KAAAskB,gBAAmBrhB,GAAuBkJ,GAAmBlJ,EAAQ3B,KAAK3B,KAAMwM,EAAEK,OAAQL,GAC1F,KAAAoY,eAAwC,IAAI,IAAsB,GAAI,CAC5E,CAAEhW,QAAS5O,KAAK2kB,gBAAgB3kB,KAAK6kB,qBACrC,CAAEjW,QAAS5O,KAAK2kB,gBAAgB3kB,KAAK8kB,kBACrC,CAAElW,QAAS5O,KAAK2kB,gBAAgB3kB,KAAK+kB,uBAIrC,IAAI,aAAEN,GAAiBzkB,KAQvB,OANAykB,EAEKhkB,KAAOukB,GAAQhlB,KAAKilB,kBAAkBD,IAEtCvkB,KAAOukB,GAAQhlB,KAAKogB,UAAU4E,IAE5BhlB,KAlBX,cAAgB,OAAIA,KAAK8C,KAAa9C,KAAK8C,KAAKvC,QAAqB,KAqBrE,QAAQuC,GACJ,IAAI,cAAEtC,GAAkBsC,GACpB,YAAEhC,GAAgBN,EAKtB,OAHAR,KAAK8C,KAAOA,EACZ9C,KAAKwkB,aAAa7jB,QAAQG,GAEnBA,EAGX,kBAAkBkkB,GACd,IAAI,KAAEliB,GAAS9C,MACX,QAAEO,GAAYuC,GACZlB,QAASsjB,EAAY,IAAI7kB,KAAUE,EAEzC,IAAK,IAAK2F,EAAK8C,KAAQkc,EAAWllB,KAAKmlB,iBAAiBnc,EAAK9C,EAAKgf,GAElE,OAAOF,EAEX,iBAAiB/jB,EAAqBiF,EAAagf,GAC/C,IAAI,KAAEpiB,GAAS9C,MACX,QAAEoB,EAAO,MAAEG,EAAK,SAAE/B,GAAayB,EACnC,IAAIkB,EAAI,eAAyBV,OAAQ7B,EAAOggB,SAAU,KAAMpgB,WAAU6e,QAAS,MAASpd,GACxFod,EAAU,IAAIjd,EAAQ,CAAEE,KAAM,UAAWG,OAAQ7B,EAAOuC,OAAMW,SAC9D8c,EAAW,IAAIre,EAAM8c,GACzBlc,EAAKyd,SAAWA,EAChBzd,EAAKkc,QAAUA,EAGnB,iBAAiB2G,GACb,IAAI,KAAEliB,GAAS9C,MACX,QAAEO,EAAO,cAAEC,GAAkBsC,GAC7B,QAAEsiB,EAAO,cAAEC,GAAkB7kB,GAC3B8kB,OAAQC,EAAW,IAAIllB,KAAUE,EAEvC,IAAK,IAAK2F,EAAK8C,KAAQuc,EAAUvlB,KAAKwlB,gBAAgBxc,EAAK9C,EAAKqf,GAEhE,OAAOP,EAEX,gBAAgB/jB,EAAqBiF,EAAagf,GAC9C,IAAI,KAAEpiB,GAAS9C,MACX,QAAEoB,EAAO,MAAEG,EAAK,SAAE/B,GAAayB,EACnC,IAAIkB,EAAI,eAAyBV,OAAQ7B,EAAOggB,SAAU,KAAMpgB,WAAU6e,QAAS,MAASpd,GACxFod,EAAU,IAAIjd,EAAQ,CAAEE,KAAM,SAAUG,OAAQ7B,EAAOuC,OAAMW,SAC7D8c,EAAW,IAAIre,EAAM8c,GACzBlc,EAAKyd,SAAWA,EAChBzd,EAAKkc,QAAUA,EAGnB,UAAU6B,GACN,IAAKA,EAAM,OAAOA,EAClB,GAAKlgB,KAAK0kB,WAAW/W,IAAIuS,GAAQ,OAAOA,EACxC,IAAM0E,eAAgBa,GAAQzlB,KAC1BwM,EAAI,IAAII,YAAY,iBAAkB,CAAEC,OAAaqT,KAEjDrT,OAAQtD,EAAS,KADnBiD,EAAIiZ,EAAI7W,QAAQpC,GACUA,IAE5B,YAAEkZ,EAAaC,WAAYhP,EAAQiP,gBAAiBC,EAAUC,YAAapX,EAAMqX,WAAYpC,GAAUpa,EAQ3G,OAJIoa,GAAO3jB,KAAKogB,UAAUuD,GACtBjV,GAAM1O,KAAKogB,UAAU1R,GACzB1O,KAAK0kB,WAAWljB,IAAI0e,EAAMA,GAEnBA,EAGH,gBAAgBA,EAAoBjf,EAAqBzB,EAAkB4P,GAC/E,IAAM8Q,EAAK9O,QAAQ5R,GAAY,OAC/B,IAAI,KAAEsD,GAAS9C,MACX,WAAEI,EAAU,SAAEE,GAAawC,GAC3B,MAAEvB,EAAK,QAAEH,GAAYH,GACrB,SAAE+kB,EAAQ,WAAE1G,GAAeY,EAC3B+F,EAAYvgB,MAAM4E,UAAUtE,MAAMrE,KAAK2d,GAEvC4G,EAAUxc,SAASC,cAAc,OACjCwc,EAAa,IAAI9lB,IAUrB4lB,EAAUhO,QAAS/P,GARnB,SAAqBie,EAAiCD,EAAkBE,GACpE,IAAMC,KAAMnjB,EAAO,IAAOkjB,EAAQlG,EAAOkG,EAAOE,WAAU,GACpDH,EAAWxY,IAAIzK,IAAQijB,EAAW3kB,IAAI0B,EAAM,IAElDijB,EAAWhhB,IAAIjC,GAAMmD,KAAK6Z,GAC1BgG,EAAQtH,YAAYsB,GAGAqG,CAAYJ,EAAYD,EAAShe,IAEzD,IAAI4b,EAAQ9jB,KAAKwmB,iBAAiBtG,GAAOuG,EAAiCrmB,EAAW+E,IAAI2e,GAErF3hB,EAAI,eAAyB3C,WAAUiC,OAAQye,EAAMN,SAAU,KAAMkE,QAAOzF,QAAS,KAAM4H,YAAWC,UAASC,cAAellB,GAC7Hb,EAAWuN,IAAImW,KAAS3hB,EAAKwU,OAAS,CAAEsP,UAAWQ,EAAWR,UAAWE,WAAYM,EAAWN,WAAYD,QAASO,EAAWP,QAAS3kB,MAAOklB,EAAWllB,QAChK,IAAI8c,EAAU,IAAIjd,EAAQ,CAAEE,KAAM,UAAWG,OAAQye,EAAM/d,OAAMW,SAC7D8c,EAAW,IAAIre,EAAM8c,GACzBlc,EAAKyd,SAAWA,EAChBzd,EAAKkc,QAAUA,EAGf/d,EAASkB,IAAI0e,EAAM/d,GACnB/B,EAAWoB,IAAIoe,EAAUzd,GAGrB,mBAAmB+d,GACvB,IAAM,CAAE,GAAK,GAAQA,EAAK8F,UAAa,OAAO9F,EAC9C,IAAI,QAAE3f,EAAU,IAAOP,MACjBX,QAAS+P,EAAY,IAAI/O,KAAUE,GACrC,WAAEkgB,GAAeP,EACjB2D,EAAYpD,EAAW,GAE3B,IAAK,IAAKva,EAAK8C,KAAQoG,EAAWpP,KAAK0mB,gBAAgBxG,EAAMlX,EAAK9C,EAAKkJ,GAGvE,OAFIyU,GAAW7jB,KAAK2mB,qBAAqB9C,KAAc3D,EAAKO,YAErDP,EAGH,qBAAqBA,KAAqBxZ,GAC9C,IAAMwZ,EAAO,OAAOA,EACpB,IAAM,CAAE,CAAC0G,KAAKC,iBAAiB,GAAQ3G,EAAK8F,UAAa,OAAO9F,EAChE,IAAMlgB,KAAKO,QAAQsjB,UAAY,OAAO3D,EACtC,IAAI,KAAEpd,EAAI,QAAEvC,EAAU,IAAOP,MACzB,SAAEM,EAAQ,WAAEF,GAAe0C,GACzB+gB,UAAWiD,EAAc,IAAIzmB,KAAUE,GACzC,KAAE2C,EAAI,MAAEwB,GAAUwb,EAAMjf,EAAW6lB,EAAY3hB,IAAIjC,GAInD6jB,EAHY,WAGUC,KAAK9jB,GAC3B+jB,EAHa,aAGWD,KAAK9jB,GAC7BgkB,EAAaJ,EAAYnZ,IAAI,OAC7BwZ,EAAcL,EAAYnZ,IAAI,OAC9ByZ,EAAYL,GAAaG,EACzBG,EAAcJ,GAAcE,EAGhC,IAAML,EAAYnZ,IAAIzK,KAAUkkB,IAAaC,EAAa,OAAOrnB,KAAK2mB,wBAAwBjgB,GAC1F0gB,IAAUnmB,EAAW6lB,EAAY3hB,IAAI,QACrCkiB,IAAYpmB,EAAW6lB,EAAY3hB,IAAI,QAE3C,IAAI,QAAE/D,EAAO,MAAEG,EAAK,SAAE/B,GAAwByB,EAC1C6iB,EAAQ9jB,KAAKwmB,iBAAiBtG,EAAKqC,cAAekE,EAAiCrmB,EAAW+E,IAAI2e,GAClG3hB,EAAI,eAAyBV,OAAQye,EAAMN,SAAU,KAAMpgB,WAAU6e,QAAS,KAAM3Z,QAAOof,SAAU7iB,GACpGb,EAAWuN,IAAImW,KAAS3hB,EAAKwU,OAAS,CAAEsP,UAAWQ,EAAWR,UAAWE,WAAYM,EAAWN,WAAYD,QAASO,EAAWP,QAAS3kB,MAAOklB,EAAWllB,QAChK,IAAI8c,EAAU,IAAIjd,EAAQ,CAAEE,KAAM,YAAaG,OAAQye,EAAM/d,OAAMW,SAC/D8c,EAAW,IAAIre,EAAM8c,GAMzB,OALAlc,EAAKyd,SAAWA,EAChBzd,EAAKkc,QAAUA,EACf/d,EAASkB,IAAI0e,EAAM/d,GACnB/B,EAAWoB,IAAIoe,EAAUzd,GAEnBuE,EAAK1E,OACJhC,KAAK2mB,wBAAwBjgB,GADTwZ,EAIvB,gBAAgBA,GACpB,IAAK,CAAE,GAAK,GAAQA,EAAK8F,UAAY,OAAO9F,EAC5C,IAAMlgB,KAAKO,QAAQ+mB,KAAO,OAAOpH,EACjC,IAAI,QAAE3f,GAAYP,MACZsnB,KAAMC,GAA6ChnB,EAEzD,IAAK,IAAK2F,EAAK8C,KAAQue,EAAQvnB,KAAKwnB,mBAAmBtH,EAAMlX,EAAK9C,EAAKqhB,GAEvE,OAAOrH,EAGH,mBAAmBA,GACvB,IAAK,CAAE,GAAK,GAAQA,EAAK8F,UAAY,OAAO9F,EAC5C,IAAMlgB,KAAKO,QAAQknB,QAAU,OAAOvH,EACpC,IAAI,QAAE3f,GAAYP,MACZynB,QAASC,GAAmDnnB,EAElE,IAAK,IAAK2F,EAAK8C,KAAQ0e,EAAW1nB,KAAKwnB,mBAAmBtH,EAAMlX,EAAK9C,EAAKwhB,GAE1E,OAAOxH,EAGH,iBAAiBA,GACrB,IAAMlgB,KAAK8C,KAAKxC,SAASqN,IAAIuS,KAAUA,EAAKiB,cAAgB,OAAO,KACnE,IAAMnhB,KAAK8C,KAAKxC,SAASqN,IAAIuS,GAAQ,OAAOlgB,KAAKwmB,iBAAiBtG,EAAKiB,eACvE,IAAI,KAAEre,GAAS9C,MACX,SAAEM,GAAawC,EAAM7B,EAAWX,EAAS6E,IAAI+a,IAC7C,SAAEN,GAAa3e,EAGnB,OADIif,GAASA,EAAiB9d,IAA0C,MAAnC8d,EAAiB9d,GAAGiG,YAAoB9B,QAAQe,IAAI,MAAOtH,KAAK8C,KAAKxC,SAASqN,IAAIuS,GAAOA,EAAKyF,YAC5H/F,EAGH,mBAAmBM,EAA2Bjf,EAAqBiF,EAAayhB,GACpF,IAAI,KAAE7kB,GAAS9C,MACX,WAAEI,EAAU,SAAEE,GAAawC,GAC3B,SAAEkjB,EAAQ,UAAE3D,GAAcnC,GAC1B,QAAE9e,EAAO,MAAEG,EAAK,SAAE/B,GAAayB,EAEnC,IAAMiF,EAAI8gB,KAAK3E,KAAe,CAAE,SAAS,GAAQ7iB,GAAa,OAC9D,IAAIskB,EAAQ9jB,KAAKwmB,iBAAiBtG,EAAKiB,eACnC7f,EAAO,CAAE,CAACslB,KAAKgB,WAAY,OAAQ,CAAChB,KAAKiB,cAAe,WAAa7B,GACrE7jB,EAAI,eAAyBV,OAAQye,EAAMN,SAAU,KAAMpgB,WAAU6e,QAAS,KAAMyF,SAAU7iB,GAC9Fod,EAAU,IAAIjd,EAAQ,CAAEE,OAAMG,OAAQye,EAAM/d,OAAMW,SAClD8c,EAAW,IAAIre,EAAM8c,GAEzBlc,EAAKyd,SAAWA,EAChBzd,EAAKkc,QAAUA,EACfje,EAAWoB,IAAIoe,EAAUzd,GACzB7B,EAASkB,IAAI0e,EAAM/d,M,8BCjPF9B,ICAzB,MAAMynB,EAKF,YAAY3lB,EAAY,IAGpB,OAPI,KAAAA,KAAY,GAKhBnC,KAAK4hB,QACL5hB,KAAKmC,KAAO,IAAKA,GACVnC,KANX,aAAe,OAAOA,KAAKwK,OAC3B,YAAc,OAAQxK,KAAKgC,OAAS,EAQ5B,UAAUwE,GAEd,OADWuhB,KAAKC,UAAUxhB,GAGtB,YAAYyhB,GAEhB,OADaF,KAAKG,MAAMD,GAGpB,KAAKzhB,GACT,IAAIyhB,EAAOjoB,KAAKmoB,UAAU3hB,GAC1B,OADmCA,EAASxG,KAAKooB,YAAYH,GAIjE,KAAKvjB,GAED,OADA1E,KAAKmC,KAAKkE,KAAK3B,GACR1E,KAEX,MAEI,OADYA,KAAKmC,KAAKoZ,MAG1B,OAEI,OADYvb,KAAKmC,KAAKnC,KAAKwU,OAG/B,QAEI,OADAxU,KAAKmC,KAAKH,OAAS,EACZhC,KAEX,OAEI,OADYA,KAAKmC,KAAKH,OAG1B,UAEI,OADUhC,KAAKwK,OAInB,SACI,OAAOxK,KAAKqoB,UAEhB,WAEI,OADWroB,KAAKmoB,UAAWnoB,KAAKqoB,WAGpC,UACI,OAAOroB,KAAKmC,KAAK6D,MAAM,ICzD/B,MAAMsiB,EAKF,YAAYnmB,EAAY,IAGpB,OAPI,KAAAA,KAAY,GAKhBnC,KAAK4hB,QACL5hB,KAAKmC,KAAO,IAAKA,GACVnC,KANX,aAAe,OAAOA,KAAKwK,OAC3B,YAAc,OAAO,EAQb,UAAUhE,GAEd,OADWuhB,KAAKC,UAAUxhB,GAGtB,YAAYyhB,GAEhB,OADaF,KAAKG,MAAMD,GAGpB,KAAKzhB,GACT,IAAIyhB,EAAOjoB,KAAKmoB,UAAU3hB,GAC1B,OADmCA,EAASxG,KAAKooB,YAAYH,GAIjE,QAAQvjB,GAEJ,OADA1E,KAAKmC,KAAKkE,KAAK3B,GACR1E,KAEX,UAEI,OADYA,KAAKmC,KAAKqG,QAG1B,QAEI,OADYxI,KAAKmC,KAAKnC,KAAKwU,OAG/B,QAEI,OADAxU,KAAKmC,KAAKH,OAAS,EACZhC,KAEX,OAEI,OADYA,KAAKmC,KAAKH,OAG1B,UAEI,OADUhC,KAAKwK,OAInB,SACI,OAAOxK,KAAKqoB,UAEhB,WAEI,OADWroB,KAAKmoB,UAAWnoB,KAAKqoB,WAGpC,UACI,OAAOroB,KAAKmC,KAAK6D,MAAM,IC9D/B,qE,6BCCA,IACMuiB,EADFC,EAEK,WAUL,YAToB,IAATD,IAMTA,EAAOE,QAAQzhB,QAAU0C,UAAYA,SAASgf,MAAQ1hB,OAAO2hB,OAGxDJ,GAIPK,EAAY,WACd,IAAIL,EAAO,GACX,OAAO,SAAkB9mB,GACvB,QAA4B,IAAjB8mB,EAAK9mB,GAAyB,CACvC,IAAIonB,EAAcnf,SAASof,cAAcrnB,GAEzC,GAAIuF,OAAO+hB,mBAAqBF,aAAuB7hB,OAAO+hB,kBAC5D,IAGEF,EAAcA,EAAYG,gBAAgBC,KAC1C,MAAOzc,GAEPqc,EAAc,KAIlBN,EAAK9mB,GAAUonB,EAGjB,OAAON,EAAK9mB,IApBA,GAwBZynB,EAAc,GAElB,SAASC,EAAaC,EAAUC,EAAMxoB,GACpC,IAAK,IAAIiB,EAAI,EAAGA,EAAIunB,EAAKrnB,OAAQF,IAAK,CACpC,IAAIwnB,EAAO,CACTC,IAAKF,EAAKvnB,GAAG,GACb0nB,MAAOH,EAAKvnB,GAAG,GACf2nB,UAAWJ,EAAKvnB,GAAG,IAGjBonB,EAAYE,GAAUtnB,GACxBonB,EAAYE,GAAUtnB,GAAGwnB,GAEzBJ,EAAYE,GAAU/iB,KAAKqjB,EAASJ,EAAMzoB,KAKhD,SAAS8oB,EAAmB9oB,GAC1B,IAAI+oB,EAAQlgB,SAASC,cAAc,SAC/B8W,EAAa5f,EAAQ4f,YAAc,GAEvC,QAAgC,IAArBA,EAAWoJ,MAAuB,CAC3C,IAAIA,EAAmD,KAEnDA,IACFpJ,EAAWoJ,MAAQA,GAQvB,GAJA3lB,OAAOC,KAAKsc,GAAYxI,SAAQ,SAAU/R,GACxC0jB,EAAME,aAAa5jB,EAAKua,EAAWva,OAGP,mBAAnBrF,EAAQkpB,OACjBlpB,EAAQkpB,OAAOH,OACV,CACL,IAAInoB,EAASmnB,EAAU/nB,EAAQkpB,QAAU,QAEzC,IAAKtoB,EACH,MAAM,IAAI6R,MAAM,2GAGlB7R,EAAOmd,YAAYgL,GAGrB,OAAOA,EAcT,IACMI,EADFC,GACED,EAAY,GACT,SAAiBxV,EAAO0V,GAE7B,OADAF,EAAUxV,GAAS0V,EACZF,EAAUG,OAAO1B,SAASjjB,KAAK,QAI1C,SAAS4kB,EAAoBR,EAAOpV,EAAOD,EAAQ8V,GACjD,IAAId,EAAMhV,EAAS,GAAK8V,EAAId,IAI5B,GAAIK,EAAMU,WACRV,EAAMU,WAAWC,QAAUN,EAAYzV,EAAO+U,OACzC,CACL,IAAIiB,EAAU9gB,SAAS+gB,eAAelB,GAClCjK,EAAasK,EAAMtK,WAEnBA,EAAW9K,IACboV,EAAMc,YAAYpL,EAAW9K,IAG3B8K,EAAWtd,OACb4nB,EAAMe,aAAaH,EAASlL,EAAW9K,IAEvCoV,EAAMhL,YAAY4L,IAKxB,SAASI,EAAWhB,EAAO/oB,EAASwpB,GAClC,IAAId,EAAMc,EAAId,IACVC,EAAQa,EAAIb,MACZC,EAAYY,EAAIZ,UAepB,GAbID,EACFI,EAAME,aAAa,QAASN,GAE5BI,EAAMiB,gBAAgB,SAGpBpB,GAAaqB,OACfvB,GAAO,uDAAuD3jB,OAAOklB,KAAKC,SAASC,mBAAmBjD,KAAKC,UAAUyB,MAAe,QAMlIG,EAAMU,WACRV,EAAMU,WAAWC,QAAUhB,MACtB,CACL,KAAOK,EAAM7D,YACX6D,EAAMc,YAAYd,EAAM7D,YAG1B6D,EAAMhL,YAAYlV,SAAS+gB,eAAelB,KAI9C,IAAI0B,EAAY,KACZC,EAAmB,EAEvB,SAASxB,EAASW,EAAKxpB,GACrB,IAAI+oB,EACA1X,EACAqC,EAEJ,GAAI1T,EAAQoqB,UAAW,CACrB,IAAIE,EAAaD,IACjBtB,EAAQqB,IAAcA,EAAYtB,EAAmB9oB,IACrDqR,EAASkY,EAAoBhkB,KAAK,KAAMwjB,EAAOuB,GAAY,GAC3D5W,EAAS6V,EAAoBhkB,KAAK,KAAMwjB,EAAOuB,GAAY,QAE3DvB,EAAQD,EAAmB9oB,GAC3BqR,EAAS0Y,EAAWxkB,KAAK,KAAMwjB,EAAO/oB,GAEtC0T,EAAS,YAxFb,SAA4BqV,GAE1B,GAAyB,OAArBA,EAAMjE,WACR,OAAO,EAGTiE,EAAMjE,WAAW+E,YAAYd,GAmFzBwB,CAAmBxB,IAKvB,OADA1X,EAAOmY,GACA,SAAqBgB,GAC1B,GAAIA,EAAQ,CACV,GAAIA,EAAO9B,MAAQc,EAAId,KAAO8B,EAAO7B,QAAUa,EAAIb,OAAS6B,EAAO5B,YAAcY,EAAIZ,UACnF,OAGFvX,EAAOmY,EAAMgB,QAEb9W,KAKN+W,EAAOC,QAAU,SAAUnC,EAAUC,EAAMxoB,GAgBzC,OAfAA,EAAUA,GAAW,IAGRoqB,WAA0C,kBAAtBpqB,EAAQoqB,YACvCpqB,EAAQoqB,UAAYzC,KAGtBY,EAAWvoB,EAAQ2qB,KAAOpC,EAAWvoB,EAAQ2qB,KAAOpC,EACpDC,EAAOA,GAAQ,GAEVH,EAAYE,KACfF,EAAYE,GAAY,IAG1BD,EAAaC,EAAUC,EAAMxoB,GACtB,SAAgB4qB,GAGrB,GAFAA,EAAUA,GAAW,GAE2B,mBAA5CvnB,OAAOoG,UAAUjC,SAAS1G,KAAK8pB,GAAnC,CAIKvC,EAAYE,KACfF,EAAYE,GAAY,IAG1BD,EAAaC,EAAUqC,EAAS5qB,GAEhC,IAAK,IAAI2D,EAAIinB,EAAQzpB,OAAQwC,EAAI0kB,EAAYE,GAAUpnB,OAAQwC,IAC7D0kB,EAAYE,GAAU5kB,KAGxB0kB,EAAYE,GAAUpnB,OAASypB,EAAQzpB,OAEF,IAAjCknB,EAAYE,GAAUpnB,eACjBknB,EAAYE,O,6BClOzBkC,EAAOC,QAAU,SAAUG,GACzB,IAAIrC,EAAO,GAqCX,OAnCAA,EAAKhhB,SAAW,WACd,OAAOrI,KAAK2F,KAAI,SAAUtC,GACxB,IAAIqb,EAoCV,SAAgCrb,EAAMqoB,GACpC,IAAIhN,EAAUrb,EAAK,IAAM,GAErBsoB,EAAatoB,EAAK,GAEtB,IAAKsoB,EACH,OAAOjN,EAGT,GAAIgN,GAAgC,mBAATZ,KAAqB,CAC9C,IAAIc,GAWWnC,EAXekC,EAa5BE,EAASf,KAAKC,SAASC,mBAAmBjD,KAAKC,UAAUyB,MACzDtnB,EAAO,+DAA+DyD,OAAOimB,GAC1E,OAAOjmB,OAAOzD,EAAM,QAdrB2pB,EAAaH,EAAWI,QAAQpmB,KAAI,SAAU6R,GAChD,MAAO,iBAAiB5R,OAAO+lB,EAAWK,YAAc,IAAIpmB,OAAO4R,EAAQ,UAE7E,MAAO,CAACkH,GAAS9Y,OAAOkmB,GAAYlmB,OAAO,CAACgmB,IAAgBpmB,KAAK,MAOrE,IAAmBikB,EAEboC,EACA1pB,EAPJ,MAAO,CAACuc,GAASlZ,KAAK,MArDJymB,CAAuB5oB,EAAMqoB,GAE3C,OAAIroB,EAAK,GACA,UAAUuC,OAAOvC,EAAK,GAAI,MAAMuC,OAAO8Y,EAAS,KAGlDA,KACNlZ,KAAK,KAKV6jB,EAAKvnB,EAAI,SAAUvB,EAAS2rB,GACH,iBAAZ3rB,IAETA,EAAU,CAAC,CAAC,KAAMA,EAAS,MAG7B,IAAK,IAAIuB,EAAI,EAAGA,EAAIvB,EAAQyB,OAAQF,IAAK,CACvC,IAAIuB,EAAO,GAAGuC,OAAOrF,EAAQuB,IAEzBoqB,IACG7oB,EAAK,GAGRA,EAAK,GAAK,GAAGuC,OAAOsmB,EAAY,SAAStmB,OAAOvC,EAAK,IAFrDA,EAAK,GAAK6oB,GAMd7C,EAAKhjB,KAAKhD,KAIPgmB,I,yDCvCT,MAAM,UAAiB,IAOnB,YAAYxoB,GACRqN,MAAM,CAAE9L,GAAI,QAJT,KAAAxC,MAAmB,IAAI,IAmBtB,KAAAusB,YAAe3f,IACnB,IAAI,KAAElL,EAAI,OAAEuL,GAAWL,GACjB4f,cAAe7d,GAAavO,KAC9B8M,EAASyB,EAASjN,GAElBwL,GAAQA,EAAOnL,KAAK4M,EAAU/B,IAnBlC,IAAI,SAAE6f,EAAQ,eAAEC,EAAc,cAAEC,EAAa,aAAEC,GAAiB3rB,EAC5D4rB,EAAe,IAAID,EAAaxsB,MAChC0sB,EAAiB,IAAIJ,EAAetsB,KAAMysB,GAC1CL,EAAgB,IAAIG,EAAcvsB,KAAMysB,GAG5CzsB,KAAKqsB,SAAWA,EAChBrsB,KAAKysB,aAAeA,EACpBzsB,KAAK0sB,eAAiBA,EACtB1sB,KAAKosB,cAAgBA,EACrBpsB,KAAK2C,SAAS,aAAc+pB,GAC5B1sB,KAAKyS,OAAO,CAAE/D,KAAM1O,KAAKmsB,cAY7B,KAAKrO,EAAiB3b,KAAeuE,GAEjC,OADA1G,KAAKgb,SAAS8C,EAAS3b,KAASuE,GACzB1G,MCnCf,MAAMoB,EAIF,YAAsB7B,GAClB,OADkB,KAAAA,WACXS,KAJX,YAAc,OAAOA,KAAKT,SAASK,MACnC,eAAiB,OAAOI,KAAKT,SAAS8sB,SAM5B,IAAIvO,GAGV,OAFOA,KAAW9d,KAAKqsB,UAAY9lB,QAAQyR,KAAK,qBAAqB8F,kCACjEA,EAAkB9d,KAAKqsB,SAASvO,IAAYA,EAIpD,GAAGA,GACKA,EAAkB9d,KAAKmF,IAAI2Y,GAC/B,OAAO9d,KAAKT,SAAS2e,GAAGJ,GAE5B,QAAQA,EAAiB3b,KAAeuE,GAChCoX,EAAkB9d,KAAKmF,IAAI2Y,GAE/B,OADA9d,KAAKT,SAASgT,QAAQuL,EAAS3b,KAASuE,GACjC1G,KAEX,UAAU8d,EAAiBxa,GACnBwa,EAAkB9d,KAAKmF,IAAI2Y,GAE/B,OADA9d,KAAKT,SAAS4X,UAAU2G,EAASxa,GAC1BtD,KAEX,YAAY8d,EAAiBxa,GACrBwa,EAAkB9d,KAAKmF,IAAI2Y,GAE/B,OADA9d,KAAKT,SAAS4U,YAAY2J,EAASxa,GAC5BtD,KAEX,OAAO0R,GAEH,OADA1R,KAAKT,SAASkT,OAAOf,GACd1R,KAEX,OAAO0R,GAEH,OADA1R,KAAKT,SAASotB,OAAOjb,GACd1R,MCzCf,qE,kGCCA,IAAa4sB,EAAb,MAEI,YAAoBliB,GAAA,KAAAA,IAMZ,KAAAmiB,cAAiBrgB,IACrBxM,KAAK0K,EAAEwV,KAAK4J,aAAa,SAAU,SAG/B,KAAAgD,cAAiBtgB,IACrBxM,KAAK0K,EAAEwV,KAAK4J,aAAa,SAAU,UAVnCpf,EAAEwT,GAAG,sBAAsB/G,UAAUnX,KAAK6sB,eAC1CniB,EAAEwT,GAAG,sBAAsB/G,UAAUnX,KAAK8sB,eAC1CpiB,EAAE0H,MAAM5Q,IAAIxB,QALP4sB,E,mUAAiB,EAD7B,sBAAY,CAAEptB,SAAU,gBACZotB,I,kECLb,IAAIG,EAAM,EAAQ,IACFrO,EAAU,EAAQ,IAIC,iBAFvBA,EAAUA,EAAQsO,WAAatO,EAAQuO,QAAUvO,KAG/CA,EAAU,CAAC,CAAC4M,EAAOxpB,EAAI4c,EAAS,MAG9C,IAAI7d,EAAU,CAEd,OAAiB,OACjB,WAAoB,GAIhBqsB,GAFSH,EAAIzB,EAAOxpB,EAAI4c,EAAS7d,GAEtB6d,EAAQyO,OAASzO,EAAQyO,OAAS,IAIjD7B,EAAOC,QAAU2B,G,iBClBjB3B,EADkC,EAAQ,GAChC6B,EAA4B,IAE9B/mB,KAAK,CAACilB,EAAOxpB,EAAI,mRAAwR,KAEjTwpB,EAAOC,QAAUA,I","file":"v.sdk.backdrop.bundle.66a0e8c39af966b7b13f.js","sourcesContent":["\r\nfunction bootstrap(target) {\r\n    var element = target;\r\n    var selector = this.selector;\r\n    var data = element.dataset || {};\r\n    var ex = /[\\s]+/img;\r\n    var slug = data.behavior || element.v || '';\r\n    var components = slug.split(ex);\r\n    var children = element.children;// element.querySelectorAll(selector);\r\n    (this, document, data, slug, components, children);\r\n    \r\n    var resolveScope = function resolveScope(parent, child) {\r\n        var isDirectDescendant = (child.parentNode === parent);\r\n        if (isDirectDescendant) bootstrap.call(this, child);\r\n    }.bind(this, element);\r\n    \r\n    // components.forEach(this.bootstrap.bind(this, element));\r\n    // Array.prototype.forEach.call(children, resolveScope);\r\n    \r\n    // ... or? ...\r\n    \r\n    Array.prototype.forEach.call(children, resolveScope);  // TODO: Optimize!!!\r\n    if (!!slug) components.forEach(this.bootstrap.bind(this, element));\r\n}\r\n\r\nfunction $bootstrap(root, medium) {\r\n    var scopeSelector = '[data-behavior]'\r\n      , $root = $(root)\r\n      , $parent = $root.find(scopeSelector)\r\n      , hasBehavior = $root.is(scopeSelector)\r\n      ;\r\n    var slug = $root.attr('data-behavior')\r\n      , formattedSlug = slug && slug.replace(/^[,;\\s]+|[,;\\s]+$/g, '').replace(/[,;\\s]+/g, '|').replace(/[|]+$/g, '') || ''\r\n      , moduleIds = $.unique(formattedSlug.split('|')).sort()\r\n      , scopeId = moduleIds.join(' ')\r\n      ;\r\n    var childMedium = medium.$spawn(new function ChildScope() { this.element = root; });\r\n    \r\n\r\n    var resolveBehavior = function resolveBehavior(scope, behavior, i, a) {\r\n        var scope = ($root.is('html')) ? document : scope;\r\n        this.start(behavior, scope, scopeId, childMedium);\r\n    }.bind(this, $root[0]);\r\n\r\n    var resolveChildren = function resolveChildren(i, scope) {\r\n        var $firstScope = $(scope);\r\n        if (!$($firstScope.parent()).is($parent)) {\r\n            autoRegisterModules.call(this, $firstScope, childMedium);\r\n        }\r\n\r\n    }.bind(this);\r\n\r\n    moduleIds.forEach(resolveBehavior);\r\n    $parent.each(resolveChildren);\r\n\r\n}\r\n\r\nclass DefaultDirector {}\r\n\r\nfunction DefaultSandbox(anything) { return anything; }  // see The Decorator Pattern @GoF\r\nfunction DefaultServicesSandbox(utils) { return utils; }\r\nfunction DefaultNodeSandbox(element) { return element; }\r\n\r\nexport { bootstrap, $bootstrap, DefaultDirector, DefaultSandbox, DefaultServicesSandbox, DefaultNodeSandbox as DefaultComponentSandbox };\r\n","\r\nimport { Utilities, Deferred } from '@motorman/core/utilities';\r\nimport { IEventAggregator } from '@motorman/core/eventaggregator.interface';\r\nimport { bootstrap, $bootstrap, DefaultDirector, DefaultSandbox, DefaultComponentSandbox, DefaultServicesSandbox } from './defaults';\r\nimport { ElementEngine } from './element-engine';\r\n\r\n\r\nclass DOMUtilities {\r\n    \r\n    constructor(protected node: Node) {}\r\n    \r\n    forEach(node: Node): Node {\r\n        // var { isConnected, parentNode: parent, previousSibling: previous, nextSibling: next, firstChild: child } = result;\r\n        \r\n        // // RECURSION\r\n        // if (result !== node) return this.parseNode(result);  // reparse. assume replacement occurred. do not continue for next or child.\r\n        // if (child) this.parseNode(child);  // TCO???\r\n        // if (next) this.parseNode(next);  // TCO???\r\n        // this.dTemplateReady.resolve(true);  // gets fulfilled after last element processed. noop after that.\r\n        \r\n        return node;  // result can still equal node\r\n    }\r\n    \r\n}\r\n\r\n\r\ntype ModuleType = string | 'service'|'element'|'attribute'|'IoT' | ''|'component'|'directive'|'';\r\n\r\ninterface IModuleMetadata {\r\n    type: ModuleType;\r\n    selector: string;\r\n    Class: any;\r\n    Sandbox?: any;  // sandbox\r\n}\r\n\r\ninterface IBootstrap {  // Note similarity to The Command Pattern. implementer only needs Instance.execute and not necessarily an \"action\"\r\n    new(context: Core, action?: string);\r\n    execute(environment: any): any;\r\n}\r\ninterface IConfiguration {\r\n    environment: any;\r\n    director: IEventAggregator;  // maybe unnecessary. perhaps sandbox should be provided by V.register(metadata);\r\n    selector: string;\r\n    Sandbox: (typeof DefaultSandbox)|any;  // perhaps sandbox should be provided by V.register(metadata);\r\n    bootstrap: IBootstrap;\r\n}\r\n\r\nvar director = new DefaultDirector();\r\nvar DEFAULT_CONFIG = {  // ... defaults\r\n    director,\r\n    selector: '[data-v]' || '[data-behavior]',\r\n    datasets: '[v-attribute]',  // includes <script type=\"application/json\"> { items: [...] } </scrpt>\r\n    // bootstrap: bootstrap,\r\n    decorators: { services: DefaultServicesSandbox, components: DefaultComponentSandbox, },\r\n};\r\n\r\nclass Core {\r\n    private dConfiguration: Deferred<any> = new Deferred();\r\n    private pConfiguration: Promise<any> = this.dConfiguration.promise;\r\n    private dInitialization: Deferred<any> = new Deferred();\r\n    private pInitialization: Promise<any> = this.dInitialization.promise;\r\n    private utils: Utilities = new Utilities();\r\n    // private engine: ElementEngine = new ElementEngine(DefaultComponentSandbox, director);\r\n    public $instances: Map<any, any> = new Map();\r\n    public $targets: Map<Node, any> = new Map();\r\n    public modules: any = { };\r\n    public configuration: any = DEFAULT_CONFIG;\r\n    \r\n    constructor() {\r\n        var { pConfiguration, pInitialization } = this;\r\n        \r\n        pConfiguration\r\n            .then( (config) => this.dInitialization.resolve(config) )\r\n            ;\r\n        pInitialization\r\n            .then( (config) => this.bootstrap(config) )\r\n            ;\r\n        return this;\r\n    }\r\n    \r\n    init(options) {\r\n        var { configuration } = this;\r\n        // this.dInitialization.resolve({ ...configuration, options });\r\n        return this;\r\n    }\r\n    \r\n    bootstrap(config: IConfiguration) {\r\n        var { environment, bootstrap } = config;\r\n        bootstrap.execute(this);\r\n    }\r\n    \r\n    configure(config) {\r\n        this.utils.extend(this.configuration, config);\r\n        // this.engine = new ElementEngine(this.configuration.decorators.components, this.configuration.director);\r\n        this.dConfiguration.resolve(this.configuration);\r\n        return this.utils.extend({ }, this.configuration);\r\n    }\r\n    \r\n    register(metadata: IModuleMetadata) {\r\n        var { pConfiguration } = this;\r\n        pConfiguration.then( (config: IConfiguration) => this.registerModule(config, metadata) );\r\n        return this;\r\n    }\r\n    private registerModule(config: IConfiguration, metadata: IModuleMetadata) {\r\n        var { modules } = this;\r\n        var { selector: _selector, Sandbox: _Sandbox } = config;\r\n        var { type, selector = _selector, Class, Sandbox = _Sandbox } = metadata;\r\n        \r\n        if ( !modules[type] ) modules[type] = new Map<string, IModuleMetadata>();\r\n        modules[type].set(selector, { ... metadata, type, selector, Class, Sandbox });\r\n        \r\n        return this;\r\n    }\r\n    \r\n    // define(definition) {\r\n    //     var { name, Class, options } = definition;\r\n    //     var { dConfiguration } = this, { promise: pConfiguration } = dConfiguration;\r\n        \r\n    //     pConfiguration\r\n    //         .then( (config) => this.engine.define(name, Class, options) )\r\n    //         ;\r\n    //     return this;\r\n    // }\r\n    \r\n    arm(options) {  // automatically register modules\r\n        var config = this.configuration\r\n          , bootstrap = config.bootstrap\r\n          , target = options.target\r\n          ;\r\n        \r\n        this.startServices();\r\n        bootstrap.call(config, target, this);\r\n    }\r\n    \r\n    startServices() {\r\n        var { configuration, modules } = this;\r\n        var { service: registry } = modules;\r\n        for (let i = 0, len = registry.length; i < len; i++) this.startService(registry[i], i, registry);\r\n        return this;\r\n    }\r\n    private startService(metadatum: IModuleMetadata, i: number, metadata: IModuleMetadata[]) {\r\n        // ...\r\n        // var { configuration, utils } = this, { director, decorators } = configuration;\r\n        // var { services: ServiceSandbox = DefaultServicesSandbox } = decorators;\r\n        // var Service = _service.Constructor\r\n        //   , sandbox = new ServiceSand?box(utils, director)\r\n        //   , service = new Service(sandbox)\r\n        //   ;\r\n        // service.init();\r\n    }\r\n    \r\n    /**\r\n     * Gets called by this.configuration.bootstrap\r\n     * TODO: Rename `details` to `api` and provide an API for mapping, starting, stopping & destroying (etc) modules.\r\n     */\r\n    bootstrapX(element, data, id) {\r\n        if (!element || !id) return null;\r\n        // if (!this.components[id]) return this.utils.console.warn(\"Unregistered Component: \" + id) && null || null;\r\n        \r\n        var { configuration: config } = this\r\n          , { director, decorators } = config\r\n          , { components: ComponentSandbox = DefaultComponentSandbox } = decorators\r\n          ;\r\n        // var component = this.components[id]\r\n        //   , Component = component.Constructor\r\n        //   , sandbox = new ComponentSandbox(element, director)\r\n        //   , instance = new Component(sandbox)\r\n        //   , data = data || { }\r\n        //   ;\r\n        var details = {\r\n            id: id,\r\n            // instance: instance,\r\n            element: element,\r\n            data: data,\r\n        };\r\n        // instance.init(data);\r\n        \r\n        return details;\r\n    }\r\n    \r\n}\r\n\r\nexport { Core };\r\n","\r\nimport { Core } from './core';\r\n\r\n\r\nvar Facade = function Facade(core) {\r\n    var thus = this;\r\n    \r\n    function configure() {\r\n        return core.configure.apply(core, arguments);\r\n    }\r\n    \r\n    function register(metadata) {\r\n        core.register(metadata);\r\n        return this;\r\n    }\r\n    \r\n    function bootstrap(options) {\r\n        core.init(options);\r\n        return this;\r\n    }\r\n    \r\n    // export precepts\r\n    this.utils = core.utils;\r\n    this.config = configure;\r\n    this.register = register;\r\n    this.bootstrap = bootstrap;\r\n    \r\n    return this;\r\n};\r\n\r\n/**\r\n * API\r\n */\r\nvar Vertex = new (function Vertices(Core, Facade) {\r\n    \r\n    var V = Facade.call( function V() {\r\n        if (this instanceof V) return ( new Vertices(Core, Facade) );\r\n        return V.register.apply(V, arguments);\r\n    }, new Core() );\r\n    \r\n    return V;\r\n})(Core, Facade);\r\n\r\nexport { Vertex };\r\n","\r\nimport { Utilities, Deferred } from \"@motorman/core/utilities\";\r\nimport { IEventAggregator } from \"@motorman/core/eventaggregator.interface\";\r\nimport { StrictCommand as Command } from \"@motorman/core/utilities/patterns/behavioral\";\r\nimport { ChainOfResponsibility } from \"@motorman/core/utilities/patterns/behavioral\";\r\n\r\ntype ListenerMap = { type: string, name: string, handler: (e: Event, ...splat: any[]) => any };\r\ntype EventEmitter = IEventAggregator&(Comm|Hub);\r\n\r\nvar utils = new (class ElementUtilities extends Utilities {\r\n    \r\n    composeCommand(component: any, name: string) {\r\n        var command = new Command(component, name);\r\n        return command;\r\n    }\r\n    composeExecutor(component: any, name: string) {\r\n        var command = this.composeCommand(component, name), { execute } = command;\r\n        return execute;\r\n    }\r\n    mapExecutor(component: any, item: any) {\r\n        var { name } = item;\r\n        var handler = this.composeExecutor(component, name), details = { ...item, handler };\r\n        return details;\r\n    }\r\n    \r\n})();\r\n\r\nclass Channels {\r\n    ['LEFECYCLE:ELEMENT:CREATED'] = 'vcomm://created/element';\r\n    ['LEFECYCLE:ELEMENT:CONNECTED'] = 'vcomm://connected/element';\r\n    ['ELEMENT:TEMPLATE:FOUND'] = 'vcomm://found/element/template';\r\n    ['ELEMENT:MUTATION:OBSERVED'] = 'vcomm://observed/element/mutation';\r\n    ['PROXY:INVOKED'] = 'vcomm://invoked/proxy';\r\n    ['PROXY:CONSTRUCT:INVOKED'] = 'vcomm://invoked/proxy/construct';\r\n    ['PROXY:HAS:INVOKED'] = 'vcomm://invoked/proxy/has';\r\n    ['PROXY:GET:INVOKED'] = 'vcomm://invoked/proxy/get';\r\n    ['PROXY:SET:INVOKED'] = 'vcomm://invoked/proxy/set';\r\n    ['PROXY:DELETE:INVOKED'] = 'vcomm://invoked/proxy/delete';\r\n    ['PROXY:APPLY:INVOKED'] = 'vcomm://invoked/proxy/apply';\r\n    ['PROXY:MOCK:INVOKED'] = 'vcomm://invoked/proxy/mock';\r\n}\r\nclass Hub implements IEventAggregator {\r\n    private subscriptions: any = { };\r\n    public channels: Channels = new Channels();\r\n\r\n    constructor() {}\r\n    \r\n    private invoke(subscription, data) {\r\n        var { channel, handler, context } = subscription;\r\n        var e = new CustomEvent(channel, { detail: data });\r\n        handler.call(context, e);\r\n        return this;\r\n    }\r\n\r\n    publish(channel: string, data?: any, ...more: any[]) {\r\n        if (!this.subscriptions[channel]) this.subscriptions[channel] = [ ];\r\n        var subscriptions = this.subscriptions[channel];\r\n        for (let i = 0, len = subscriptions.length; i < len; i++) this.invoke(subscriptions[i], data);\r\n        return this;\r\n    }\r\n    subscribe(channel, handler) {\r\n        if (!this.subscriptions[channel]) this.subscriptions[channel] = [ ];\r\n        var subscription = { channel, handler, context: this };\r\n        this.subscriptions[channel].push(subscription);\r\n        return this;\r\n    }\r\n    unsubscribe(channel, handler) {\r\n        if (!this.subscriptions[channel]) this.subscriptions[channel] = [ ];\r\n        // this.target.removeEventListener(channel, handler, false);\r\n        return this;\r\n    }\r\n\r\n}\r\nclass Comm implements IEventAggregator {\r\n    private target = new EventTarget();\r\n    public channels: Channels = new Channels();\r\n\r\n    constructor() {}\r\n\r\n    publish(channel: string, data?: any, ...more: any[]) {\r\n        var e = new CustomEvent(channel, { detail: data });\r\n        this.target.dispatchEvent(e);\r\n        return this;\r\n    }\r\n    subscribe(channel, handler) {\r\n        this.target.addEventListener(channel, handler, false);\r\n        return this;\r\n    }\r\n    unsubscribe(channel, handler) {\r\n        this.target.removeEventListener(channel, handler, false);\r\n        return this;\r\n    }\r\n\r\n}\r\n\r\nclass ConstructorProxy {\r\n    private comm: any;\r\n    private Sandbox: any;\r\n    private element: HTMLElement;\r\n    private director: any;\r\n    public sandbox: any;\r\n\r\n    constructor({ comm, Sandbox, element, director }) {\r\n        this.comm = comm;\r\n        this.Sandbox = Sandbox;\r\n        this.element = element;\r\n        this.director = director;\r\n    }\r\n\r\n    construct(Target, args) {\r\n        var { Sandbox, comm, element, director } = this;\r\n        var sandbox = new Sandbox(element, comm, director);\r\n        var params = [].concat(sandbox, 'extra');\r\n        var data = { type: 'construct', Target, args };\r\n        var result = Reflect.construct(Target, params /*, PrototypeConstructor*/);\r\n        \r\n        this.sandbox = sandbox;\r\n        comm.publish(comm.channels['PROXY:INVOKED'], data);\r\n        comm.publish(comm.channels['PROXY:CONSTRUCT:INVOKED'], data);\r\n        \r\n        return result;\r\n    }\r\n    \r\n}\r\n\r\nclass MemberProxy {\r\n    private comm: any;\r\n    private source: any;\r\n    private element: HTMLElement;\r\n\r\n    constructor({ comm, source, element }) {\r\n        this.comm = comm;\r\n        this.source = source;\r\n        this.element = element;\r\n    }\r\n\r\n    has(target: any, key: any) {\r\n        var { source, comm } = this;\r\n        var data = { type: 'has', source, key };\r\n        var result = Reflect.has(source, key);\r\n        \r\n        comm.publish(comm.channels['PROXY:INVOKED'], data);\r\n        comm.publish(comm.channels['PROXY:HAS:INVOKED'], data);\r\n        \r\n        return result;\r\n    }\r\n\r\n    get(target: any, key: any, receiver: any) {\r\n        // if (target[key].call) return new Proxy( target[key], new MethodProxy({ comm: this.comm, source: this.source, element: this.element }) );\r\n        var { source, comm, element } = this;\r\n        var data = { type: 'get', source, key };\r\n        var result = Reflect.get(source, key);  // omit receiver to get key of source\r\n        \r\n        comm.publish(comm.channels['PROXY:INVOKED'], data);\r\n        comm.publish(comm.channels['PROXY:GET:INVOKED'], data);\r\n        \r\n        return result;\r\n    }\r\n\r\n    set(target: any, key: any, value: any, receiver: any) {\r\n        var { source, comm } = this;\r\n        var data = { type: 'set', source, key, value };\r\n        var result = Reflect.set(source, key, value);\r\n        \r\n        comm.publish(comm.channels['PROXY:INVOKED'], data);\r\n        comm.publish(comm.channels['PROXY:SET:INVOKED'], data);\r\n        \r\n        return result\r\n    }\r\n\r\n    deleteProperty(target: Function, key: any) {\r\n        var { source, comm } = this;\r\n        var data = { type: 'delete', source, key };\r\n        var result = Reflect.deleteProperty(source, key);\r\n        \r\n        comm.publish(comm.channels['PROXY:INVOKED'], data);\r\n        comm.publish(comm.channels['PROXY:DELETE:INVOKED'], data);\r\n        \r\n        return result;\r\n    }\r\n\r\n}\r\n\r\nclass MethodProxy {\r\n    private comm: any;\r\n    private source: any;\r\n    private element: HTMLElement;\r\n\r\n    constructor({ comm, source, element }) {\r\n        this.comm = comm;\r\n        this.source = source;\r\n        this.element = element;\r\n    }\r\n\r\n    apply(target, thus, args) {\r\n        var { source, comm } = this;\r\n        var data = { type: 'apply', source, target, thus, args };\r\n        var result = target.call(source, ...args);\r\n        // var result = source[target.name](...args);\r\n        // var result = target.call(thus, ...args);\r\n        // var result = Reflect.apply(target, thus, args);\r\n        \r\n        comm.publish(comm.channels['PROXY:INVOKED'], data);\r\n        comm.publish(comm.channels['PROXY:APPLY:INVOKED'], data);\r\n        \r\n        return result;\r\n    }\r\n\r\n}\r\n\r\nclass ProxyManager {  // sets up & manages proxy relationships\r\n    \r\n}\r\n\r\nclass Comparitor {\r\n    public previous: any = undefined;\r\n    get name(): string { return this.attr.name; }\r\n    get current(): any { return this.component[ this.name ]; }\r\n    set current(value: any) { this.attr.value = value; }\r\n    get equal(): boolean { return this.detect(); }\r\n    get dirty(): boolean { return !this.equal; }\r\n    \r\n    constructor(private comm: EventEmitter, private component: any, private attr: Attr) {\r\n        var { name, value } = attr;\r\n        this.previous = value;\r\n        return this;\r\n    }\r\n    \r\n    detect() {\r\n        var { comm, name, previous, current } = this;\r\n        var equal = (previous === current);\r\n        var details = { name, previous, current, equal };\r\n        \r\n        if (!equal) comm.publish(comm.channels['ELEMENT:ATTRIBUTE:CHANGE'], details);\r\n        return equal;\r\n    }\r\n    \r\n    update() {\r\n        var { name, component } = this;\r\n        this.previous = this.current = component[name];\r\n        return this;\r\n    }\r\n    \r\n}\r\n\r\nclass TemplateVariable {  // TODO: this could probably just have attr passed in while using getters for everything\r\n    name: string = '';\r\n    attr: Attr = null;\r\n    element: HTMLElement = null;\r\n    \r\n    constructor(options: any = {}) {\r\n        var { name, attr, element } = options;\r\n        \r\n        this.name = name || this.name;\r\n        this.attr = attr || this.attr;\r\n        this.element = element || this.element;\r\n        \r\n        return this;\r\n    }\r\n    \r\n}\r\nclass TemplateListener extends TemplateVariable {\r\n    type: string = '';\r\n    handler: (e: Event) => any;\r\n    \r\n    constructor(options: any = {}) {\r\n        super(options);\r\n        var { type, handler } = options;\r\n        \r\n        this.type = type || this.type;\r\n        this.handler = handler || this.handler;\r\n        \r\n        return this;\r\n    }\r\n    \r\n}\r\nclass TemplateManagementOptions {\r\n    // reReference: RegExp = /^#(.+)$/;\r\n    reAttrIn: RegExp = /\\[(\\w*)\\]/;\r\n    reStructural: RegExp = /^\\*(\\w*)$/;\r\n    reListener: RegExp = /\\((\\w*)\\)/;\r\n    reListenerValue: RegExp = /(\\w*)\\((.*)\\)/;\r\n    // reInterpolable: RegExp = /{{([^{}]*)}}/g;\r\n}\r\nclass AttributeManager {\r\n    get name() { return this.attr.name; }\r\n    get value() { return this.attr.value; }\r\n    get element() { return this.attr.ownerElement; }\r\n    \r\n    constructor(protected attr: Attr) {\r\n        var { name, value, ownerElement: element } = attr;\r\n        attr.addEventListener('attributechange', this.handleChange, true);\r\n        attr.addEventListener('mutation', (e) => console.log('MUTATION IS A NATIVE EVENT!'), true);\r\n        attr.addEventListener('attributechange', (e) => console.log('MUTATION EVENT!'), true);\r\n        return this;\r\n    }\r\n    \r\n    destroy() {\r\n        var { attr } = this;\r\n        attr.removeEventListener('change', this.handleChange, false);\r\n        return this;\r\n    }\r\n    \r\n    private handleChange = (e: CustomEvent) => {\r\n        var { name, value, element, attr } = this;\r\n        var detail = { name, value, element, attr }, event = new CustomEvent('attributechange', { detail });\r\n        console.log('@AttrManager # handleChange', e, this);\r\n        element.dispatchEvent(event);\r\n        \r\n    };\r\n    \r\n}\r\n\r\nclass MutationManager {\r\n    protected observer: MutationObserver = new MutationObserver( (r, o) => this.observe(r, o) );\r\n    protected element: Element;\r\n    \r\n    constructor(protected comm: EventEmitter, protected component: any) {}\r\n    \r\n    private observe(changes: MutationRecord[], observer: MutationObserver) {\r\n        for(let mutation of changes) this[mutation.type](mutation);\r\n    }\r\n    \r\n    private ['childList'](mutation: MutationRecord) {\r\n        var { element, component, comm } = this;\r\n        console.log('A child node has been added or removed.');\r\n        comm.publish(comm.channels[''], { mutation, element });\r\n    }\r\n    private ['attributes'](mutation: MutationRecord) {\r\n        var { component, comm } = this;\r\n        var { attributeName: name, target: element } = mutation;\r\n        var attr = (element as Element).getAttributeNode(name);\r\n        var detail = mutation, e = new CustomEvent('attributechange', { detail }), a = new CustomEvent('mutation', { detail });\r\n        \r\n        comm.publish(comm.channels['ELEMENT:MUTATION:OBSERVED'], mutation);\r\n        element.dispatchEvent(e);\r\n        attr.dispatchEvent(a);\r\n    }\r\n    private ['subtree'](mutation: MutationRecord) {\r\n        var { element, component, comm } = this;\r\n    }\r\n    \r\n    connect(element: Element, config?: any) {\r\n        var { observer } = this;\r\n        var config = { attributes: true, childList: true, subtree: true, ...config };\r\n        \r\n        this.element = element;\r\n        observer.observe(element, config);\r\n        \r\n        return this;\r\n    }\r\n    \r\n    destroy() {\r\n        this.observer.disconnect();\r\n        // destroy all attribute listeners as well\r\n    }\r\n    \r\n}\r\nclass ContentManager {\r\n    protected dTemplateReady: Deferred<boolean> = new Deferred();\r\n    protected $slots: Map<string, NodeList> = new Map();\r\n    // protected $variables: Map<string, Element> = new Map();\r\n    // protected attributes: AttributeManager[] = [ ];\r\n    protected templateListeners: TemplateListener[] = [];\r\n    protected activeListeners: { element, type, handler }[] = [ ];\r\n    protected mutations: MutationManager = new MutationManager(this.comm, this.component);\r\n    public fragment: DocumentFragment|Element = new DocumentFragment();\r\n    public template: string = '';\r\n    public content: string = '';\r\n    get component() { return this.element.component; }\r\n    get comm() { return this.element.comm; }\r\n    get $elementRefs() { return this.element.$elementRefs; }\r\n    get elementRefs() { return this.element.elementRefs; }\r\n    get $attrRefs() { return this.element.$attrRefs; }\r\n    get attrRefs() { return this.element.attrRefs; }\r\n    get listeners() { return this.element.listeners; }\r\n    get reAttrIn() { return this.options.reAttrIn; }\r\n    get reStructural() { return this.options.reStructural; }\r\n    get reListener() { return this.options.reListener; }\r\n    get reListenerValue() { return this.options.reListenerValue; }\r\n    protected pipeNodeHandler = (handler: Function) => (e: CustomEvent) => handler.call(this, e.detail, e);\r\n    protected nodeProcessors: ChainOfResponsibility = new ChainOfResponsibility({}, [\r\n        { respond: this.pipeNodeHandler(this.processSlotElementNode) },\r\n        { respond: this.pipeNodeHandler(this.processAttributeNodeRepeat) },  // note Execution Guards in method\r\n        { respond: this.pipeNodeHandler(this.processElementNode) },\r\n        { respond: this.pipeNodeHandler(this.processTextNode) },\r\n        { respond: this.pipeNodeHandler(this.processCommentNode) },\r\n    ]);\r\n    protected pipeAttributeHandler = (handler: Function) => (e: CustomEvent) => handler.call(this, e.detail, e);\r\n    protected attributeProcessors: ChainOfResponsibility = new ChainOfResponsibility({}, [\r\n        { respond: this.pipeAttributeHandler(this.handlePropertyBinding) },\r\n        { respond: this.pipeAttributeHandler(this.handleListenerBinding) },\r\n    ]);\r\n    \r\n    constructor(private element: HTMLElement&any, private options: TemplateManagementOptions) {\r\n        var { $slots } = this;\r\n        var container = document.createElement('div');\r\n        \r\n        container.innerHTML = element.innerHTML;  // this needs to be done at construction-time\r\n        $slots.clear();  // clear before each potential cycle\r\n        for (let i = 0, len = container.childNodes.length; i < len; i++) setSlot.call(this, $slots, <Node&Element>container.childNodes[i]);\r\n        \r\n        function setSlot($slots: Map<string, NodeList>, node: Node&Element) {  // Node.ELEMENT_NODE === 1\r\n            if (!{ '1': true }[ node.nodeType ]) return;\r\n            if ( !node.hasAttribute('slot') ) return;\r\n            if ( $slots.has(node.slot) ) return;  // if already set, skip. parent.querySelectorAll() gets siblings.\r\n            var { slot, parentElement: parent } = node;\r\n            var selector = `[slot=\"${slot}\"]`, all = parent.querySelectorAll(selector);\r\n            \r\n            if (all.length) $slots.set(slot, all);\r\n        }\r\n        \r\n    }\r\n    \r\n    parseNode(node: Node): Node {\r\n        var { nodeProcessors: cor } = this;\r\n        var e = new CustomEvent('domnodeprocess', { detail: <any>node })\r\n          , e = cor.respond(e)\r\n          , { detail: result } = e\r\n          ;\r\n        var { isConnected, parentNode: parent, previousSibling: previous, nextSibling: next, firstChild: child } = result;\r\n        \r\n        // RECURSION\r\n        if (result !== node) return this.parseNode(result);  // reparse. assume replacement occurred. do not continue for next or child.\r\n        if (child) this.parseNode(child);  // TCO???\r\n        if (next) this.parseNode(next);  // TCO???\r\n        this.dTemplateReady.resolve(true);  // gets fulfilled after last element processed. noop after that.\r\n        \r\n        return node;  // result can still equal node\r\n    }\r\n    \r\n    private processSlotElementNode(node: Node&Element&HTMLSlotElement, response: CustomEvent): Node&Element {  // Node.ELEMENT_NODE === 1\r\n        if (!{ '1': true }[ node.nodeType ]) return node;  // https://developer.mozilla.org/en-US/docs/Web/API/Node/nodeType\r\n        if (!{ 'SLOT': true }[ node.tagName ]) return node;\r\n        if ( !this.$slots.has(node.name) ) return node;  // only process if there are occupants\r\n        var { $slots } = this;\r\n        var { name, previousSibling: previous } = node;\r\n        var occupants: NodeList = $slots.get(name)\r\n          , container = document.createElement('div')\r\n          ;\r\n        occupants.forEach( (occupant) => container.appendChild(occupant) );\r\n        node.outerHTML = container.innerHTML;\r\n        response.stopPropagation();  // end responsibility processing. abort/break chain. do not pass into next process.\r\n        \r\n        return <Node&Element>previous.nextSibling;\r\n    }\r\n    \r\n    private processAttributeNodeRepeat(node: Node&Element, response: CustomEvent): Node&Element {\r\n        if (!{ '1': true }[ node.nodeType ]) return node;  // https://developer.mozilla.org/en-US/docs/Web/API/Node/nodeType\r\n        \r\n        if ( !node.hasAttribute('*each') ) return node;\r\n        else response.stopPropagation();  // end responsibility processing. abort/break chain. do not pass into next process.\r\n        \r\n        var attribute: Attr = node.getAttributeNode('*each')\r\n          , replacement: Node&Element = this.handleStructuralRepeat(attribute)\r\n          ;\r\n        return replacement;\r\n    }\r\n    private handleStructuralRepeat(attr: Attr): Node&Element {\r\n        var { reStructural, component } = this;\r\n        var { name, value, ownerElement: instructor } = <any>attr;\r\n        var { previousSibling: previous } = instructor;\r\n        var matches = reStructural.exec(name), [ match, type ] = matches;\r\n        var [ namespace, property ] = value.split(' of ');\r\n        var items = component[property] || [ { id: 3 }, { id: 2 }, { id: 1 } ];\r\n        var ignore = instructor.removeAttribute(match);  // avoid infinite loop\r\n        var clones = items.map( (item) => utils.interpolate(instructor.outerHTML)({ ...component, [namespace]: item }) )  // not working because utils.interpolate doesn't account for namespaces (x.y.z)\r\n          , elements = clones.join('\\n')\r\n          ;\r\n        instructor.outerHTML = elements;  // replace current element with clones. create real Nodes in DOM Tree & [Heap] memory.\r\n        \r\n        return previous.nextSibling;  // that node which now exists at instructor's index due to replacement\r\n    }\r\n    \r\n    private processElementNode(node: Node&Element): Node&Element {  // Node.ELEMENT_NODE === 1\r\n        if (!{ '1': true }[ node.nodeType ]) return node;  // https://developer.mozilla.org/en-US/docs/Web/API/Node/nodeType\r\n        var attributes: NamedNodeMap = node.attributes, attrs = Array.prototype.slice.call(attributes), attr = attrs.shift();\r\n        var result = this.processAttributeNode(attr, ...attrs);\r\n        \r\n        return node;\r\n    }\r\n    private processAttributeNode(node: Node&Attr, ...more: (Node&Attr)[]): Node&Attr {  // Node.ATTRIBUTE_NODE === 2\r\n        if (!node) return node;\r\n        if (!{ '2': true }[ node.nodeType ]) return node;  // https://developer.mozilla.org/en-US/docs/Web/API/Node/nodeType\r\n        var { name, value, ownerElement: owner } = node;\r\n        var { attributeProcessors: cor } = this;\r\n        var e = new CustomEvent('domnodeattributeprocess', { detail: <any>node })\r\n          , e = cor.respond(e)\r\n          , { detail: result } = e\r\n          ;\r\n        var next: Node&Attr = more.shift();\r\n        \r\n        if (next) this.processAttributeNode(next, ...more);  // TCO???\r\n        return node;\r\n    }\r\n    private handlePropertyBinding(node: Node&Attr): Node&Attr {\r\n        if (!{ '2': true }[ node.nodeType ]) return node;  // https://developer.mozilla.org/en-US/docs/Web/API/Node/nodeType\r\n        if ( !this.reAttrIn.test(node.name) ) return node;\r\n        var { reAttrIn, component } = this;\r\n        var { name, value, ownerElement: owner } = node;\r\n        var matches = reAttrIn.exec(name), [ match, property ] = matches;\r\n        var { [value]: datum } = component;\r\n        \r\n        // console.log('ATTR (IN) %O', node, property, node.value, datum);\r\n        // ownerElement.setAttribute(property, datum);\r\n        owner[property] = datum;\r\n        \r\n        return node;\r\n    }\r\n    private handleListenerBinding(node: Node&Attr): Node&Attr {\r\n        if (!{ '2': true }[ node.nodeType ]) return node;  // https://developer.mozilla.org/en-US/docs/Web/API/Node/nodeType\r\n        if ( !this.reListener.test(node.name) ) return node;\r\n        var { templateListeners, reListener } = this;\r\n        var { name, ownerElement: element } = node, matches = reListener.exec(name), [ match, type ] = matches;\r\n        var handler = this.createBindingInvoker(node);\r\n        var details = new TemplateListener({ name, type, node, element, handler });\r\n        // console.log('LISTENER %O', node);\r\n        \r\n        templateListeners.push(details);\r\n        return node;\r\n    }\r\n    private createBindingInvoker(attr: Attr): Function {\r\n        var { component, reListenerValue } = this;\r\n        var { name, value } = attr;\r\n        var [ match, method, args ] = value.match(reListenerValue);\r\n        var exe = utils.composeExecutor(component, method);\r\n        var op = `with($_) return eval(\"h(${args})\");`;\r\n        var fn = new Function('$_', 'h', '$event', op);\r\n        var f = (e) => fn(component, exe, e);\r\n        \r\n        return f;\r\n    }\r\n    \r\n    private processTextNode(node: Node&Text): Node&Text {  // Node.TEXT_NODE === 3\r\n        if (!{ '3': true }[ node.nodeType ]) return node;  // https://developer.mozilla.org/en-US/docs/Web/API/Node/nodeType\r\n        // var { component} = this;\r\n        // var { data } = node;\r\n        // var interpolated = utils.interpolate(data)(component);\r\n        \r\n        // console.log('TEXT %O', node);\r\n        // // node.replaceWith(interpolated);\r\n        // // console.log('TEXT %O', node, data, interpolated);\r\n        \r\n        return node;\r\n    }\r\n    \r\n    private processCommentNode(node: Node&Comment): Node&Comment {  // Node.COMMENT_NODE === 8\r\n        if (!{ '8': true }[ node.nodeType ]) return node;  // https://developer.mozilla.org/en-US/docs/Web/API/Node/nodeType\r\n        // var attrs: NamedNodeMap = node.attributes;\r\n        \r\n        // console.log('COMMENT %O', node);\r\n        // for (let i = 0, len = attrs.length; i < len; i++) this.parseChildAttr(attrs[i], i, attrs);\r\n        // this.parse(node.childNodes);\r\n        \r\n        return node;\r\n    }\r\n    \r\n    /**\r\n     * @intention : Leverage <template> &| DocumentFragment so that DOM objects do not change between parsing template variables & processing event-bindings.\r\n     */\r\n    refresh(template: string = '') {\r\n        var { component, element, dTemplateReady } = this;\r\n        var { shadow } = element;\r\n        var { promise: pTemplateReady } = dTemplateReady;\r\n        var innerHTML = utils.interpolate(template)(component);\r\n        \r\n        shadow.innerHTML = innerHTML;\r\n        pTemplateReady\r\n            .then( () => this.template = template )\r\n            .then( () => this.bindMutationObservers() )\r\n            .then( () => this.bindElementNodeRefs() )\r\n            .then( () => this.bindAttributeNodeRefs() )\r\n            .then( () => this.bindListeners() )\r\n            // .then( () => this.element.config.createSurrogate() )\r\n            .then( () => this.dTemplateReady = new Deferred() )\r\n            // .then( () => this.comm.publish(READY) )\r\n            ;\r\n        this.destroy()\r\n            .parseNode(shadow.firstChild)\r\n            ;\r\n        \r\n        return this;\r\n    }\r\n    \r\n    appendTo(element: Element) {\r\n        // var { content } = this;\r\n        // this.element = element;\r\n        // this.element.innerHTML = content;\r\n        \r\n        return this;\r\n    }\r\n    \r\n    bind() {  // convert all of this to Promises using new Deferred() at this.processNode Tail-Call.\r\n        this.bindMutationObservers()\r\n            .bindListeners()\r\n            .dTemplateReady = new Deferred()\r\n            ;\r\n        return this;\r\n    }\r\n    bindMutationObservers() {\r\n        var { element, mutations } = this;\r\n        mutations.connect(element);\r\n        mutations.connect(element.shadow);\r\n        return this;\r\n    }\r\n    bindElementNodeRefs() {\r\n        var { element, component, elementRefs } = this;\r\n        // element.matches(selector);\r\n        for (let { isHost, selector, key } of elementRefs) if (!{ 'function': true }[ typeof component[key] ]) isHost ? component[key] = element : component[key] = element.querySelector(selector);\r\n        return this;\r\n    }\r\n    bindAttributeNodeRefs() {\r\n        var { element, component, attrRefs } = this;\r\n        for (let { isHost, selector, key, name } of attrRefs) if (!{ 'function': true }[ typeof component[key] ]) isHost ? component[key] = element.getAttributeNode(name) : component[key] = element.querySelector(selector).getAttributeNode(name);\r\n        return this;\r\n    }\r\n    bindListeners() {\r\n        var { element, listeners, templateListeners, $elementRefs } = this;\r\n        listeners.forEach( ({ key, type, handler }) => this.addNodeListener(key, type, handler ) );\r\n        templateListeners.forEach( ({ element: target, type, handler }) => target.addEventListener(type, handler, false) );\r\n        return this;\r\n    }\r\n    addNodeListener(key: string, type: string, handler: Function) {\r\n        var { element, $elementRefs, $attrRefs, activeListeners } = this;\r\n        var metadata = $elementRefs.get(key) || $attrRefs.get(key) || { };\r\n        var { decorator, selector, isHost, name } = metadata;\r\n        var target = {\r\n            'true': element,\r\n            'false': element.shadow['querySelector'](selector),\r\n        }[ isHost ];\r\n        var node = {\r\n            'reference:element': target,\r\n            'reference:attribute': target['getAttributeNode'](name),\r\n        }[ decorator ];\r\n        \r\n        if ( !$elementRefs.get(key) && !$attrRefs.get(key) ) return this;\r\n        if (  $elementRefs.get(key) &&  $attrRefs.get(key) ) return this;\r\n        \r\n        node.addEventListener(type, handler, false);\r\n        activeListeners.push({ element: node, type, handler });\r\n    }\r\n    \r\n    destroy() {\r\n        var { element, mutations, listeners, templateListeners, activeListeners } = this;\r\n        \r\n        mutations.destroy();\r\n        templateListeners.forEach( ({ element, type, handler }) => element.removeEventListener(type, handler, false) );\r\n        activeListeners.forEach( ({ element, type, handler }) => element.removeEventListener(type, handler, false) );\r\n        templateListeners.length = 0;\r\n        activeListeners.length = 0;\r\n        \r\n        return this;\r\n    }\r\n    \r\n}\r\n\r\n\r\nclass ElementEngine {\r\n    \r\n    constructor(private Sandbox: any, private director: any) {}\r\n    \r\n    private getConfig(Class, element) {  // TODO: fractionate routine\r\n        var { director, Sandbox } = this;\r\n        var { metadata } = Class;\r\n        var { $members, $observedAttributes, $watchers, $elements: $elementRefs, $attrs: $attrRefs, $listeners, $subscriptions } = metadata;\r\n        \r\n        var comm = new Comm();\r\n        var construction = new ConstructorProxy({ comm, Sandbox, element, director }); \r\n        var ClassProxy = new Proxy(Class, construction);\r\n        var component = new ClassProxy({ state: false });\r\n        var membersProxy = new MemberProxy({ comm, source: component, element });\r\n        var methodsProxy = new MethodProxy({ comm, source: component, element });\r\n        var proxy = new Proxy(component, membersProxy);\r\n        var properties = Object.getOwnPropertyNames(Class.prototype);\r\n        var methodBlacklist = { 'constructor': true, 'connectedCallback': true, 'attributeChangedCallback': true, 'disconnectedCallback': true, 'adoptedCallback': true };\r\n        \r\n        var members = Array.from( $members.values() )\r\n          , watchers = Array.from( $watchers.values() )\r\n          , elementRefs = Array.from( $elementRefs.values() )\r\n          , attrRefs = Array.from( $attrRefs.values() )\r\n          , listeners = Array.from( $listeners.values() ).map( (item) => utils.mapExecutor(component, item) )  // map each handler to a handler bound to \"component\"\r\n          , subscriptions = Array.from( $subscriptions.values() ).map( (item) => utils.mapExecutor(component, item) )  // map each handler to a handler bound to \"component\"\r\n          ;\r\n        var shadow = element;\r\n        // var shadow = element.attachShadow({ mode: 'open' });\r\n        \r\n        var createSurrogate = _createSurrogate.bind(this, { proxy, component, methodsProxy, methodBlacklist });\r\n        \r\n        // TODO!!! THIS NEEDS TO BE PERFORMED REPEATEDLY OnRecycle (and surrogate destroyed) MAY OBVIATE INFINITE LOOP.\r\n        function _createSurrogate({ proxy, component, methodsProxy, methodBlacklist }) {\r\n            var surrogate = Object.create(proxy);  // use Object.create to carry over get|set; spread op fails to do so\r\n            for (let key in proxy) if (proxy[key] && proxy[key].call) surrogate[key] = new Proxy(proxy[key], methodsProxy);\r\n            properties.forEach( (key) => { if (!!component[key] && component[key].call && !methodBlacklist[key]) surrogate[key] = new Proxy(component[key], methodsProxy); });\r\n            return surrogate;\r\n        }\r\n        \r\n        var config = {  // TODO: create fn\r\n            comm,\r\n            director,\r\n            Sandbox,\r\n            Class,\r\n            ...{\r\n                shadow,\r\n            },\r\n            ...{\r\n                sandbox: construction.sandbox,\r\n            },\r\n            ...{\r\n                $members, members,\r\n            },\r\n            ...{\r\n                $watchers, watchers,\r\n            },\r\n            ...{\r\n                $elementRefs, elementRefs,\r\n                $attrRefs, attrRefs,\r\n            },\r\n            ...{\r\n                $listeners, listeners,\r\n                $subscriptions, subscriptions,\r\n            },\r\n            ...{\r\n                component,\r\n                // surrogate,\r\n                createSurrogate,\r\n            },\r\n        };\r\n        \r\n        return config;\r\n    }\r\n    \r\n    private prepare(Class) {\r\n        var thus = this;\r\n        var { metadata } = Class;\r\n        var { $observedAttributes } = metadata;\r\n        var observedAttributes = Array.from( $observedAttributes.values() ).map( ({ name }) => name )\r\n        var templateOptions = new TemplateManagementOptions();\r\n        \r\n        return class Element extends HTMLElement {  // https://alligator.io/web-components/attributes-properties/\r\n            static get observedAttributes(): string[] { return observedAttributes }  // native HTML Custom Elements\r\n            protected $utils: Utilities = new Utilities();\r\n            private config: any = thus.getConfig(Class, this);\r\n            private comm: EventEmitter = this.config.comm;\r\n            private $: any = this.config.sandbox;\r\n            private component: any = this.config.component;\r\n            // private surrogate: any = this.config.surrogate;\r\n            // private createSurrogate: any = this.config.createSurrogate;\r\n            //\r\n            private shadow: ShadowRoot = this.config.shadow;\r\n            //\r\n            private $observedAttributes: Map<string, any> = this.config.$observedAttributes;\r\n            private observedAttributes: any[] = this.config.observedAttributes;\r\n            private $watchers: Map<string, any> = this.config.$watchers;\r\n            private watchers: any[] = this.config.watchers;\r\n            private $elementRefs: Map<string, any> = this.config.$elementRefs;\r\n            private elementRefs: any[] = this.config.elementRefs;\r\n            private $attrRefs: Map<string, any> = this.config.$attrRefs;\r\n            private attrRefs: any[] = this.config.attrRefs;\r\n            private $listeners: Map<string, any> = this.config.$listeners;\r\n            private listeners: ListenerMap[] = this.config.listeners;\r\n            private $subscriptions: Map<string, any> = this.config.$subscriptions;\r\n            private subscriptions: any[] = this.config.subscriptions;\r\n            //\r\n            private $content: ContentManager = new ContentManager(this, templateOptions);\r\n            private template: string = '';  // this.config.template;\r\n            // private pTemplate: Promise<string> = this.config.pTemplate;\r\n            // private $comparitors: Map<string, Comparitor> = new Map();\r\n            private handlers: any[] = [ ];\r\n            // get comparitors(): Comparitor[] { return Array.from( this.$comparitors.values() ); }\r\n            // get content(): string { return this.$utils.interpolate(this.template)(this.component); }\r\n            // set content(value: string) { this.innerHTML = value; }\r\n            get attrs() { return observedAttributes; }\r\n            get channels() { return this.comm.channels; }\r\n            // get $elements() { return this.$content.$elements; }\r\n            \r\n            constructor() {\r\n                super();\r\n                console.log('CONSTRUCTOR');\r\n                var { comm } = this;\r\n                \r\n                this.bind();\r\n                comm.subscribe(comm.channels['ELEMENT:MUTATION:OBSERVED'], (e) => console.log('@MUTATION', e) );\r\n                comm.subscribe(comm.channels['ELEMENT:TEMPLATE:FOUND'], this.handleTemplate );\r\n                // comm.subscribe(comm.channels['PROXY:INVOKED'], this.handleProxyInvokation);\r\n                comm.subscribe(comm.channels['PROXY:APPLY:INVOKED'], this.handleProxyInvokation);\r\n                // comm.subscribe(comm.channels['PROXY:MOCK:INVOKED'], this.handleProxyInvokation);\r\n                comm.publish(comm.channels['LEFECYCLE:ELEMENT:CREATED']);\r\n                \r\n                return this;\r\n            }\r\n            \r\n            private bind() {\r\n                var { comm, component, subscriptions } = this;\r\n                var { observedAttributes: attributes } = Element;\r\n                \r\n                attributes.forEach( (key) => this.bindAttribute(key) );\r\n                subscriptions.forEach( ({ type, handler }) => comm.subscribe(comm.channels[type], handler) );\r\n                \r\n                return this;\r\n            }\r\n            private bindAttribute(key: string) {  // KEEP?!!!\r\n                var { component } = this;\r\n                var descriptor = Object.getOwnPropertyDescriptor(Class.prototype, key)\r\n                  , descriptor = { ...descriptor }\r\n                  , { get, set } = descriptor\r\n                  ;\r\n                var value = this.getAttribute(key);\r\n                if (!value) this.setAttribute(key, component[key]);\r\n                if (descriptor.get && descriptor.set) descriptor = { get, set };\r\n                else if (!descriptor.get && !descriptor.set) descriptor = { get: () => this.getAttribute(key), set: (v) => this.setAttribute(key, v) };\r\n                else if (!descriptor.get && descriptor.set) descriptor = { get: () => this.getAttribute(key), set };\r\n                else if (descriptor.get && !descriptor.set) descriptor = { get, set: () => this.setAttribute(key, component[key]) };\r\n                Object.defineProperty(component, key, descriptor);\r\n                \r\n                return this;\r\n            }\r\n            \r\n            // https://developer.mozilla.org/en-US/docs/Web/Web_Components/Using_custom_elements#Using_the_lifecycle_callbacks\r\n            connectedCallback() {\r\n                var { comm, component } = this;\r\n                console.log('connectedCallback');\r\n                // if (component.attachedCallback) component.connectedCallback();\r\n                // this.$load();\r\n                comm.publish(comm.channels['LEFECYCLE:ELEMENT:CONNECTED']);\r\n            }\r\n            attributeChangedCallback(attrName: string, oldVal: string, newVal: string) {\r\n                var { component, $watchers } = this;\r\n                // // var action = `[${attrName}]`, handler = component[action];\r\n                // // var any = `[*]`, all = component[any];\r\n                var $watcher = $watchers.get(attrName);\r\n                \r\n                // // if (component.attributeChangedCallback) component.attributeChangedCallback(attrName, oldVal, newVal);\r\n                // // if (all) all.call(component, attrName, oldVal, newVal);\r\n                // // if (handler) handler.call(component, newVal, oldVal);\r\n                if ($watcher) $watcher.handler.call(component, newVal, oldVal);\r\n            }\r\n            disconnectedCallback() {\r\n                var { component, listeners, subscriptions } = this;\r\n                if (component.detachedCallback) component.disconnectedCallback();\r\n                // listeners.forEach( (map) => this.unbindListener(component, map) );\r\n                // subscriptions.forEach( (map) => this.unbindMessageHandler(component, map) );\r\n                // this.$unload();\r\n            }\r\n            adoptedCallback() {\r\n                var { component } = this;\r\n                // if (component.adoptedCallback) component.adoptedCallback();\r\n                // this.$load();\r\n                console.log('--adoptedCallback--');\r\n            }\r\n            \r\n            cycle() {\r\n                var { template } = this;\r\n                setTimeout( () => this.$content.refresh(template), 0 );  // let current callStack clear while element may still be mounting\r\n            }\r\n            \r\n            private handleTemplate = (e: CustomEvent) => {\r\n                var { type, detail: template } = e;\r\n                this.template = template;\r\n                this.cycle();\r\n                // console.log('\\n\\n', 'WORKING ON TEMPLATE-HANDLING', '\\n', template, '\\n\\n');\r\n            };\r\n            \r\n            private handleProxyInvokation = (e: CustomEvent) => {  // KEEP?\r\n                // var { component, attributes, content } = this;\r\n                // var { type, detail } = e, { type: method } = detail;\r\n                // var dirty = this.getDirtyAttributeStates(this.comparitors);\r\n                \r\n                // dirty.forEach( ({ name }) => this.initAttribute(component, attributes[name]) );\r\n                console.log('--handleProxyInvokation--');\r\n                setTimeout( () => this.cycle(), (1000 * 3) );\r\n            };\r\n            \r\n        };\r\n    }\r\n    \r\n    define(name, Class, options?: any) {\r\n        if ( !!customElements.get(name) ) return this;\r\n        var Element = this.prepare(Class);\r\n        window.customElements.define(name, Element, options);\r\n        \r\n        return this;\r\n    }\r\n    \r\n}\r\n\r\nexport { ElementEngine };\r\n\r\n/* ================================================================================================================================\r\nTODO\r\n\r\nORDER OF OPERATIONS\r\nOnInitialization:\r\n    getOccupants()\r\n        .then( trigger('onchange') )\r\nOnChange:\r\n    pTemplateReady\r\n        .then( () => this.template = template )\r\n        .then( () => this.bindMutationObservers() )\r\n        .then( () => this.bindElementNodeRefs() )\r\n        .then( () => this.bindAttributeNodeRefs() )\r\n        .then( () => this.bindListeners() )\r\n\r\n\r\nRefactor\r\nDo less; simplify. Use EDA for more. Lifecycle Hooks should be CustomEvents from Comm.\r\n - ProxyManager: Create \"ProxyManager\" class -- passing in comm -- to manage Proxy operations & triggers.\r\n - AttributeValueProxy: R&D; see if a Proxy Trap can be set on attributes so that Events can be setup on `set()` for `.value`.\r\n    - @watch: @watch Decorator should STILL be used ONLY for Host's observedAttributes -- BUT it should drive a subscription to an event\r\n              published from attributeChangedCallback, which can be on the same or similar channel as other AttrValProxy events.\r\n    - MutationObserver: R&D https://developer.mozilla.org/en-US/docs/Web/API/MutationObserver\r\n - Lifecycle Hooks: Lifecycle Hooks should be driven through Comm.\r\n    - TODO: Define Lifecycle Flow.\r\n - @message: @message Decorator should be used for subscribing to Comm; leave assumption about Sandbox alone!\r\n    - Operators: This will obviate the complexity around operators/operands etc! :-D\r\n - Comm: Comm should remain as disperate EventTarget as to not conflate DOM events with Object-to-Object tether.\r\n - Templates: Templates should have their own Channel while `component` is responsible for BOTH getting AND `.publish`ing a template. This\r\n              way, components have control over lazyLoading and swapping out the template on the fly.\r\n    - Templates should be loaded into a detached element, such as a DOMFragment, before interations to discover template refs, \r\n      bindings, and other variables.\r\n    - TemplateRefs should be accessed through the element's $children Map.\r\n - Event Listeners: If there is a way to bind event-handlers before appending Content to DOM, after interpolation, this would be helpful.\r\n - Comm & Channels: Comm should be phased out using an @Decorator for subscriptions while providing access to Comm AND comm Channels ONLY\r\n                    through methods (get|set for channels) on element.\r\n - Slots: Need <slot>s\r\n \r\n - EDA\r\n    - Events can be published for TemplateRef variables while letting Developer decide what to do with them & their .ownerElement.\r\n    \r\n - LEFECYCLE EVENTS & CHANNELS\r\n    - ELEMENT:TEMPLATE:FOUND (watch out for Race Conditions)\r\n    - ELEMENT:CREATED (constructor)\r\n    - ELEMENT:TEMPLATE:CHECKED (DOM Fragment evaluation)\r\n        // -? ELEMENT:TEMPLATE:VARIABLE:FOUND (DOM Fragment evaluation, TemplateRef)\r\n        // -? ELEMENT:TEMPLATE:VARIABLES:FOUND (DOM Fragment evaluation, TemplateRef)\r\n    - ELEMENT:CONTENT:CREATED (interpolated)\r\n    - ELEMENT:CONTENT:CHECKED (injected/appended)\r\n        // -? ELEMENT:TEMPLATE:LISTENER:BOUND (DOM Fragment evaluation, event-handler bound)\r\n        // -? ELEMENT:TEMPLATE:LISTENERS:BOUND (DOM Fragment evaluation, event-handlers bound)\r\n        // -? ELEMENT:TEMPLATE:ATTRIBUTE:BOUND (DOM Fragment evaluation, AttrValTrap & Listener bound)\r\n        // -? ELEMENT:TEMPLATE:ATTRIBUTES:BOUND (DOM Fragment evaluation, AttrValTraps & Listeners bound)\r\n    - ELEMENT:CONTENT:READY (checked + bound)\r\n    - ELEMENT:READY (everything in its right place)\r\n      [ADDITIONAL] ... which part of the sequence do these fall in?\r\n    - ELEMENT:CONNECTED (LIFECYCLE METHOD)\r\n    - ELEMENT:DISCONNECTED (LIFECYCLE METHOD)\r\n    - ELEMENT:ADOPTED (LIFECYCLE METHOD)\r\n    - ELEMENT:ATTRIBUTE:CHANGED (LIFECYCLE METHOD, could be same channel as AttrValTraps, but could also or instead be ELEMENT:OBSERBED-ATTRIBUTE:CHANGED)\r\n\r\n\r\nREFACTOR 2\r\n\r\n\r\nSyntax\r\n\r\nTemplate (<input {{attr}}=\"{{variable}}\"  />)\r\nEvent: Uses (click)=\"handle($event, variable, 'literal')\"\r\nAttribute: type=\"text\", type=\"{{var}}\", {{var}}=\"literal\", {{attr}}=\"{{var}}\"\r\nProperty I (ctrl -> el): [value]=\"var\" (update element)\r\n// Property O (el -> ctrl): {value}=\"var\" (update controller)\r\nTextNode: {{interpolation}}\r\n\r\n\r\nBehavior\r\n\r\nTemplate: Template gets inserted into element and immediately crawled.\r\nParsing: Parsing crawls element.childNodes to include TextNodes, crawls child.attributes, and recurses from child.childNodes.\r\nAttributes: Each attribute is tested for its binding type, handled accordingly, and evaluated using an \"evaluator\".\r\nTextNodes: TextNodes always get interpolated using an \"evaluator\".\r\nChildNodes: ChildNodes are parsed using strategy above.\r\nEvaluator: Evaluator\r\n\r\n\r\nChange Detection\r\n\r\n\r\n\r\n\r\nDecorators\r\n\r\nClass decorators should always contain a \"meta\" property (on their descriptor, Class, or [root] Prototype) with a \"members\" object.\r\nMember decorators always assign metadata to a \"meta\" object on their Class under members[key] providing data for their purpose.\r\nDecorators should have the capability to be leveraged compositively with each other, adding \"meta\" data to the descriptor.\r\n\r\n@observe('prop') x: any;  // prepares metadata for observedAttributes (of \"prop\" with alias \"x\")\r\n@observer('prop') handleChange(...?) {}  // prepares metadata for handler called from attributedChangedCallback\r\n@element('tagName.class[attr]') element: HTMLElement;  // prepares metadata to select & bind an element to component['element'] (if not arguments.length then return HostElement or FirstChild or querySelector('*') or descriptor.name)\r\n@attr('tagName.class[attr]') attr: Attr;  // prepares metadata to select & bind an element's attribute-node to component['attr'] (if not \"[attr]\" then return descriptor.name)\r\n@listener('click') handleClick() {}  // prepares metadata to handle \"click\" on HostElement\r\n@dispatcher('some-type') unique: EventTarget<CustomElement, 'some-type'>; this.unique.dispatchEvent(detail);\r\n----\r\n@listener('click') @element('tagName.class[attr]') handleClick({ target }) {}  // prepares metadata to handle \"click\" on metadata.selector of type \"element\"\r\n@listener('change') @attr('tagName.class[attr]') handleChange({ ownerElement }) {}  // prepares metadata to handle \"change\" on metadata.selector of type \"attr\"\r\n\r\n\r\nMISC\r\nhttps://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/setPrototypeOf\r\n\r\n\r\n\r\nRESOURCES\r\nMutationObserver (AttrValProxy): https://developer.mozilla.org/en-US/docs/Web/API/MutationObserver\r\nDocumentFragment (Preparations): https://developer.mozilla.org/en-US/docs/Web/API/DocumentFragment\r\nShodowDOM: https://developer.mozilla.org/en-US/docs/Web/Web_Components/Using_shadow_DOM\r\n================================================================================================================================ */\r\n","\r\nexport { Vertex } from './api';\r\nexport { Core } from './core';\r\nexport * from './sandbox';\r\nexport { Bootstrap } from './bootstrap';\r\nexport { ElementEngine } from './element-engine';\r\nexport * from './decorators';\r\n","\r\nvar CSV = new class CSV {\r\n    \r\n    // JSON.stringify(value[, replacer[, space]])\r\n    stringify(collection, fields, delimiter) {  // Word Art Cloud: wordToWeight() & weightToWord()\r\n        /**\r\n         * Given: map.get(fields[i]).push( collection[j][ fields[i] ] )\r\n         * Then: every column (fields[i]) contains an equal number of values as any other column.\r\n         * Because: map.get(fields[i])[0] === collection[j][ fields[i] ]\r\n         */\r\n        var $table = new Map();  // Map { 0 => { a, b, c, ... } }\r\n        var $values = new Map();  // Map { a => [ x, y, z, ... ] }\r\n        var $lines = new Map();  // Map { 0 => [ x, y, z, ... ] }\r\n        var matrix = [ ];  // [ [a,b,c,...], [a,b,c,...], ... ]\r\n        var lines = [ ];\r\n        var span = 0;\r\n        \r\n        if (!fields) fields = Object.keys( collection.reduce( (o, x) => ({ ...o, ...x }), { } ) );  // gets all available keys across all objects in collection\r\n        \r\n        for (let i = 0, width  = collection.length; i < width;  i++)\r\n        for (let j = 0, height = fields.length;     j < height; j++)\r\n\t\t(function create(value, [x, y], row, i, rows, col, j, columns) {\r\n            var _id = x, field = col;\r\n            var record = $table.get(_id) || { _id };\r\n            var column = $values.get(col) || [ ];\r\n            var line = $lines.get(x) || [ ];\r\n            \r\n            if ({ 'undefined': true }[ value ]) value = '';\r\n            matrix[x] = matrix[x] || [ ];\r\n            matrix[x][y] = record[field] = column[x] = line[y] = value;\r\n            \r\n            $table.set(_id, record);  // ensure gets set first time\r\n            $values.set(col, column);  // ensure gets set first time\r\n            $lines.set(x, line);  // ensure gets set first time\r\n            \r\n            span = Math.max.apply(null, [ span, col.length, `${value}`.length ]);\r\n            lines[x] = line.join(',');\r\n            \r\n        })(collection[i][ fields[j] ], [i, j], collection[i], i, collection, fields[j], j, fields);\r\n        \r\n        var tabs = Array.apply(null, { length: span });\r\n        var delimiter = {\r\n            '\\t': tabs.map( () => '\\t' ),\r\n            '\\s': tabs.map( () => '\\s' ),\r\n            'undefined': [ ],\r\n        }[ delimiter ].join('');\r\n        var columns = fields.join(',');\r\n        var csv = [ columns ].concat(lines).join('\\n');\r\n        var csv = csv.replace(/,/img, `,${delimiter}`);\r\n        \r\n        return csv;\r\n    }\r\n    \r\n    parse(csv) {\r\n        var lines = csv.split(/\\n+/img), [ fields ] = lines, fields = fields.split(/,\\t*/), rows = lines.slice(1);\r\n\t\tvar collection = rows.reduce( getObject.bind(this, fields), [ ] );\r\n        \r\n        function getObject(fields, array, line, row, lines) {\r\n            var o = fields.reduce( getValue.bind(this, line), { } );\r\n            array.push(o);\r\n            \r\n            function getValue(line, o, key, i, fields) {\r\n                var values = line.split(/,\\s*/), value = values[i], datum = { [key]: value };\r\n                return { ...o, ...datum };\r\n            }\r\n            \r\n            return array;\r\n        }\r\n        \r\n\t\treturn collection;\r\n    }\r\n    \r\n};\r\n\r\n/**\r\n * @ URLComponents\r\n */\r\nclass URLComponents {\r\n    hash: string = '';\r\n    host: string = '';\r\n    hostname: string = '';\r\n    href: string = '';\r\n    origin: string = '';\r\n    pathname: string = '';\r\n    port: string = '';\r\n    protocol: string = '';\r\n    search: string = '';\r\n    \r\n    constructor(url) {\r\n        var parser = document.createElement('a');\r\n        parser.href = url;\r\n\r\n        this.hash = parser.hash;\r\n        this.host = parser.host;\r\n        this.hostname = parser.hostname;\r\n        this.href = parser.href;\r\n        this.origin = parser.origin;\r\n        this.pathname = parser.pathname;\r\n        this.port = parser.port;\r\n        this.protocol = parser.protocol;\r\n        this.search = parser.search;\r\n\r\n        return this;\r\n    }\r\n    \r\n}\r\n\r\nclass ParameterMap {\r\n    name: string = '';\r\n    value: string = '';\r\n    \r\n    constructor(str) {\r\n        var pair = str.split('=');\r\n        this.name = pair[0];\r\n        this.value = pair[1];\r\n        return this;\r\n    }\r\n    \r\n}\r\n\r\nclass QueryMap {\r\n    \r\n    constructor(q) {\r\n        var query = decodeURIComponent(q);\r\n        var exp = /[^\\?|\\&]([^=]+)\\=([^&]+)/g;\r\n        var res = query.match(exp);\r\n\r\n        for (var i = 0, len = res.length; i < len; i++) {\r\n            var map = new ParameterMap(res[i]);\r\n            this[map.name] = map.value;\r\n        }\r\n\r\n        return this;\r\n    }\r\n    \r\n}\r\n\r\nclass Utilities {\r\n    CSV: any = CSV;\r\n    console: any = console;\r\n    \r\n    constructor() {\r\n        return this;\r\n    }\r\n      \r\n    noop() {}\r\n    \r\n    extend(object, first?, ...more) {\r\n        var o = Object.keys(first).reduce( (o, k) => (o[k] = first[k], o), object );\r\n        if (more.length) return this.extend(object, ...more);\r\n        return o;\r\n    }\r\n    \r\n    is(value) {\r\n        var isnt = { null: true, undefined: true, '': true, 0: false }[ value ];\r\n        return !isnt;\r\n    }\r\n    \r\n    timeout(handler, ...splat) {\r\n        var cancel = window.setTimeout(handler, ...splat);\r\n        return cancel;\r\n    }\r\n    \r\n    enqueue(handler, ...splat) {\r\n        var result = this.timeout(handler, 0, ...splat);\r\n        return result;\r\n    }\r\n    \r\n    /**\r\n     * \r\n     * @intention\r\n     *  * Leverage global.setTimeout for intervals instead of global.setInterval.\r\n     * @patterns { Curry }\r\n     * @usage \r\n     *  * var clear = utils.interval( () => console.log('called!'), 1000 );\r\n     *  * setTimeout(clear, (1000 * n) );  // clears interval after n seconds\r\n     */\r\n    interval(handler, delay, ...splat) {\r\n        var thus = this, timeout = thus.timeout(set, delay, ...splat);\r\n        \r\n        function set(...params) {\r\n            if ( !timeout ) return console.log('break');  // > -1\r\n            handler.call(this, ...params);\r\n            timeout = thus.timeout(set, delay, ...splat);\r\n        }\r\n        function clear() {\r\n            clearTimeout(timeout);\r\n            timeout = null;\r\n            return !timeout;  // assert is cleared\r\n        }\r\n        \r\n        return clear;\r\n    }\r\n    \r\n    debounce(fn, delay) {  // # thx Remy Sharp\r\n        var timer = null;\r\n        \r\n        function _debounce(...splat) {\r\n            var context = this;\r\n            clearTimeout(timer);\r\n            timer = setTimeout( () => fn.call(context, ...splat), delay);\r\n        };\r\n        \r\n        return _debounce;\r\n    }\r\n    \r\n    throttle(fn, threshhold, scope) {  // # thx Remy Sharp\r\n        var threshhold = threshhold || 250, last, deferTimer;\r\n        \r\n        function _throttle(...splat) {\r\n            var context = scope || this, now = +(new Date()), last = now, final = (last + threshhold);\r\n            var invoke = () => ( fn.call(context, ...splat), last = now );\r\n            \r\n            if (!last || now >= final) return invoke();  // don't hold on to it\r\n            clearTimeout(deferTimer);\r\n            deferTimer = setTimeout(invoke, threshhold);\r\n        };\r\n        \r\n        return _throttle;\r\n    }\r\n    \r\n    uuid() {\r\n        function replace(c) {\r\n        var r = Math.random() * 16 | 0, v = c == 'x' ? r : (r & 0x3 | 0x8);\r\n        return v.toString(16);\r\n        }\r\n        return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, replace);\r\n    }\r\n    \r\n    escapeHTML(s) {\r\n        return s.replace(/[&\"<>]/g, function (c) {\r\n            return {\r\n                '&': '&amp;',\r\n                '\"': '&quot;',\r\n                '<': '&lt;',\r\n                '>': '&gt;'\r\n            }[c];\r\n        });\r\n    }\r\n    \r\n    \r\n    drill(data: any, path: string): any {  // @usage: var x = drill('a.b.c.id', { a: { b: { c: { id: x } } } });\r\n        var keys = path.split('.'), key = keys.shift();\r\n        \r\n        if (!data) return undefined;  // not unlike an operation of { 'existent': true }[ 'absent' ] > undefined\r\n        if (!key) return data;  // data is final\r\n        \r\n        return this.drill( data[key], keys.join('.') );  // TCO/TCE\r\n    }\r\n    \r\n    interpolate$(str) {\r\n        return (o) => (new Function(`if (this) with (this) return \\`${str}\\`;`) ).call(o);\r\n    }\r\n    interpolate(str: string): (o) => string {\r\n        // var str = str.replace(/{{([^{}]*)}}/g, '${$1}');\r\n        return (o) => this.interpolate$(str)(o);\r\n    }\r\n    \r\n    /**\r\n     * @ Inspiration: Douglas Crockford (String.prototype.supplant)\r\n     */\r\n    interpolateX(str: string): (o) => string {\r\n        return (o) => str.replace(/{{([^{}]*)}}/g, (a, b) => {\r\n            var f = new Function('o', `with (o) if (o.${b} !== undefined) return o.${b}; else return '{{${b}}}';`), val = ''+f(o);\r\n            return val;  // assume rational value for string result\r\n        });\r\n    }\r\n    /**\r\n     * @ Inspiration: Douglas Crockford (String.prototype.supplant)\r\n     */\r\n    safelyInterpolate(str) {\r\n        return (o) => str.replace(/{{([^{}]*)}}/g, (a, b) => {\r\n            var f = new Function('o', `with (o) if (o.${b} !== undefined) return o.${b}; else return '{{${b}}}';`), val = ''+f(o);\r\n            return this.escapeHTML(val);  // assume rational value for string result\r\n        });\r\n    }\r\n    \r\n    /**\r\n     * @ THX: Douglas Crockford (String.prototype.supplant)\r\n     * @ INTERPOLATE\r\n     */\r\n    interpolateShallow(str) {\r\n        return (o) => {\r\n            return str.replace(/{{([^{}]*)}}/g, (a, b) => {\r\n                var val = ''+o[b];\r\n                return this.escapeHTML(val);  // TODO: escape HTML-Entities\r\n            });\r\n        };\r\n    }\r\n\r\n    /**\r\n     * @ THX: Douglas Crockford (String.prototype.supplant)\r\n     * @ INSECURE_INTERPOLATE\r\n     */\r\n    INSECURE_INTERPOLATE(str) {\r\n        return function interpolate(o) {\r\n            return str.replace(/{{([^{}]*)}}/g, function (a, b) {\r\n                var val = ''+o[b];\r\n                return val;  // TODO: escape HTML-Entities\r\n            });\r\n        }\r\n    }\r\n    \r\n    /**\r\n     * @ EXTERPOLATE | PARSE ROUTE-URI\r\n     */\r\n    exterpolate(str) {\r\n        var str = str || '';\r\n        var re = /:[^\\s/]+|{+[^\\s/]+}+/g;\r\n        var matcher = new RegExp(str.replace(re, '([\\\\w-]+)'));\r\n\r\n        return function getValues(string) {\r\n            if (!string.match(matcher)) return false;\r\n            var string = string || '';\r\n            var result = string.match(matcher);\r\n            var keys = str.match(re);\r\n            var values = result.slice(1);\r\n            var map = {};\r\n\r\n            if (keys && values) {\r\n                for (var i = 0, len = keys.length; i < len; i++) {\r\n                    var key = keys[i].replace(/[:{}]+/g, '');\r\n                    var val = values[i];\r\n                    if (key !== val) map[key] = val;\r\n                }\r\n            }\r\n\r\n            return map;\r\n        };\r\n    }\r\n    \r\n    parseURL(url) {\r\n        var a = document.createElement('a');\r\n        a.href = url;\r\n        \r\n        return {\r\n            hash: a.hash,\r\n            host: a.host,\r\n            hostname: a.hostname,\r\n            href: a.href,\r\n            origin: a.origin,\r\n            pathname: a.pathname,\r\n            port: a.port,\r\n            protocol: a.protocol,\r\n            search: a.search,\r\n        };\r\n    }\r\n    \r\n    sortByKey(k, a, b) {  // Sort by Multiple keys (Reusable) using sortByKey()\r\n        // USAGE:\r\n        // var sort = sortByKey.bind(collection, 'x');\r\n        // collection.sort(sort);\r\n        if (a[k] > b[k]) return  1;\r\n        if (a[k] < b[k]) return -1;\r\n        return 0;\r\n    }\r\n    \r\n    // Sort by Multiple keys (Reusable + Optimized) using Methods-Array\r\n    priorityMethodSort(methods, a, b) {\r\n        // USAGE:\r\n        // var sort = prioritySort.bind(collection, [ sort$A, sort$B, sort$C, sort$D ]);\r\n        // collection.sort(sort);\r\n        var i = 0, methods = Array.prototype.slice.call(methods || [ ], 0);\r\n        while (i === 0 && methods.length) i = methods.shift().call(this, a, b);\r\n        return i;\r\n    }\r\n    \r\n    priorityKeySort(keys, a, b) {  // Sort by Multiple keys (Reusable + Optimized) using Reusable prioritySort()\r\n        // USAGE:\r\n        // var sort = prioritySort.bind(collection, [ 'a', 'b', 'c', 'd' ]);\r\n        // collection.sort(sort);\r\n        // console.log('>', collection);\r\n        // >  [\r\n        //       { \"a\": 0, \"b\": 0, \"c\": 0, \"d\": 0 },\r\n        //       { \"a\": 0, \"b\": 1, \"c\": 2, \"d\": 2 },\r\n        //       { \"a\": 0, \"b\": 1, \"c\": 2, \"d\": 3 },\r\n        //       { \"a\": 1, \"b\": 1, \"c\": 1, \"d\": 1 },\r\n        //       { \"a\": 1, \"b\": 2, \"c\": 2, \"d\": 1 },\r\n        //       { \"a\": 1, \"b\": 2, \"c\": 3, \"d\": 1 },\r\n        //       { \"a\": 2, \"b\": 2, \"c\": 2, \"d\": 2 },\r\n        //       { \"a\": 3, \"b\": 3, \"c\": 3, \"d\": 3 }\r\n        //    ]\r\n        var i = 0, keys = Array.prototype.slice.call(keys || [ ], 0);\r\n        while (i === 0 && keys.length) i = this.sortByKey.call(this, keys.shift(), a, b);\r\n        return i;\r\n    }\r\n    \r\n    getFileSize(size, unit = 'auto') {  // size: number, unit: 'auto'|'byte'|'KB'|'MG'|'GB'|'TB'|'PB'\r\n        var $ = this.toFixed.bind(this);\r\n        var $bytes = $(size || 0), $KB = $($bytes / 1024), $MB = $($KB / 1024), $GB = $($MB / 1024), $TB = $($GB / 1024), $PB = $($TB / 1024);\r\n        var bytes = `${$bytes} bytes`, KB = `${$KB} KB`, MB = `${$MB} MB`, GB = `${$GB} GB`, TB = `${$TB} TB`, PB = `${$PB} PB`;\r\n        var $auto = $bytes;\r\n        var auto;\r\n        var values = { bytes, KB, MB, GB, TB, PB, auto: undefined };\r\n        var result = { unit: '', value: Infinity };\r\n        var datasets = [\r\n        { unit: 'bytes', value: $bytes },\r\n        { unit: 'KB', value: $KB },\r\n        { unit: 'MB', value: $MB },\r\n        { unit: 'GB', value: $GB },\r\n        { unit: 'TB', value: $TB },\r\n        { unit: 'PB', value: $PB },\r\n        ];\r\n        while ( (result.value / 1024) >= 1 && datasets.length ) result = datasets.shift();\r\n        values.auto = `${result.value} ${result.unit}`;\r\n        \r\n        \r\n        \r\n        return values[unit];\r\n    }\r\n    \r\n    toFixed(n) { return Number( Math.round(+(n + 'e2')) + 'e-2' ); }\r\n    \r\n    exists(n) { return !!~n; }\r\n    \r\n}\r\n\r\nexport { Utilities };\r\n","\r\n/**\r\n * @name: Deferred Promise\r\n * @intention\r\n *  * Externalize the function of a Promise's \"Executor\" parameters so that fulfillment & rejection\r\n *  * can be performed at a later time.\r\n */\r\nclass Deferred<T> {\r\n    private _resolve: Function = () => {};\r\n    private _reject: Function = () => {};\r\n    public promise: Promise<T> = new Promise<T>( this.exe.bind(this) );\r\n        \r\n    constructor() {}\r\n    \r\n    private exe(resolve, reject) {\r\n        this._resolve = resolve;\r\n        this._reject = reject;\r\n    }\r\n    \r\n    resolve(data) {\r\n        this._resolve(data);\r\n        return this.promise;\r\n    }\r\n    reject(data) {\r\n        this._reject(data);\r\n        return this.promise;\r\n    }\r\n    \r\n}\r\n\r\nexport { Deferred };\r\n","\r\ninterface IDetector {\r\n    detect(e: CustomEvent): any;\r\n}\r\n\r\n/**\r\n * @intention\r\n *  Provide a means to subscribe to specific actions on specific data on an object.\r\n * @KnownIssues\r\n *  * Only works for set-operations\r\n * @usage\r\n * var detector = {\r\n *    detect(e) {\r\n *        console.log('Detector.detect', e.type, e.detail);\r\n *    }\r\n * };\r\n* var detective = new Detective(object, detector);\r\n* detective\r\n*     .subscribe('name')\r\n*     .subscribe('key')\r\n*     .subscribe('param')\r\n*     ;\r\n* // |\r\n* // | AND|OR\r\n* // V\r\n* var detective = new Detective(object[, detector]);\r\n* detective.subscribe('name', (e) => console.log('#name', e.type, e.detail) );\r\n* detective.subscribe('key', (e) => console.log('#key', e.type, e.detail) );\r\n*/\r\nclass Detective {\r\n    target: EventTarget = new EventTarget();\r\n    proxy: typeof Proxy = new Proxy( new class Outlet {}, this);\r\n    context: any = null;\r\n    detector: IDetector = { detect(e) {} };\r\n    \r\n    constructor(context: any, detector?: IDetector) {\r\n        var detector = detector || this.detector;\r\n        \r\n        this.context = context;\r\n        this.detector = detector;\r\n    }\r\n    \r\n    set(target: any, key: string, value: any, receiver: Detective) {\r\n        var { target: emitter, proxy, detector } = this;\r\n        var oldValue = proxy[key];\r\n        var detail = { action: 'set', oldValue, value };\r\n        var e = new CustomEvent(key, { detail });\r\n        var result = Reflect.set(target, key, value, receiver);\r\n        \r\n        if (oldValue === value) return result;\r\n        \r\n        detector.detect(e);\r\n        emitter.dispatchEvent(e);\r\n        return result;\r\n    }\r\n    \r\n    private getPropertyDescriptor(context: any, key: string) {\r\n        var prototype = Object.getPrototypeOf(context);\r\n        var dtor = Object.getOwnPropertyDescriptor(context, key);\r\n        \r\n        if (!dtor && !!prototype) return this.getPropertyDescriptor(prototype, key);\r\n        return dtor;\r\n    }\r\n    \r\n    private configure(key: string) {\r\n        var { context, proxy, target } = this;\r\n        var dtor = this.getPropertyDescriptor(context, key)\r\n          , getter = dtor && dtor.get\r\n          , setter = dtor && dtor.set\r\n          ;\r\n        var defaults = { configurable: true, enumerable: true };\r\n        var config = { ...defaults, get: get.bind(context, key), set: set.bind(context, key) };\r\n        \r\n        function get(key) {\r\n            var value = getter ? getter.call(context) : proxy[key];\r\n            return value;\r\n        }\r\n        \r\n        function set(key, value) {\r\n            if (setter) setter.call(context, value);\r\n            proxy[key] = value;\r\n        }\r\n        \r\n        Object.defineProperty(context, key, config);\r\n    }\r\n    \r\n    hasProperty(context: any, key: string) {\r\n        var prototype = Object.getPrototypeOf(context);\r\n        var has = context.hasOwnProperty(key);\r\n        \r\n        if (!has && !!prototype) return this.hasProperty(prototype, key);\r\n        return has;\r\n    }\r\n    \r\n    subscribe(key: string, handler?: Function) {\r\n        var { target, proxy, context } = this;\r\n        \r\n        proxy[key] = context[key];  // ensure oldValue has initial/current before configuration\r\n        this.configure(key);\r\n        if (handler) target.addEventListener(key, <EventListenerOrEventListenerObject>handler, false);\r\n        \r\n        return this;\r\n    }\r\n    \r\n}\r\n\r\nexport { Detective };\r\n  ","\r\nexport { Utilities } from './utilities';\r\nexport { keycodes } from './keycodes';\r\n// export { patterns } from './patterns';\r\n// export { ds } from './ds';\r\nexport { Deferred } from './patterns/other/deferred';\r\nexport { Detective } from './patterns/other/detective';\r\n","\r\nclass Handler {\r\n    respond(e: CustomEvent): any {\r\n        // e.preventDefault();\r\n        // e.stopPropagation();\r\n        // e.stopImmediatePropagation();\r\n        // return false;\r\n        return e.detail;\r\n    }\r\n}\r\n\r\n/**\r\n * @intention \r\n * @usage \r\n *  * var cor = new ChainOfResponsibility({ ... });  // see config/constructor\r\n *  * cor.push({ respond(e) {...} });\r\n *  * cor.push({ respond(e) { e.stopPropagation(); return false } }, { respond(e) {...} }, ...);\r\n *  * [EventTarget].addEventListener('click', cor.respond.bind(cor), false);  // only 1st 2 handlers get invoked\r\n *  * \r\n    * private nodeHandlers: ChainOfResponsibility = new ChainOfResponsibility({}, [\r\n    *     { respond: (e: CustomEvent) => console.log('COR: A', e) },\r\n          { respond: (e: CustomEvent) => console.log('COR: B', e) },\r\n          // { respond: (e: CustomEvent) => e.stopPropagation() },\r\n          { respond: ({ detail: value }: CustomEvent) => console.log('COR: C', value) },\r\n    * ]);\r\n */\r\nclass ChainOfResponsibility extends Array {\r\n    protected config: any = { cancelable: false, bubbles: true };\r\n        \r\n    constructor(config, responders: Handler[] = []) {\r\n        super();\r\n        var { bubbles, cancelBubble, cancelable, defaultPrevented } = config;\r\n        \r\n        this.config = { ...this.config, ...config };\r\n        this.push(...responders);\r\n        \r\n        return this;\r\n    }\r\n    \r\n    protected execute(e: CustomEvent, i: number = 0, handlers: Handler[] = this.slice()): CustomEvent {\r\n        var handler = handlers[i] || new Handler();\r\n        var result = this.propagate(e, handler, i, handlers);  // process & reassign in case of change\r\n        var event = new CustomEvent(e.type, { detail: result }), next = handlers[i + 1];\r\n        \r\n        if (e.cancelBubble) event.stopPropagation();\r\n        if (e.cancelBubble) return event;  // if cancelled, stop immediately. return with value from cancellor.\r\n        if (next) return this.execute(event, ++i);  // has sibling handler. continue with new detail.\r\n        return event;  // if end reached and event not cancelled\r\n    }\r\n    \r\n    protected propagate(e: CustomEvent|any, handler: Handler, i: number, handlers: Handler[]): any {  // TODO: use Recursion to avoid unnecessary iterations\r\n        if (e.cancelBubble) return e;\r\n        var { config } = this;\r\n        var value = handler.respond.call(handler, e)\r\n          , cancelBubble = !{ 'undefined': true, 'false': false }[ value ]\r\n          ;\r\n        if (config.cancelable && cancelBubble) ( e.stopPropagation(), e.stopImmediatePropagation() );\r\n        // e.eventPhase = i;\r\n        \r\n        return value;\r\n    }\r\n    \r\n    chain(handler: Handler, ...handlers: Handler[]): ChainOfResponsibility {\r\n        this.push(handler, ...handlers);\r\n        return this;\r\n    }\r\n    \r\n    respond(e: CustomEvent<any>): CustomEvent<any> {\r\n        var event = this.execute(e);\r\n        // var result = this.reduce( this.propagate.bind(this), e );\r\n        return event;  // subclasses can implement return result.cancelBubble or return false;\r\n    }\r\n    \r\n}\r\n\r\nexport { ChainOfResponsibility, Handler };\r\n","\r\n/**\r\n * @intention \r\n * @usage \r\n *  * var command = new Command(console, 'log');\r\n *  * command.execute('This gets logged by the console');\r\n */\r\nclass Command {\r\n    private context: any = null;\r\n    private action: string = '';\r\n        \r\n    constructor(context, action) {\r\n        this.context = context;\r\n        this.action = action;\r\n    }\r\n    \r\n    execute(...splat: any[]) {\r\n        var { context, action } = this;\r\n        var value = context[action](...splat);\r\n        return value;\r\n    }\r\n    \r\n}\r\n\r\nclass StrictCommand extends Command {\r\n    \r\n    public execute = (...splat: any[]) => super.execute(...splat);\r\n    \r\n}\r\n\r\nexport { Command, StrictCommand };\r\n","/**\r\n * THIS SHOULD ACTUALLY BE JUST AN EVENT-AGGREGATOR THAT CAN BE USED [PER USUAL] ACROSS\r\n * THE SYSTEM, WHILE A \"WebSocketDecorator\" CAN BE USED TO NORMALIZE THE EXTERNAL LIBRARY.\r\n */\r\nvar EventEmitter = EventTarget;\r\nclass EventHub extends EventEmitter {\r\n    \r\n    publish(channel: string, data?: any, ...more: any[]) {\r\n        var e = new CustomEvent(channel, { detail: data });\r\n        this.dispatchEvent(e);\r\n        return this;\r\n    }\r\n    subscribe(channel: string, handler: any) {\r\n        this.addEventListener(channel, handler, false);\r\n        return this;\r\n    }\r\n    unsubscribe(channel: string, handler: any) {\r\n        this.removeEventListener(channel, handler, false);  // what is 3rd param again?\r\n        return this;\r\n    }\r\n    \r\n}\r\n\r\nexport { EventHub };\r\n","\r\nexport { ChainOfResponsibility } from './chainOfRespnsibility';\r\nexport { Command, StrictCommand } from './command';\r\nexport { Mediator } from './mediator';\r\nexport { Subject, IObserver } from './observer';\r\n","\r\nexport { Vertex as V } from './core';\r\nexport { Core } from './core';\r\nexport { Sandbox } from './core/sandbox';\r\nexport { Bootstrap } from './core/bootstrap';\r\nexport { ElementNode, AttributeNode, TextNode, CommentNode, Directive, Pipe, Service } from './core';\r\nexport { observe, observee, observer, element, attr, listener, message, trigger } from './core';\r\n","\r\n/*\r\n\r\nDecorators\r\n\r\nClass decorators should always contain a \"meta\" property (on their descriptor, Class, or [root] Prototype) with a \"members\" object.\r\nMember decorators always assign metadata to a \"meta\" object on their Class under members[key] providing data for their purpose.\r\nDecorators should have the capability to be leveraged compositively with each other, adding \"meta\" data to the descriptor.\r\n\r\n@observee('prop') x: any;  // prepares metadata for observableAttributes (of \"prop\" with alias \"x\")\r\n@observer('prop') handleChange(...?) {}  // prepares metadata for handler called from attributedChangedCallback\r\n@element('tagName.class[attr]') element: HTMLElement;  // prepares metadata to select & bind an element to component['element'] (if not arguments.length then return HostElement or FirstChild or querySelector('*') or descriptor.name)\r\n@attr('tagName.class[attr]') attr: Attr;  // prepares metadata to select & bind an element's attribute-node to component['attr'] (if not \"[attr]\" then return descriptor.name)\r\n@listener('click') handleClick() {}  // prepares metadata to handle \"click\" on HostElement\r\n----\r\n@listener('click') @element('tagName.class[attr]') handleClick({ target }) {}  // prepares metadata to handle \"click\" on metadata.selector of type \"element\"\r\n@listener('change') @attr('tagName.class[attr]') handleChange({ ownerElement }) {}  // prepares metadata to handle \"change\" on metadata.selector of type \"attr\"\r\n\r\n*/\r\n\r\n\r\ntype ObserveeMetadata = {\r\n    decorator: 'attribute:observee',\r\n    name: string,\r\n    alias: string,\r\n    hasGet: boolean,\r\n    hasSet: boolean,\r\n    hasGetOrSet: boolean,\r\n    hasGetAndSet: boolean,\r\n};\r\ntype ObserverMetadata = {\r\n    decorator: 'attribute:observer',\r\n    name: string,\r\n    attr: string,\r\n    handler: (...splat: any[]) => any,\r\n};\r\ninterface ElementRefMetadata {\r\n    decorator: 'reference:element';\r\n    name: string;\r\n    key: string;\r\n    selector: string;\r\n    isHost: boolean;\r\n};\r\ninterface AttrRefMetadata {\r\n    decorator: 'reference:attribute';\r\n    name: string;\r\n    key: string;\r\n    selector: string;\r\n    isHost: boolean;\r\n};\r\ntype ListenerMetadata = {\r\n    decorator: 'handler:dom',\r\n    name: string,\r\n    key: string,\r\n    type: string,\r\n    handler: (...splat: any[]) => any,\r\n    isHost: boolean;\r\n};\r\ntype CommMetadata = {\r\n    decorator: 'handler:comm',\r\n    name: string,\r\n    key: string,\r\n    type: string,\r\n    handler: (...splat: any[]) => any,\r\n};\r\n\r\nclass Metadata {  // TODO: create types for maps\r\n    public $members: Map<string, any> = new Map();\r\n    public $observedAttributes: Map<string, any> = new Map();\r\n    public $watchers: Map<string, any> = new Map();\r\n    public $elements: Map<string, any> = new Map();\r\n    public $attrs: Map<string, any> = new Map();\r\n    public $listeners: Map<string, any> = new Map();\r\n    public $subscriptions: Map<string, any> = new Map();\r\n    \r\n    constructor(protected klass: any) {\r\n        var { metadata } = klass;  // might already exist\r\n        var { $members, $observedAttributes, $watchers, $elements, $attrs, $listeners, $subscriptions } = (metadata || {});\r\n        \r\n        this.$members = $members || this.$members;  // prefer existing if available\r\n        this.$observedAttributes = $observedAttributes || this.$observedAttributes;  // prefer existing if available\r\n        this.$watchers = $watchers || this.$watchers;  // prefer existing if available\r\n        this.$elements = $elements || this.$elements;  // prefer existing if available\r\n        this.$attrs = $attrs || this.$attrs;  // prefer existing if available\r\n        this.$listeners = $listeners || this.$listeners;  // prefer existing if available\r\n        this.$subscriptions = $subscriptions || this.$subscriptions;  // prefer existing if available\r\n        \r\n        klass.metadata = this;  // ensure has structure of this while this.${{x}} originates from first issuance and subsequently klass\r\n        return this;  // `this` maintains references to those members from klass.metadata\r\n    }\r\n    \r\n}\r\n\r\n\r\nvar DEFAULT_DESCRIPTOR = { writable: true, configurable: true, enumerable: true };\r\n\r\n\r\nclass DecoratorUtilities {  // DEP\r\n    namespace(object: any, ns: string, keys: string[] = ns.split('.')): boolean {\r\n        while (keys.length) if (!object[ keys[0] ]) object[ keys.shift() ] = { };\r\n        return !!(new Function(`return constructor.${ns};`))();\r\n    }\r\n    ensure(object, namespace, key, value) {\r\n        var exists = this.namespace(object, namespace);\r\n        var set = new Function('value', `object.${namespace} = value;`);\r\n        // var set = new Function('value', `object.${namespace}.${key} = value;`);\r\n        var get = new Function(`return object.${namespace};`);\r\n        \r\n        set(value);\r\n        return get();\r\n    }\r\n    meta(object, key, meta) {\r\n        this.namespace(object, 'meta.members');\r\n        object.meta.members[key] = meta;\r\n    }\r\n}\r\n\r\n\r\nfunction ElementNode(definition: { selector: string, template?: string }, options: any = {}): any {\r\n    var data = { ...definition, type: 'element', key: 'selector', options, members: {} };\r\n    \r\n    return function get(Class: any): any {\r\n        Class.meta = data;\r\n        return { ...data, Class };\r\n    };\r\n}\r\nfunction AttributeNode(definition: { selector: string }): any {\r\n    var data = { ...definition, type: 'attribute', key: 'selector' };\r\n    \r\n    return function get(Class: any): any {\r\n        return { ...data, Class };\r\n    };\r\n}\r\nfunction TextNode(definition: { selector?: RegExp|'#text' }): any {  // selector := TextNode.nodeValue || TextNode.charaterData\r\n    /*\r\n    if reInterpolate.test(node.[nodeValue,wholeText,textContent,data]) > node.nodeValue = interpolate(nodeValue)(parent/owner)\r\n    */\r\n    var { selector = '#text' } = definition;\r\n    var data = { ...definition, type: 'text', selector };\r\n    \r\n    return function get(Class: any): any {\r\n        return { ...data, Class };\r\n    };\r\n}\r\nfunction CommentNode(definition: { selector?: RegExp|'#comment' }): any {  // selector := CommentNode.data || CommentNode.charaterData\r\n    /*\r\n    comments may be used to drive performance\r\n    syntax can be used to drive directive(s) / operation(s): <!-- <psst! [next.parent]=\"v-modal\" /> -->, etc\r\n    if owner > core.$selectors.linkedList.get(<string>owner, this.nextElementSibling)\r\n    */\r\n    var { selector = '#comment' } = definition;\r\n    var data = { ...definition, type: 'comment', selector };\r\n    \r\n    return function get(Class: any): any {\r\n        return { ...data, Class };\r\n    };\r\n}\r\nfunction Directive(definition: { type: '#text'|'#comment', selector: RegExp }): any {\r\n    var { type } = definition;\r\n    var get = {\r\n        '#text': TextNode({ ...definition, selector: '#text' }),\r\n        '#comment': CommentNode({ ...definition, selector: '#comment' }),\r\n    }[ type ];\r\n    \r\n    return get;\r\n}\r\nfunction Pipe() {}\r\nfunction Service(definition: { id?: string }): any {  // selector := CommentNode.data || CommentNode.charaterData\r\n    var data = { ...definition, type: 'service' };\r\n    \r\n    return function get(Class: any): any {\r\n        var { id: selector = Class.name } = data;\r\n        return { ...data, selector, Class };\r\n    };\r\n}\r\nfunction IoT() {}\r\nfunction MicroService() {}\r\n\r\nvar decorators = new (class Decorators extends DecoratorUtilities {\r\n    \r\n    /**\r\n     * @intention Provide a convenience method for mapping to correct behavior depending on input type to keep other methods clean.\r\n     *      * If member is datum : this.observee\r\n     *      * If member is method: this.observer\r\n     *      * Note: data-members are not created until class instance construction (value === undefined)\r\n     */\r\n    observe = (attr?: string): any => {\r\n        var thus = this;\r\n        \r\n        return function get(target: any, key: string, descriptor: any = {}): any {\r\n            var { constructor } = target;\r\n            var { value } = descriptor;\r\n            var metadata = new Metadata(constructor);\r\n            var descriptor = { ...descriptor, ...DEFAULT_DESCRIPTOR };\r\n            var action = { true: 'observer', false: 'observee' }[ <any>!!value ];  // this.observee || this.observer\r\n            var process = thus[action](attr);\r\n            var data = process(...arguments);\r\n            \r\n            metadata.$members.set(key, data);\r\n            return descriptor;\r\n        };\r\n    };\r\n    observee(attr?: string): any {  // @usage: @observe('options') options: any;\r\n        var thus = this;\r\n        \r\n        return function get(target: any, key: string, descriptor: any = {}): any {\r\n            var { constructor } = target;\r\n            var { get, set } = descriptor, hasGet = !!get, hasSet = !!set, hasGetOrSet = (hasGet || hasSet), hasGetAndSet = (hasGet && hasSet);\r\n            var metadata = new Metadata(constructor);\r\n            var name = (attr || key), alias = key;  // name === alias if !attr\r\n            var data = { decorator: 'attribute:observee', name, alias, hasGet, hasSet, hasGetOrSet, hasGetAndSet };\r\n            \r\n            if (!hasGetOrSet) descriptor.writable = true;  // do not declare WHATSOEVER unless !hasGetOrSet\r\n            metadata.$members.set(key, data);\r\n            metadata.$observedAttributes.set(key, data);\r\n            \r\n            return data;\r\n        };\r\n    };\r\n    observer(attr: string): any {  // @usage: @observe('options') handleOptionsChange(val, old) {}\r\n        var thus = this;\r\n        \r\n        return function get(target: any, key: string, descriptor: any = {}): any {\r\n            var { constructor } = target;\r\n            var descriptor = { ...descriptor, ...DEFAULT_DESCRIPTOR };\r\n            var { value: handler } = descriptor;\r\n            var metadata = new Metadata(constructor);\r\n            var name = key;\r\n            var data = { decorator: 'attribute:observer', name, attr, handler };\r\n            \r\n            metadata.$members.set(key, data);\r\n            metadata.$watchers.set(attr, data);\r\n            \r\n            return data;\r\n        };\r\n    };\r\n    \r\n    element(selector: string): any {  // DEP\r\n        var thus = this;\r\n        var isHost = (selector === 'this');\r\n        \r\n        return function get(target: any, key: string, descriptor: any = {}): any {\r\n            var { constructor } = target;\r\n            var descriptor = { ...descriptor, ...DEFAULT_DESCRIPTOR };\r\n            var metadata = new Metadata(constructor);\r\n            var name = key;\r\n            var data = { decorator: 'reference:element', name, key, selector, isHost };\r\n            \r\n            metadata.$members.set(key, data);\r\n            metadata.$elements.set(key, data);\r\n            \r\n            return descriptor;\r\n        };\r\n    };\r\n    \r\n    attr(selector: string): any {  // DEP\r\n        var thus = this;\r\n        var re = new RegExp(/^(.*)\\[(.+)\\]$/);\r\n        var matches = re.exec(selector), [ match, tagName, attr ] = matches;\r\n        var isHost = (tagName === 'this');\r\n        \r\n        return function get(target: any, key: string, descriptor: any = {}): any {\r\n            var { constructor } = target;\r\n            var descriptor = { ...descriptor, ...DEFAULT_DESCRIPTOR };\r\n            var metadata = new Metadata(constructor);\r\n            var name = attr;\r\n            var data = { decorator: 'reference:attribute', name, key, selector, isHost };\r\n            \r\n            metadata.$members.set(key, data);\r\n            metadata.$attrs.set(key, data);\r\n            \r\n            return descriptor;\r\n        };\r\n    };\r\n    \r\n    listener(type: string) {  // DEP\r\n        var thus = this;\r\n        var isHost = !type;\r\n        \r\n        return function get(target: any, key: string, descriptor: any = {}): any {\r\n            var { constructor } = target;\r\n            // var descriptor = { ...descriptor, ...DEFAULT_DESCRIPTOR };\r\n            var { value: handler } = descriptor;\r\n            var metadata = new Metadata(constructor);\r\n            var name = key;\r\n            var data = { decorator: 'handler:dom', name, key, type, handler, isHost };\r\n            \r\n            metadata.$members.set(key, data);\r\n            metadata.$listeners.set(key, data);\r\n            \r\n            return descriptor;\r\n        };\r\n    };\r\n    \r\n    message(type: string): any {  // DEP\r\n        \r\n        return function get(target: any, key: string, descriptor: any = {}): any {\r\n            var { constructor } = target;\r\n            var descriptor = { ...descriptor, ...DEFAULT_DESCRIPTOR };\r\n            var { value: handler } = descriptor;\r\n            var metadata = new Metadata(constructor);\r\n            var name = key;\r\n            var data = { decorator: 'handler:comm', name, key, type, handler };\r\n            \r\n            metadata.$members.set(key, data);\r\n            metadata.$subscriptions.set(key, data);\r\n            \r\n            return descriptor;\r\n        };\r\n    };\r\n    \r\n    trigger(action: string) {  // DEP\r\n        class MethodProxy {\r\n            constructor(private target: any, private name: string) {}\r\n            apply(fn: Function, thus: any, args: any[]) {\r\n                var { target, name } = this;\r\n                var result = Reflect.apply(fn, thus, args);\r\n                \r\n                target[action](name, ...args);\r\n                \r\n                return result;\r\n            }\r\n        }\r\n        \r\n        return function get(target: any, key: string, descriptor: any = {}): any {\r\n            var { value: fn } = descriptor;\r\n            var proxy = new Proxy( fn, new MethodProxy(target, key) );\r\n            var descriptor = { ...descriptor, value: proxy };\r\n            \r\n            return descriptor;\r\n        };\r\n    }\r\n\r\n})();\r\n\r\n\r\nconst {\r\n    observe, observee, observer,\r\n    element, attr,\r\n    listener, message,\r\n    trigger,\r\n} = decorators;\r\n\r\nexport { ElementNode, AttributeNode, TextNode, CommentNode, Directive, Pipe, Service };\r\nexport { observe, observee, observer };\r\nexport { element, attr };\r\nexport { listener, message };\r\nexport { trigger };\r\n","\r\ninterface IObserver {\r\n    update(state?: any): any;\r\n}\r\n\r\n/**\r\n * @deviations \r\n *  * @param #this: key\r\n *  *   * Demarcates a given datum to use as an instance's \"state\".\r\n *  * @param #this: observation\r\n *  *   * Provides convenience for getting an instance's state based upon `key`.\r\n *  *   * @reasoning\r\n *  *   *   * The key-name `state` is common between problem-domains; as so, objects such as an Address may \r\n *  *   *   * naturally encapsulate a datum named `state`. This allows the subclass to override `get key() {}` \r\n *  *   *   * to provide that of their own. The words \"key\" & \"observation\" are assumed to \r\n *  *   *   * be less common than \"state\", and preferred over [modified] words like \"$state\". In the case\r\n *  *   *   * that `this` is to be returned as \"state\", omitting `key` from the constructor provides the\r\n *  *   *   * implementor opportunity to define `get undefined() { return this; }` (accommodated by setter)\r\n *  *   *   * because, in which case,\r\n *  *   *   * `get observation() { return this[this.key]; }`\r\n *  *   *   * `===`\r\n *  *   *   * `get observation() { return this.undefined; }`\r\n *  *   *   * `===`\r\n *  *   *   * `get undefined() { return this; }`\r\n *  * @param #attach(): notify\r\n *  *   *   Type: Boolean\r\n *  *   *   Allows for any given Observer to declare whether or not it's `update()` method should be invoked\r\n *  *   *   upon attachment, in order to obtain the Subject's current state.\r\n */\r\nclass Subject {\r\n    private observers: IObserver[] = [ ];\r\n    get observation() { return this[this.key]; }  // (aliases Observer Pattern \"state\" datum) uses given datum for state\r\n    set observation(value) { this[this.key] = value; this.notify(); }  // manually sets state & notifies observers\r\n    \r\n    constructor(private key?: any) {}\r\n    \r\n    attach(observer: IObserver, notify?: boolean): Subject {\r\n        var { observers, observation } = this;\r\n        observers.push(observer);\r\n        if (notify) observer.update(observation);\r\n        return this;\r\n    }\r\n    \r\n    detach(observer: IObserver): Subject {\r\n        var { observers } = this;\r\n        for (let i = observers.length; i--;) if (observers[i] === observer) observers.splice(i, 1);\r\n        return this;\r\n    }\r\n    \r\n    notify(state?: any): Subject {\r\n        var { observers, observation } = this, state = state || observation;\r\n        for (let i = 0, len = observers.length; i < len; i++) observers[i].update(state);\r\n        return this;\r\n    }\r\n    \r\n}\r\n\r\nexport { Subject, IObserver };\r\n","\r\nimport { Reactive as Mediator } from '../mediator';\r\n\r\n\r\nclass Store extends Mediator {\r\n    private $data: Map<any, any> = new Map();\r\n    public id: string;\r\n\r\n    constructor(options: any = {}) {\r\n        super();\r\n        var { id } = options;\r\n        this.id = id;\r\n\r\n        return this;\r\n    }\r\n\r\n    next(e: CustomEvent, key: any) {\r\n        var { type, detail } = e;\r\n        var child = this.get(key)\r\n          , data = child.data()\r\n          ;\r\n        var paths = {\r\n            'parent/child/datum': `${this.id}/${key}/${type}`,\r\n            'parent/*/datum': `${this.id}/*/${type}`,\r\n            '**/child/datum': `**/${key}/${type}`,\r\n            '**/*/datum': `**/*/${type}`,\r\n        };\r\n        \r\n        this.publish(paths['parent/child/datum'], detail);\r\n        this.publish(paths['parent/*/datum'], detail);\r\n        this.publish(paths['**/child/datum'], detail);\r\n        this.publish(paths['**/*/datum'], detail);\r\n    }\r\n    error(error: Error) {}\r\n    complete() {}\r\n\r\n    has(key: any) {\r\n        var has = this.$data.has(key);\r\n        return has;\r\n    }\r\n\r\n    get(key: any) {\r\n        var value = this.$data.get(key);\r\n        return value;\r\n    }\r\n\r\n    set(key: any, value: any) {\r\n        this.$data.set(key, value);\r\n        this.publish(key, value);\r\n        this.publish('*', value);\r\n        this.publish('**/*', value);\r\n        this.publish(`**/${key}`, value);\r\n        if (value instanceof Store) value.attach({ next: (e) => this.next(e, key) });\r\n        \r\n        return this;\r\n    }\r\n\r\n    data() {\r\n        var entries = Array.from( this.$data.entries() ), o = { };\r\n        for (let [key, value] of entries) o[key] = value;\r\n        return o;\r\n    }\r\n\r\n    toJSON() {\r\n        return this.data();\r\n    }\r\n\r\n}\r\n\r\nexport { Store };\r\n","\r\nexport { Store as Reactive } from './store.rxjs';\r\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","/** PURE_IMPORTS_START  PURE_IMPORTS_END */\nexport function isFunction(x) {\n    return typeof x === 'function';\n}\n//# sourceMappingURL=isFunction.js.map\n","/** PURE_IMPORTS_START  PURE_IMPORTS_END */\nvar _enable_super_gross_mode_that_will_cause_bad_things = false;\nexport var config = {\n    Promise: undefined,\n    set useDeprecatedSynchronousErrorHandling(value) {\n        if (value) {\n            var error = /*@__PURE__*/ new Error();\n            /*@__PURE__*/ console.warn('DEPRECATED! RxJS was set to use deprecated synchronous error handling behavior by code at: \\n' + error.stack);\n        }\n        else if (_enable_super_gross_mode_that_will_cause_bad_things) {\n            /*@__PURE__*/ console.log('RxJS: Back to a better error behavior. Thank you. <3');\n        }\n        _enable_super_gross_mode_that_will_cause_bad_things = value;\n    },\n    get useDeprecatedSynchronousErrorHandling() {\n        return _enable_super_gross_mode_that_will_cause_bad_things;\n    },\n};\n//# sourceMappingURL=config.js.map\n","/** PURE_IMPORTS_START  PURE_IMPORTS_END */\nexport function hostReportError(err) {\n    setTimeout(function () { throw err; }, 0);\n}\n//# sourceMappingURL=hostReportError.js.map\n","/** PURE_IMPORTS_START _config,_util_hostReportError PURE_IMPORTS_END */\nimport { config } from './config';\nimport { hostReportError } from './util/hostReportError';\nexport var empty = {\n    closed: true,\n    next: function (value) { },\n    error: function (err) {\n        if (config.useDeprecatedSynchronousErrorHandling) {\n            throw err;\n        }\n        else {\n            hostReportError(err);\n        }\n    },\n    complete: function () { }\n};\n//# sourceMappingURL=Observer.js.map\n","/** PURE_IMPORTS_START  PURE_IMPORTS_END */\nexport var isArray = /*@__PURE__*/ (function () { return Array.isArray || (function (x) { return x && typeof x.length === 'number'; }); })();\n//# sourceMappingURL=isArray.js.map\n","/** PURE_IMPORTS_START  PURE_IMPORTS_END */\nvar UnsubscriptionErrorImpl = /*@__PURE__*/ (function () {\n    function UnsubscriptionErrorImpl(errors) {\n        Error.call(this);\n        this.message = errors ?\n            errors.length + \" errors occurred during unsubscription:\\n\" + errors.map(function (err, i) { return i + 1 + \") \" + err.toString(); }).join('\\n  ') : '';\n        this.name = 'UnsubscriptionError';\n        this.errors = errors;\n        return this;\n    }\n    UnsubscriptionErrorImpl.prototype = /*@__PURE__*/ Object.create(Error.prototype);\n    return UnsubscriptionErrorImpl;\n})();\nexport var UnsubscriptionError = UnsubscriptionErrorImpl;\n//# sourceMappingURL=UnsubscriptionError.js.map\n","/** PURE_IMPORTS_START _util_isArray,_util_isObject,_util_isFunction,_util_UnsubscriptionError PURE_IMPORTS_END */\nimport { isArray } from './util/isArray';\nimport { isObject } from './util/isObject';\nimport { isFunction } from './util/isFunction';\nimport { UnsubscriptionError } from './util/UnsubscriptionError';\nvar Subscription = /*@__PURE__*/ (function () {\n    function Subscription(unsubscribe) {\n        this.closed = false;\n        this._parentOrParents = null;\n        this._subscriptions = null;\n        if (unsubscribe) {\n            this._unsubscribe = unsubscribe;\n        }\n    }\n    Subscription.prototype.unsubscribe = function () {\n        var errors;\n        if (this.closed) {\n            return;\n        }\n        var _a = this, _parentOrParents = _a._parentOrParents, _unsubscribe = _a._unsubscribe, _subscriptions = _a._subscriptions;\n        this.closed = true;\n        this._parentOrParents = null;\n        this._subscriptions = null;\n        if (_parentOrParents instanceof Subscription) {\n            _parentOrParents.remove(this);\n        }\n        else if (_parentOrParents !== null) {\n            for (var index = 0; index < _parentOrParents.length; ++index) {\n                var parent_1 = _parentOrParents[index];\n                parent_1.remove(this);\n            }\n        }\n        if (isFunction(_unsubscribe)) {\n            try {\n                _unsubscribe.call(this);\n            }\n            catch (e) {\n                errors = e instanceof UnsubscriptionError ? flattenUnsubscriptionErrors(e.errors) : [e];\n            }\n        }\n        if (isArray(_subscriptions)) {\n            var index = -1;\n            var len = _subscriptions.length;\n            while (++index < len) {\n                var sub = _subscriptions[index];\n                if (isObject(sub)) {\n                    try {\n                        sub.unsubscribe();\n                    }\n                    catch (e) {\n                        errors = errors || [];\n                        if (e instanceof UnsubscriptionError) {\n                            errors = errors.concat(flattenUnsubscriptionErrors(e.errors));\n                        }\n                        else {\n                            errors.push(e);\n                        }\n                    }\n                }\n            }\n        }\n        if (errors) {\n            throw new UnsubscriptionError(errors);\n        }\n    };\n    Subscription.prototype.add = function (teardown) {\n        var subscription = teardown;\n        if (!teardown) {\n            return Subscription.EMPTY;\n        }\n        switch (typeof teardown) {\n            case 'function':\n                subscription = new Subscription(teardown);\n            case 'object':\n                if (subscription === this || subscription.closed || typeof subscription.unsubscribe !== 'function') {\n                    return subscription;\n                }\n                else if (this.closed) {\n                    subscription.unsubscribe();\n                    return subscription;\n                }\n                else if (!(subscription instanceof Subscription)) {\n                    var tmp = subscription;\n                    subscription = new Subscription();\n                    subscription._subscriptions = [tmp];\n                }\n                break;\n            default: {\n                throw new Error('unrecognized teardown ' + teardown + ' added to Subscription.');\n            }\n        }\n        var _parentOrParents = subscription._parentOrParents;\n        if (_parentOrParents === null) {\n            subscription._parentOrParents = this;\n        }\n        else if (_parentOrParents instanceof Subscription) {\n            if (_parentOrParents === this) {\n                return subscription;\n            }\n            subscription._parentOrParents = [_parentOrParents, this];\n        }\n        else if (_parentOrParents.indexOf(this) === -1) {\n            _parentOrParents.push(this);\n        }\n        else {\n            return subscription;\n        }\n        var subscriptions = this._subscriptions;\n        if (subscriptions === null) {\n            this._subscriptions = [subscription];\n        }\n        else {\n            subscriptions.push(subscription);\n        }\n        return subscription;\n    };\n    Subscription.prototype.remove = function (subscription) {\n        var subscriptions = this._subscriptions;\n        if (subscriptions) {\n            var subscriptionIndex = subscriptions.indexOf(subscription);\n            if (subscriptionIndex !== -1) {\n                subscriptions.splice(subscriptionIndex, 1);\n            }\n        }\n    };\n    Subscription.EMPTY = (function (empty) {\n        empty.closed = true;\n        return empty;\n    }(new Subscription()));\n    return Subscription;\n}());\nexport { Subscription };\nfunction flattenUnsubscriptionErrors(errors) {\n    return errors.reduce(function (errs, err) { return errs.concat((err instanceof UnsubscriptionError) ? err.errors : err); }, []);\n}\n//# sourceMappingURL=Subscription.js.map\n","/** PURE_IMPORTS_START  PURE_IMPORTS_END */\nexport function isObject(x) {\n    return x !== null && typeof x === 'object';\n}\n//# sourceMappingURL=isObject.js.map\n","/** PURE_IMPORTS_START  PURE_IMPORTS_END */\nexport var rxSubscriber = /*@__PURE__*/ (function () {\n    return typeof Symbol === 'function'\n        ? /*@__PURE__*/ Symbol('rxSubscriber')\n        : '@@rxSubscriber_' + /*@__PURE__*/ Math.random();\n})();\nexport var $$rxSubscriber = rxSubscriber;\n//# sourceMappingURL=rxSubscriber.js.map\n","/** PURE_IMPORTS_START tslib,_util_isFunction,_Observer,_Subscription,_internal_symbol_rxSubscriber,_config,_util_hostReportError PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { isFunction } from './util/isFunction';\nimport { empty as emptyObserver } from './Observer';\nimport { Subscription } from './Subscription';\nimport { rxSubscriber as rxSubscriberSymbol } from '../internal/symbol/rxSubscriber';\nimport { config } from './config';\nimport { hostReportError } from './util/hostReportError';\nvar Subscriber = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(Subscriber, _super);\n    function Subscriber(destinationOrNext, error, complete) {\n        var _this = _super.call(this) || this;\n        _this.syncErrorValue = null;\n        _this.syncErrorThrown = false;\n        _this.syncErrorThrowable = false;\n        _this.isStopped = false;\n        switch (arguments.length) {\n            case 0:\n                _this.destination = emptyObserver;\n                break;\n            case 1:\n                if (!destinationOrNext) {\n                    _this.destination = emptyObserver;\n                    break;\n                }\n                if (typeof destinationOrNext === 'object') {\n                    if (destinationOrNext instanceof Subscriber) {\n                        _this.syncErrorThrowable = destinationOrNext.syncErrorThrowable;\n                        _this.destination = destinationOrNext;\n                        destinationOrNext.add(_this);\n                    }\n                    else {\n                        _this.syncErrorThrowable = true;\n                        _this.destination = new SafeSubscriber(_this, destinationOrNext);\n                    }\n                    break;\n                }\n            default:\n                _this.syncErrorThrowable = true;\n                _this.destination = new SafeSubscriber(_this, destinationOrNext, error, complete);\n                break;\n        }\n        return _this;\n    }\n    Subscriber.prototype[rxSubscriberSymbol] = function () { return this; };\n    Subscriber.create = function (next, error, complete) {\n        var subscriber = new Subscriber(next, error, complete);\n        subscriber.syncErrorThrowable = false;\n        return subscriber;\n    };\n    Subscriber.prototype.next = function (value) {\n        if (!this.isStopped) {\n            this._next(value);\n        }\n    };\n    Subscriber.prototype.error = function (err) {\n        if (!this.isStopped) {\n            this.isStopped = true;\n            this._error(err);\n        }\n    };\n    Subscriber.prototype.complete = function () {\n        if (!this.isStopped) {\n            this.isStopped = true;\n            this._complete();\n        }\n    };\n    Subscriber.prototype.unsubscribe = function () {\n        if (this.closed) {\n            return;\n        }\n        this.isStopped = true;\n        _super.prototype.unsubscribe.call(this);\n    };\n    Subscriber.prototype._next = function (value) {\n        this.destination.next(value);\n    };\n    Subscriber.prototype._error = function (err) {\n        this.destination.error(err);\n        this.unsubscribe();\n    };\n    Subscriber.prototype._complete = function () {\n        this.destination.complete();\n        this.unsubscribe();\n    };\n    Subscriber.prototype._unsubscribeAndRecycle = function () {\n        var _parentOrParents = this._parentOrParents;\n        this._parentOrParents = null;\n        this.unsubscribe();\n        this.closed = false;\n        this.isStopped = false;\n        this._parentOrParents = _parentOrParents;\n        return this;\n    };\n    return Subscriber;\n}(Subscription));\nexport { Subscriber };\nvar SafeSubscriber = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(SafeSubscriber, _super);\n    function SafeSubscriber(_parentSubscriber, observerOrNext, error, complete) {\n        var _this = _super.call(this) || this;\n        _this._parentSubscriber = _parentSubscriber;\n        var next;\n        var context = _this;\n        if (isFunction(observerOrNext)) {\n            next = observerOrNext;\n        }\n        else if (observerOrNext) {\n            next = observerOrNext.next;\n            error = observerOrNext.error;\n            complete = observerOrNext.complete;\n            if (observerOrNext !== emptyObserver) {\n                context = Object.create(observerOrNext);\n                if (isFunction(context.unsubscribe)) {\n                    _this.add(context.unsubscribe.bind(context));\n                }\n                context.unsubscribe = _this.unsubscribe.bind(_this);\n            }\n        }\n        _this._context = context;\n        _this._next = next;\n        _this._error = error;\n        _this._complete = complete;\n        return _this;\n    }\n    SafeSubscriber.prototype.next = function (value) {\n        if (!this.isStopped && this._next) {\n            var _parentSubscriber = this._parentSubscriber;\n            if (!config.useDeprecatedSynchronousErrorHandling || !_parentSubscriber.syncErrorThrowable) {\n                this.__tryOrUnsub(this._next, value);\n            }\n            else if (this.__tryOrSetError(_parentSubscriber, this._next, value)) {\n                this.unsubscribe();\n            }\n        }\n    };\n    SafeSubscriber.prototype.error = function (err) {\n        if (!this.isStopped) {\n            var _parentSubscriber = this._parentSubscriber;\n            var useDeprecatedSynchronousErrorHandling = config.useDeprecatedSynchronousErrorHandling;\n            if (this._error) {\n                if (!useDeprecatedSynchronousErrorHandling || !_parentSubscriber.syncErrorThrowable) {\n                    this.__tryOrUnsub(this._error, err);\n                    this.unsubscribe();\n                }\n                else {\n                    this.__tryOrSetError(_parentSubscriber, this._error, err);\n                    this.unsubscribe();\n                }\n            }\n            else if (!_parentSubscriber.syncErrorThrowable) {\n                this.unsubscribe();\n                if (useDeprecatedSynchronousErrorHandling) {\n                    throw err;\n                }\n                hostReportError(err);\n            }\n            else {\n                if (useDeprecatedSynchronousErrorHandling) {\n                    _parentSubscriber.syncErrorValue = err;\n                    _parentSubscriber.syncErrorThrown = true;\n                }\n                else {\n                    hostReportError(err);\n                }\n                this.unsubscribe();\n            }\n        }\n    };\n    SafeSubscriber.prototype.complete = function () {\n        var _this = this;\n        if (!this.isStopped) {\n            var _parentSubscriber = this._parentSubscriber;\n            if (this._complete) {\n                var wrappedComplete = function () { return _this._complete.call(_this._context); };\n                if (!config.useDeprecatedSynchronousErrorHandling || !_parentSubscriber.syncErrorThrowable) {\n                    this.__tryOrUnsub(wrappedComplete);\n                    this.unsubscribe();\n                }\n                else {\n                    this.__tryOrSetError(_parentSubscriber, wrappedComplete);\n                    this.unsubscribe();\n                }\n            }\n            else {\n                this.unsubscribe();\n            }\n        }\n    };\n    SafeSubscriber.prototype.__tryOrUnsub = function (fn, value) {\n        try {\n            fn.call(this._context, value);\n        }\n        catch (err) {\n            this.unsubscribe();\n            if (config.useDeprecatedSynchronousErrorHandling) {\n                throw err;\n            }\n            else {\n                hostReportError(err);\n            }\n        }\n    };\n    SafeSubscriber.prototype.__tryOrSetError = function (parent, fn, value) {\n        if (!config.useDeprecatedSynchronousErrorHandling) {\n            throw new Error('bad call');\n        }\n        try {\n            fn.call(this._context, value);\n        }\n        catch (err) {\n            if (config.useDeprecatedSynchronousErrorHandling) {\n                parent.syncErrorValue = err;\n                parent.syncErrorThrown = true;\n                return true;\n            }\n            else {\n                hostReportError(err);\n                return true;\n            }\n        }\n        return false;\n    };\n    SafeSubscriber.prototype._unsubscribe = function () {\n        var _parentSubscriber = this._parentSubscriber;\n        this._context = null;\n        this._parentSubscriber = null;\n        _parentSubscriber.unsubscribe();\n    };\n    return SafeSubscriber;\n}(Subscriber));\nexport { SafeSubscriber };\n//# sourceMappingURL=Subscriber.js.map\n","/** PURE_IMPORTS_START  PURE_IMPORTS_END */\nexport var observable = /*@__PURE__*/ (function () { return typeof Symbol === 'function' && Symbol.observable || '@@observable'; })();\n//# sourceMappingURL=observable.js.map\n","/** PURE_IMPORTS_START  PURE_IMPORTS_END */\nexport function noop() { }\n//# sourceMappingURL=noop.js.map\n","/** PURE_IMPORTS_START _noop PURE_IMPORTS_END */\nimport { noop } from './noop';\nexport function pipe() {\n    var fns = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        fns[_i] = arguments[_i];\n    }\n    return pipeFromArray(fns);\n}\nexport function pipeFromArray(fns) {\n    if (!fns) {\n        return noop;\n    }\n    if (fns.length === 1) {\n        return fns[0];\n    }\n    return function piped(input) {\n        return fns.reduce(function (prev, fn) { return fn(prev); }, input);\n    };\n}\n//# sourceMappingURL=pipe.js.map\n","/** PURE_IMPORTS_START _util_canReportError,_util_toSubscriber,_symbol_observable,_util_pipe,_config PURE_IMPORTS_END */\nimport { canReportError } from './util/canReportError';\nimport { toSubscriber } from './util/toSubscriber';\nimport { observable as Symbol_observable } from './symbol/observable';\nimport { pipeFromArray } from './util/pipe';\nimport { config } from './config';\nvar Observable = /*@__PURE__*/ (function () {\n    function Observable(subscribe) {\n        this._isScalar = false;\n        if (subscribe) {\n            this._subscribe = subscribe;\n        }\n    }\n    Observable.prototype.lift = function (operator) {\n        var observable = new Observable();\n        observable.source = this;\n        observable.operator = operator;\n        return observable;\n    };\n    Observable.prototype.subscribe = function (observerOrNext, error, complete) {\n        var operator = this.operator;\n        var sink = toSubscriber(observerOrNext, error, complete);\n        if (operator) {\n            sink.add(operator.call(sink, this.source));\n        }\n        else {\n            sink.add(this.source || (config.useDeprecatedSynchronousErrorHandling && !sink.syncErrorThrowable) ?\n                this._subscribe(sink) :\n                this._trySubscribe(sink));\n        }\n        if (config.useDeprecatedSynchronousErrorHandling) {\n            if (sink.syncErrorThrowable) {\n                sink.syncErrorThrowable = false;\n                if (sink.syncErrorThrown) {\n                    throw sink.syncErrorValue;\n                }\n            }\n        }\n        return sink;\n    };\n    Observable.prototype._trySubscribe = function (sink) {\n        try {\n            return this._subscribe(sink);\n        }\n        catch (err) {\n            if (config.useDeprecatedSynchronousErrorHandling) {\n                sink.syncErrorThrown = true;\n                sink.syncErrorValue = err;\n            }\n            if (canReportError(sink)) {\n                sink.error(err);\n            }\n            else {\n                console.warn(err);\n            }\n        }\n    };\n    Observable.prototype.forEach = function (next, promiseCtor) {\n        var _this = this;\n        promiseCtor = getPromiseCtor(promiseCtor);\n        return new promiseCtor(function (resolve, reject) {\n            var subscription;\n            subscription = _this.subscribe(function (value) {\n                try {\n                    next(value);\n                }\n                catch (err) {\n                    reject(err);\n                    if (subscription) {\n                        subscription.unsubscribe();\n                    }\n                }\n            }, reject, resolve);\n        });\n    };\n    Observable.prototype._subscribe = function (subscriber) {\n        var source = this.source;\n        return source && source.subscribe(subscriber);\n    };\n    Observable.prototype[Symbol_observable] = function () {\n        return this;\n    };\n    Observable.prototype.pipe = function () {\n        var operations = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            operations[_i] = arguments[_i];\n        }\n        if (operations.length === 0) {\n            return this;\n        }\n        return pipeFromArray(operations)(this);\n    };\n    Observable.prototype.toPromise = function (promiseCtor) {\n        var _this = this;\n        promiseCtor = getPromiseCtor(promiseCtor);\n        return new promiseCtor(function (resolve, reject) {\n            var value;\n            _this.subscribe(function (x) { return value = x; }, function (err) { return reject(err); }, function () { return resolve(value); });\n        });\n    };\n    Observable.create = function (subscribe) {\n        return new Observable(subscribe);\n    };\n    return Observable;\n}());\nexport { Observable };\nfunction getPromiseCtor(promiseCtor) {\n    if (!promiseCtor) {\n        promiseCtor = config.Promise || Promise;\n    }\n    if (!promiseCtor) {\n        throw new Error('no Promise impl found');\n    }\n    return promiseCtor;\n}\n//# sourceMappingURL=Observable.js.map\n","/** PURE_IMPORTS_START _Subscriber,_symbol_rxSubscriber,_Observer PURE_IMPORTS_END */\nimport { Subscriber } from '../Subscriber';\nimport { rxSubscriber as rxSubscriberSymbol } from '../symbol/rxSubscriber';\nimport { empty as emptyObserver } from '../Observer';\nexport function toSubscriber(nextOrObserver, error, complete) {\n    if (nextOrObserver) {\n        if (nextOrObserver instanceof Subscriber) {\n            return nextOrObserver;\n        }\n        if (nextOrObserver[rxSubscriberSymbol]) {\n            return nextOrObserver[rxSubscriberSymbol]();\n        }\n    }\n    if (!nextOrObserver && !error && !complete) {\n        return new Subscriber(emptyObserver);\n    }\n    return new Subscriber(nextOrObserver, error, complete);\n}\n//# sourceMappingURL=toSubscriber.js.map\n","/** PURE_IMPORTS_START _Subscriber PURE_IMPORTS_END */\nimport { Subscriber } from '../Subscriber';\nexport function canReportError(observer) {\n    while (observer) {\n        var _a = observer, closed_1 = _a.closed, destination = _a.destination, isStopped = _a.isStopped;\n        if (closed_1 || isStopped) {\n            return false;\n        }\n        else if (destination && destination instanceof Subscriber) {\n            observer = destination;\n        }\n        else {\n            observer = null;\n        }\n    }\n    return true;\n}\n//# sourceMappingURL=canReportError.js.map\n","/** PURE_IMPORTS_START  PURE_IMPORTS_END */\nvar ObjectUnsubscribedErrorImpl = /*@__PURE__*/ (function () {\n    function ObjectUnsubscribedErrorImpl() {\n        Error.call(this);\n        this.message = 'object unsubscribed';\n        this.name = 'ObjectUnsubscribedError';\n        return this;\n    }\n    ObjectUnsubscribedErrorImpl.prototype = /*@__PURE__*/ Object.create(Error.prototype);\n    return ObjectUnsubscribedErrorImpl;\n})();\nexport var ObjectUnsubscribedError = ObjectUnsubscribedErrorImpl;\n//# sourceMappingURL=ObjectUnsubscribedError.js.map\n","/** PURE_IMPORTS_START tslib,_Subscription PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { Subscription } from './Subscription';\nvar SubjectSubscription = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(SubjectSubscription, _super);\n    function SubjectSubscription(subject, subscriber) {\n        var _this = _super.call(this) || this;\n        _this.subject = subject;\n        _this.subscriber = subscriber;\n        _this.closed = false;\n        return _this;\n    }\n    SubjectSubscription.prototype.unsubscribe = function () {\n        if (this.closed) {\n            return;\n        }\n        this.closed = true;\n        var subject = this.subject;\n        var observers = subject.observers;\n        this.subject = null;\n        if (!observers || observers.length === 0 || subject.isStopped || subject.closed) {\n            return;\n        }\n        var subscriberIndex = observers.indexOf(this.subscriber);\n        if (subscriberIndex !== -1) {\n            observers.splice(subscriberIndex, 1);\n        }\n    };\n    return SubjectSubscription;\n}(Subscription));\nexport { SubjectSubscription };\n//# sourceMappingURL=SubjectSubscription.js.map\n","/** PURE_IMPORTS_START tslib,_Observable,_Subscriber,_Subscription,_util_ObjectUnsubscribedError,_SubjectSubscription,_internal_symbol_rxSubscriber PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { Observable } from './Observable';\nimport { Subscriber } from './Subscriber';\nimport { Subscription } from './Subscription';\nimport { ObjectUnsubscribedError } from './util/ObjectUnsubscribedError';\nimport { SubjectSubscription } from './SubjectSubscription';\nimport { rxSubscriber as rxSubscriberSymbol } from '../internal/symbol/rxSubscriber';\nvar SubjectSubscriber = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(SubjectSubscriber, _super);\n    function SubjectSubscriber(destination) {\n        var _this = _super.call(this, destination) || this;\n        _this.destination = destination;\n        return _this;\n    }\n    return SubjectSubscriber;\n}(Subscriber));\nexport { SubjectSubscriber };\nvar Subject = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(Subject, _super);\n    function Subject() {\n        var _this = _super.call(this) || this;\n        _this.observers = [];\n        _this.closed = false;\n        _this.isStopped = false;\n        _this.hasError = false;\n        _this.thrownError = null;\n        return _this;\n    }\n    Subject.prototype[rxSubscriberSymbol] = function () {\n        return new SubjectSubscriber(this);\n    };\n    Subject.prototype.lift = function (operator) {\n        var subject = new AnonymousSubject(this, this);\n        subject.operator = operator;\n        return subject;\n    };\n    Subject.prototype.next = function (value) {\n        if (this.closed) {\n            throw new ObjectUnsubscribedError();\n        }\n        if (!this.isStopped) {\n            var observers = this.observers;\n            var len = observers.length;\n            var copy = observers.slice();\n            for (var i = 0; i < len; i++) {\n                copy[i].next(value);\n            }\n        }\n    };\n    Subject.prototype.error = function (err) {\n        if (this.closed) {\n            throw new ObjectUnsubscribedError();\n        }\n        this.hasError = true;\n        this.thrownError = err;\n        this.isStopped = true;\n        var observers = this.observers;\n        var len = observers.length;\n        var copy = observers.slice();\n        for (var i = 0; i < len; i++) {\n            copy[i].error(err);\n        }\n        this.observers.length = 0;\n    };\n    Subject.prototype.complete = function () {\n        if (this.closed) {\n            throw new ObjectUnsubscribedError();\n        }\n        this.isStopped = true;\n        var observers = this.observers;\n        var len = observers.length;\n        var copy = observers.slice();\n        for (var i = 0; i < len; i++) {\n            copy[i].complete();\n        }\n        this.observers.length = 0;\n    };\n    Subject.prototype.unsubscribe = function () {\n        this.isStopped = true;\n        this.closed = true;\n        this.observers = null;\n    };\n    Subject.prototype._trySubscribe = function (subscriber) {\n        if (this.closed) {\n            throw new ObjectUnsubscribedError();\n        }\n        else {\n            return _super.prototype._trySubscribe.call(this, subscriber);\n        }\n    };\n    Subject.prototype._subscribe = function (subscriber) {\n        if (this.closed) {\n            throw new ObjectUnsubscribedError();\n        }\n        else if (this.hasError) {\n            subscriber.error(this.thrownError);\n            return Subscription.EMPTY;\n        }\n        else if (this.isStopped) {\n            subscriber.complete();\n            return Subscription.EMPTY;\n        }\n        else {\n            this.observers.push(subscriber);\n            return new SubjectSubscription(this, subscriber);\n        }\n    };\n    Subject.prototype.asObservable = function () {\n        var observable = new Observable();\n        observable.source = this;\n        return observable;\n    };\n    Subject.create = function (destination, source) {\n        return new AnonymousSubject(destination, source);\n    };\n    return Subject;\n}(Observable));\nexport { Subject };\nvar AnonymousSubject = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(AnonymousSubject, _super);\n    function AnonymousSubject(destination, source) {\n        var _this = _super.call(this) || this;\n        _this.destination = destination;\n        _this.source = source;\n        return _this;\n    }\n    AnonymousSubject.prototype.next = function (value) {\n        var destination = this.destination;\n        if (destination && destination.next) {\n            destination.next(value);\n        }\n    };\n    AnonymousSubject.prototype.error = function (err) {\n        var destination = this.destination;\n        if (destination && destination.error) {\n            this.destination.error(err);\n        }\n    };\n    AnonymousSubject.prototype.complete = function () {\n        var destination = this.destination;\n        if (destination && destination.complete) {\n            this.destination.complete();\n        }\n    };\n    AnonymousSubject.prototype._subscribe = function (subscriber) {\n        var source = this.source;\n        if (source) {\n            return this.source.subscribe(subscriber);\n        }\n        else {\n            return Subscription.EMPTY;\n        }\n    };\n    return AnonymousSubject;\n}(Subject));\nexport { AnonymousSubject };\n//# sourceMappingURL=Subject.js.map\n","/** PURE_IMPORTS_START tslib,_AsyncAction PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { AsyncAction } from './AsyncAction';\nvar QueueAction = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(QueueAction, _super);\n    function QueueAction(scheduler, work) {\n        var _this = _super.call(this, scheduler, work) || this;\n        _this.scheduler = scheduler;\n        _this.work = work;\n        return _this;\n    }\n    QueueAction.prototype.schedule = function (state, delay) {\n        if (delay === void 0) {\n            delay = 0;\n        }\n        if (delay > 0) {\n            return _super.prototype.schedule.call(this, state, delay);\n        }\n        this.delay = delay;\n        this.state = state;\n        this.scheduler.flush(this);\n        return this;\n    };\n    QueueAction.prototype.execute = function (state, delay) {\n        return (delay > 0 || this.closed) ?\n            _super.prototype.execute.call(this, state, delay) :\n            this._execute(state, delay);\n    };\n    QueueAction.prototype.requestAsyncId = function (scheduler, id, delay) {\n        if (delay === void 0) {\n            delay = 0;\n        }\n        if ((delay !== null && delay > 0) || (delay === null && this.delay > 0)) {\n            return _super.prototype.requestAsyncId.call(this, scheduler, id, delay);\n        }\n        return scheduler.flush(this);\n    };\n    return QueueAction;\n}(AsyncAction));\nexport { QueueAction };\n//# sourceMappingURL=QueueAction.js.map\n","/** PURE_IMPORTS_START tslib,_Action PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { Action } from './Action';\nvar AsyncAction = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(AsyncAction, _super);\n    function AsyncAction(scheduler, work) {\n        var _this = _super.call(this, scheduler, work) || this;\n        _this.scheduler = scheduler;\n        _this.work = work;\n        _this.pending = false;\n        return _this;\n    }\n    AsyncAction.prototype.schedule = function (state, delay) {\n        if (delay === void 0) {\n            delay = 0;\n        }\n        if (this.closed) {\n            return this;\n        }\n        this.state = state;\n        var id = this.id;\n        var scheduler = this.scheduler;\n        if (id != null) {\n            this.id = this.recycleAsyncId(scheduler, id, delay);\n        }\n        this.pending = true;\n        this.delay = delay;\n        this.id = this.id || this.requestAsyncId(scheduler, this.id, delay);\n        return this;\n    };\n    AsyncAction.prototype.requestAsyncId = function (scheduler, id, delay) {\n        if (delay === void 0) {\n            delay = 0;\n        }\n        return setInterval(scheduler.flush.bind(scheduler, this), delay);\n    };\n    AsyncAction.prototype.recycleAsyncId = function (scheduler, id, delay) {\n        if (delay === void 0) {\n            delay = 0;\n        }\n        if (delay !== null && this.delay === delay && this.pending === false) {\n            return id;\n        }\n        clearInterval(id);\n        return undefined;\n    };\n    AsyncAction.prototype.execute = function (state, delay) {\n        if (this.closed) {\n            return new Error('executing a cancelled action');\n        }\n        this.pending = false;\n        var error = this._execute(state, delay);\n        if (error) {\n            return error;\n        }\n        else if (this.pending === false && this.id != null) {\n            this.id = this.recycleAsyncId(this.scheduler, this.id, null);\n        }\n    };\n    AsyncAction.prototype._execute = function (state, delay) {\n        var errored = false;\n        var errorValue = undefined;\n        try {\n            this.work(state);\n        }\n        catch (e) {\n            errored = true;\n            errorValue = !!e && e || new Error(e);\n        }\n        if (errored) {\n            this.unsubscribe();\n            return errorValue;\n        }\n    };\n    AsyncAction.prototype._unsubscribe = function () {\n        var id = this.id;\n        var scheduler = this.scheduler;\n        var actions = scheduler.actions;\n        var index = actions.indexOf(this);\n        this.work = null;\n        this.state = null;\n        this.pending = false;\n        this.scheduler = null;\n        if (index !== -1) {\n            actions.splice(index, 1);\n        }\n        if (id != null) {\n            this.id = this.recycleAsyncId(scheduler, id, null);\n        }\n        this.delay = null;\n    };\n    return AsyncAction;\n}(Action));\nexport { AsyncAction };\n//# sourceMappingURL=AsyncAction.js.map\n","/** PURE_IMPORTS_START tslib,_Subscription PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { Subscription } from '../Subscription';\nvar Action = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(Action, _super);\n    function Action(scheduler, work) {\n        return _super.call(this) || this;\n    }\n    Action.prototype.schedule = function (state, delay) {\n        if (delay === void 0) {\n            delay = 0;\n        }\n        return this;\n    };\n    return Action;\n}(Subscription));\nexport { Action };\n//# sourceMappingURL=Action.js.map\n","var Scheduler = /*@__PURE__*/ (function () {\n    function Scheduler(SchedulerAction, now) {\n        if (now === void 0) {\n            now = Scheduler.now;\n        }\n        this.SchedulerAction = SchedulerAction;\n        this.now = now;\n    }\n    Scheduler.prototype.schedule = function (work, delay, state) {\n        if (delay === void 0) {\n            delay = 0;\n        }\n        return new this.SchedulerAction(this, work).schedule(state, delay);\n    };\n    Scheduler.now = function () { return Date.now(); };\n    return Scheduler;\n}());\nexport { Scheduler };\n//# sourceMappingURL=Scheduler.js.map\n","/** PURE_IMPORTS_START _QueueAction,_QueueScheduler PURE_IMPORTS_END */\nimport { QueueAction } from './QueueAction';\nimport { QueueScheduler } from './QueueScheduler';\nexport var queue = /*@__PURE__*/ new QueueScheduler(QueueAction);\n//# sourceMappingURL=queue.js.map\n","/** PURE_IMPORTS_START tslib,_AsyncScheduler PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { AsyncScheduler } from './AsyncScheduler';\nvar QueueScheduler = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(QueueScheduler, _super);\n    function QueueScheduler() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    return QueueScheduler;\n}(AsyncScheduler));\nexport { QueueScheduler };\n//# sourceMappingURL=QueueScheduler.js.map\n","/** PURE_IMPORTS_START tslib,_Scheduler PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { Scheduler } from '../Scheduler';\nvar AsyncScheduler = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(AsyncScheduler, _super);\n    function AsyncScheduler(SchedulerAction, now) {\n        if (now === void 0) {\n            now = Scheduler.now;\n        }\n        var _this = _super.call(this, SchedulerAction, function () {\n            if (AsyncScheduler.delegate && AsyncScheduler.delegate !== _this) {\n                return AsyncScheduler.delegate.now();\n            }\n            else {\n                return now();\n            }\n        }) || this;\n        _this.actions = [];\n        _this.active = false;\n        _this.scheduled = undefined;\n        return _this;\n    }\n    AsyncScheduler.prototype.schedule = function (work, delay, state) {\n        if (delay === void 0) {\n            delay = 0;\n        }\n        if (AsyncScheduler.delegate && AsyncScheduler.delegate !== this) {\n            return AsyncScheduler.delegate.schedule(work, delay, state);\n        }\n        else {\n            return _super.prototype.schedule.call(this, work, delay, state);\n        }\n    };\n    AsyncScheduler.prototype.flush = function (action) {\n        var actions = this.actions;\n        if (this.active) {\n            actions.push(action);\n            return;\n        }\n        var error;\n        this.active = true;\n        do {\n            if (error = action.execute(action.state, action.delay)) {\n                break;\n            }\n        } while (action = actions.shift());\n        this.active = false;\n        if (error) {\n            while (action = actions.shift()) {\n                action.unsubscribe();\n            }\n            throw error;\n        }\n    };\n    return AsyncScheduler;\n}(Scheduler));\nexport { AsyncScheduler };\n//# sourceMappingURL=AsyncScheduler.js.map\n","/** PURE_IMPORTS_START _Observable PURE_IMPORTS_END */\nimport { Observable } from '../Observable';\nexport var EMPTY = /*@__PURE__*/ new Observable(function (subscriber) { return subscriber.complete(); });\nexport function empty(scheduler) {\n    return scheduler ? emptyScheduled(scheduler) : EMPTY;\n}\nfunction emptyScheduled(scheduler) {\n    return new Observable(function (subscriber) { return scheduler.schedule(function () { return subscriber.complete(); }); });\n}\n//# sourceMappingURL=empty.js.map\n","/** PURE_IMPORTS_START  PURE_IMPORTS_END */\nexport function isScheduler(value) {\n    return value && typeof value.schedule === 'function';\n}\n//# sourceMappingURL=isScheduler.js.map\n","/** PURE_IMPORTS_START  PURE_IMPORTS_END */\nexport var subscribeToArray = function (array) {\n    return function (subscriber) {\n        for (var i = 0, len = array.length; i < len && !subscriber.closed; i++) {\n            subscriber.next(array[i]);\n        }\n        subscriber.complete();\n    };\n};\n//# sourceMappingURL=subscribeToArray.js.map\n","/** PURE_IMPORTS_START _observable_empty,_observable_of,_observable_throwError PURE_IMPORTS_END */\nimport { empty } from './observable/empty';\nimport { of } from './observable/of';\nimport { throwError } from './observable/throwError';\nexport var NotificationKind;\n/*@__PURE__*/ (function (NotificationKind) {\n    NotificationKind[\"NEXT\"] = \"N\";\n    NotificationKind[\"ERROR\"] = \"E\";\n    NotificationKind[\"COMPLETE\"] = \"C\";\n})(NotificationKind || (NotificationKind = {}));\nvar Notification = /*@__PURE__*/ (function () {\n    function Notification(kind, value, error) {\n        this.kind = kind;\n        this.value = value;\n        this.error = error;\n        this.hasValue = kind === 'N';\n    }\n    Notification.prototype.observe = function (observer) {\n        switch (this.kind) {\n            case 'N':\n                return observer.next && observer.next(this.value);\n            case 'E':\n                return observer.error && observer.error(this.error);\n            case 'C':\n                return observer.complete && observer.complete();\n        }\n    };\n    Notification.prototype.do = function (next, error, complete) {\n        var kind = this.kind;\n        switch (kind) {\n            case 'N':\n                return next && next(this.value);\n            case 'E':\n                return error && error(this.error);\n            case 'C':\n                return complete && complete();\n        }\n    };\n    Notification.prototype.accept = function (nextOrObserver, error, complete) {\n        if (nextOrObserver && typeof nextOrObserver.next === 'function') {\n            return this.observe(nextOrObserver);\n        }\n        else {\n            return this.do(nextOrObserver, error, complete);\n        }\n    };\n    Notification.prototype.toObservable = function () {\n        var kind = this.kind;\n        switch (kind) {\n            case 'N':\n                return of(this.value);\n            case 'E':\n                return throwError(this.error);\n            case 'C':\n                return empty();\n        }\n        throw new Error('unexpected notification kind value');\n    };\n    Notification.createNext = function (value) {\n        if (typeof value !== 'undefined') {\n            return new Notification('N', value);\n        }\n        return Notification.undefinedValueNotification;\n    };\n    Notification.createError = function (err) {\n        return new Notification('E', undefined, err);\n    };\n    Notification.createComplete = function () {\n        return Notification.completeNotification;\n    };\n    Notification.completeNotification = new Notification('C');\n    Notification.undefinedValueNotification = new Notification('N', undefined);\n    return Notification;\n}());\nexport { Notification };\n//# sourceMappingURL=Notification.js.map\n","/** PURE_IMPORTS_START _Observable,_Subscription PURE_IMPORTS_END */\nimport { Observable } from '../Observable';\nimport { Subscription } from '../Subscription';\nexport function scheduleArray(input, scheduler) {\n    return new Observable(function (subscriber) {\n        var sub = new Subscription();\n        var i = 0;\n        sub.add(scheduler.schedule(function () {\n            if (i === input.length) {\n                subscriber.complete();\n                return;\n            }\n            subscriber.next(input[i++]);\n            if (!subscriber.closed) {\n                sub.add(this.schedule());\n            }\n        }));\n        return sub;\n    });\n}\n//# sourceMappingURL=scheduleArray.js.map\n","/** PURE_IMPORTS_START _Observable,_util_subscribeToArray,_scheduled_scheduleArray PURE_IMPORTS_END */\nimport { Observable } from '../Observable';\nimport { subscribeToArray } from '../util/subscribeToArray';\nimport { scheduleArray } from '../scheduled/scheduleArray';\nexport function fromArray(input, scheduler) {\n    if (!scheduler) {\n        return new Observable(subscribeToArray(input));\n    }\n    else {\n        return scheduleArray(input, scheduler);\n    }\n}\n//# sourceMappingURL=fromArray.js.map\n","/** PURE_IMPORTS_START _Observable PURE_IMPORTS_END */\nimport { Observable } from '../Observable';\nexport function throwError(error, scheduler) {\n    if (!scheduler) {\n        return new Observable(function (subscriber) { return subscriber.error(error); });\n    }\n    else {\n        return new Observable(function (subscriber) { return scheduler.schedule(dispatch, 0, { error: error, subscriber: subscriber }); });\n    }\n}\nfunction dispatch(_a) {\n    var error = _a.error, subscriber = _a.subscriber;\n    subscriber.error(error);\n}\n//# sourceMappingURL=throwError.js.map\n","/** PURE_IMPORTS_START _util_isScheduler,_fromArray,_scheduled_scheduleArray PURE_IMPORTS_END */\nimport { isScheduler } from '../util/isScheduler';\nimport { fromArray } from './fromArray';\nimport { scheduleArray } from '../scheduled/scheduleArray';\nexport function of() {\n    var args = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        args[_i] = arguments[_i];\n    }\n    var scheduler = args[args.length - 1];\n    if (isScheduler(scheduler)) {\n        args.pop();\n        return scheduleArray(args, scheduler);\n    }\n    else {\n        return fromArray(args);\n    }\n}\n//# sourceMappingURL=of.js.map\n","/** PURE_IMPORTS_START tslib,_Subscriber,_Notification PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { Subscriber } from '../Subscriber';\nimport { Notification } from '../Notification';\nexport function observeOn(scheduler, delay) {\n    if (delay === void 0) {\n        delay = 0;\n    }\n    return function observeOnOperatorFunction(source) {\n        return source.lift(new ObserveOnOperator(scheduler, delay));\n    };\n}\nvar ObserveOnOperator = /*@__PURE__*/ (function () {\n    function ObserveOnOperator(scheduler, delay) {\n        if (delay === void 0) {\n            delay = 0;\n        }\n        this.scheduler = scheduler;\n        this.delay = delay;\n    }\n    ObserveOnOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new ObserveOnSubscriber(subscriber, this.scheduler, this.delay));\n    };\n    return ObserveOnOperator;\n}());\nexport { ObserveOnOperator };\nvar ObserveOnSubscriber = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(ObserveOnSubscriber, _super);\n    function ObserveOnSubscriber(destination, scheduler, delay) {\n        if (delay === void 0) {\n            delay = 0;\n        }\n        var _this = _super.call(this, destination) || this;\n        _this.scheduler = scheduler;\n        _this.delay = delay;\n        return _this;\n    }\n    ObserveOnSubscriber.dispatch = function (arg) {\n        var notification = arg.notification, destination = arg.destination;\n        notification.observe(destination);\n        this.unsubscribe();\n    };\n    ObserveOnSubscriber.prototype.scheduleMessage = function (notification) {\n        var destination = this.destination;\n        destination.add(this.scheduler.schedule(ObserveOnSubscriber.dispatch, this.delay, new ObserveOnMessage(notification, this.destination)));\n    };\n    ObserveOnSubscriber.prototype._next = function (value) {\n        this.scheduleMessage(Notification.createNext(value));\n    };\n    ObserveOnSubscriber.prototype._error = function (err) {\n        this.scheduleMessage(Notification.createError(err));\n        this.unsubscribe();\n    };\n    ObserveOnSubscriber.prototype._complete = function () {\n        this.scheduleMessage(Notification.createComplete());\n        this.unsubscribe();\n    };\n    return ObserveOnSubscriber;\n}(Subscriber));\nexport { ObserveOnSubscriber };\nvar ObserveOnMessage = /*@__PURE__*/ (function () {\n    function ObserveOnMessage(notification, destination) {\n        this.notification = notification;\n        this.destination = destination;\n    }\n    return ObserveOnMessage;\n}());\nexport { ObserveOnMessage };\n//# sourceMappingURL=observeOn.js.map\n","/** PURE_IMPORTS_START tslib,_Subject,_scheduler_queue,_Subscription,_operators_observeOn,_util_ObjectUnsubscribedError,_SubjectSubscription PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { Subject } from './Subject';\nimport { queue } from './scheduler/queue';\nimport { Subscription } from './Subscription';\nimport { ObserveOnSubscriber } from './operators/observeOn';\nimport { ObjectUnsubscribedError } from './util/ObjectUnsubscribedError';\nimport { SubjectSubscription } from './SubjectSubscription';\nvar ReplaySubject = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(ReplaySubject, _super);\n    function ReplaySubject(bufferSize, windowTime, scheduler) {\n        if (bufferSize === void 0) {\n            bufferSize = Number.POSITIVE_INFINITY;\n        }\n        if (windowTime === void 0) {\n            windowTime = Number.POSITIVE_INFINITY;\n        }\n        var _this = _super.call(this) || this;\n        _this.scheduler = scheduler;\n        _this._events = [];\n        _this._infiniteTimeWindow = false;\n        _this._bufferSize = bufferSize < 1 ? 1 : bufferSize;\n        _this._windowTime = windowTime < 1 ? 1 : windowTime;\n        if (windowTime === Number.POSITIVE_INFINITY) {\n            _this._infiniteTimeWindow = true;\n            _this.next = _this.nextInfiniteTimeWindow;\n        }\n        else {\n            _this.next = _this.nextTimeWindow;\n        }\n        return _this;\n    }\n    ReplaySubject.prototype.nextInfiniteTimeWindow = function (value) {\n        var _events = this._events;\n        _events.push(value);\n        if (_events.length > this._bufferSize) {\n            _events.shift();\n        }\n        _super.prototype.next.call(this, value);\n    };\n    ReplaySubject.prototype.nextTimeWindow = function (value) {\n        this._events.push(new ReplayEvent(this._getNow(), value));\n        this._trimBufferThenGetEvents();\n        _super.prototype.next.call(this, value);\n    };\n    ReplaySubject.prototype._subscribe = function (subscriber) {\n        var _infiniteTimeWindow = this._infiniteTimeWindow;\n        var _events = _infiniteTimeWindow ? this._events : this._trimBufferThenGetEvents();\n        var scheduler = this.scheduler;\n        var len = _events.length;\n        var subscription;\n        if (this.closed) {\n            throw new ObjectUnsubscribedError();\n        }\n        else if (this.isStopped || this.hasError) {\n            subscription = Subscription.EMPTY;\n        }\n        else {\n            this.observers.push(subscriber);\n            subscription = new SubjectSubscription(this, subscriber);\n        }\n        if (scheduler) {\n            subscriber.add(subscriber = new ObserveOnSubscriber(subscriber, scheduler));\n        }\n        if (_infiniteTimeWindow) {\n            for (var i = 0; i < len && !subscriber.closed; i++) {\n                subscriber.next(_events[i]);\n            }\n        }\n        else {\n            for (var i = 0; i < len && !subscriber.closed; i++) {\n                subscriber.next(_events[i].value);\n            }\n        }\n        if (this.hasError) {\n            subscriber.error(this.thrownError);\n        }\n        else if (this.isStopped) {\n            subscriber.complete();\n        }\n        return subscription;\n    };\n    ReplaySubject.prototype._getNow = function () {\n        return (this.scheduler || queue).now();\n    };\n    ReplaySubject.prototype._trimBufferThenGetEvents = function () {\n        var now = this._getNow();\n        var _bufferSize = this._bufferSize;\n        var _windowTime = this._windowTime;\n        var _events = this._events;\n        var eventsCount = _events.length;\n        var spliceCount = 0;\n        while (spliceCount < eventsCount) {\n            if ((now - _events[spliceCount].time) < _windowTime) {\n                break;\n            }\n            spliceCount++;\n        }\n        if (eventsCount > _bufferSize) {\n            spliceCount = Math.max(spliceCount, eventsCount - _bufferSize);\n        }\n        if (spliceCount > 0) {\n            _events.splice(0, spliceCount);\n        }\n        return _events;\n    };\n    return ReplaySubject;\n}(Subject));\nexport { ReplaySubject };\nvar ReplayEvent = /*@__PURE__*/ (function () {\n    function ReplayEvent(time, value) {\n        this.time = time;\n        this.value = value;\n    }\n    return ReplayEvent;\n}());\n//# sourceMappingURL=ReplaySubject.js.map\n","/** PURE_IMPORTS_START tslib,_Subscriber PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { Subscriber } from '../Subscriber';\nexport function filter(predicate, thisArg) {\n    return function filterOperatorFunction(source) {\n        return source.lift(new FilterOperator(predicate, thisArg));\n    };\n}\nvar FilterOperator = /*@__PURE__*/ (function () {\n    function FilterOperator(predicate, thisArg) {\n        this.predicate = predicate;\n        this.thisArg = thisArg;\n    }\n    FilterOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new FilterSubscriber(subscriber, this.predicate, this.thisArg));\n    };\n    return FilterOperator;\n}());\nvar FilterSubscriber = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(FilterSubscriber, _super);\n    function FilterSubscriber(destination, predicate, thisArg) {\n        var _this = _super.call(this, destination) || this;\n        _this.predicate = predicate;\n        _this.thisArg = thisArg;\n        _this.count = 0;\n        return _this;\n    }\n    FilterSubscriber.prototype._next = function (value) {\n        var result;\n        try {\n            result = this.predicate.call(this.thisArg, value, this.count++);\n        }\n        catch (err) {\n            this.destination.error(err);\n            return;\n        }\n        if (result) {\n            this.destination.next(value);\n        }\n    };\n    return FilterSubscriber;\n}(Subscriber));\n//# sourceMappingURL=filter.js.map\n","/** PURE_IMPORTS_START tslib,_Subscriber PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { Subscriber } from '../Subscriber';\nexport function map(project, thisArg) {\n    return function mapOperation(source) {\n        if (typeof project !== 'function') {\n            throw new TypeError('argument is not a function. Are you looking for `mapTo()`?');\n        }\n        return source.lift(new MapOperator(project, thisArg));\n    };\n}\nvar MapOperator = /*@__PURE__*/ (function () {\n    function MapOperator(project, thisArg) {\n        this.project = project;\n        this.thisArg = thisArg;\n    }\n    MapOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new MapSubscriber(subscriber, this.project, this.thisArg));\n    };\n    return MapOperator;\n}());\nexport { MapOperator };\nvar MapSubscriber = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(MapSubscriber, _super);\n    function MapSubscriber(destination, project, thisArg) {\n        var _this = _super.call(this, destination) || this;\n        _this.project = project;\n        _this.count = 0;\n        _this.thisArg = thisArg || _this;\n        return _this;\n    }\n    MapSubscriber.prototype._next = function (value) {\n        var result;\n        try {\n            result = this.project.call(this.thisArg, value, this.count++);\n        }\n        catch (err) {\n            this.destination.error(err);\n            return;\n        }\n        this.destination.next(result);\n    };\n    return MapSubscriber;\n}(Subscriber));\n//# sourceMappingURL=map.js.map\n","\r\n// https://stackblitz.com/edit/rxjs-mediator-with-operators?file=index.ts\r\nimport { of, from } from 'rxjs';\r\nimport { Observable, Subject, BehaviorSubject, ReplaySubject } from 'rxjs';\r\nimport { map, filter, last } from 'rxjs/operators';\r\n//\r\nimport { ISubscriber } from '../subscriber.interface';\r\nimport { IEventAggregator } from '../eventaggregator.interface';\r\n\r\nclass EventHub implements IEventAggregator {\r\n  private initializations: object = { errors: 0 };\r\n  private initialized: CustomEvent = new CustomEvent('$initialized', { detail: this.initializations });\r\n  public channels$: ReplaySubject<CustomEvent> = new ReplaySubject(1);\r\n\r\n  in(channel: string): Observable<CustomEvent> {\r\n    var filterChannel = filter( (o: CustomEvent) => channel === o.type )\r\n      , mapData = map( (o: CustomEvent) => o )\r\n      ;\r\n    var subscription = this.channels$.pipe(filterChannel).pipe(mapData);\r\n\r\n    return subscription;\r\n  }\r\n  \r\n  publish(channel: string, data: any = {}, ...more: any[]): IEventAggregator {\r\n    var event = new CustomEvent(channel, { detail: data });\r\n    this.channels$.next(event);\r\n    return this;\r\n  }\r\n\r\n  subscribe(channel: string, handler: any): Observable<CustomEvent> {\r\n    var subscription = this.in(channel);\r\n    if (handler) subscription.subscribe(handler);\r\n    return subscription;\r\n  }\r\n\r\n  unsubscribe(channel: string, handler: Function): IEventAggregator {\r\n    // this.channels$.unsubscribe();\r\n    return this;\r\n  }\r\n\r\n  attach(observer: ISubscriber): Observable<CustomEvent> {\r\n    var subscription = this.channels$;\r\n    if (observer) subscription.subscribe(observer);\r\n    return subscription;\r\n  }\r\n  \r\n  detach(observer: ISubscriber) {\r\n    // this.channels$.unsubscribe();\r\n    return this;\r\n  }\r\n\r\n}\r\n\r\nexport { EventHub };\r\n","\r\nexport { EventHub as Reactive } from './eventhub.rxjs';\r\n","\r\nimport { IEventAggregator } from '../eventaggregator.interface';\r\nimport { Reactive as EventHub } from '../eventhub';\r\n\r\n\r\nclass Mediator extends EventHub implements IEventAggregator {\r\n    private publishers: any = { };\r\n    private context: any = this;\r\n    \r\n    constructor() {\r\n        super();\r\n    }\r\n    \r\n    private registerPublishers(handlers: any) {\r\n        this.publishers = handlers;\r\n        return this;\r\n    }\r\n    protected register(type: 'publishers', handlers: any) {\r\n        var action = { 'publishers': 'registerPublishers' }[ type ];\r\n        this[action](handlers);\r\n        return this;\r\n    }\r\n  \r\n    protected dispatch(channel: string, data?: any, ...more: any[]) {\r\n      super.publish.call(this, channel, data, ...more);\r\n      return this;\r\n    }\r\n    \r\n    publish(channel: string, data?: any, ...more: any[]) {\r\n        var { publishers } = this;\r\n        if (!channel) console.warn(`Mediator.publish expected a channel-value but got \"${channel}\". Please check the spelling of your channel-key.`);\r\n        if (channel in publishers) publishers[channel].call(publishers, channel, data, ...more);\r\n        else this.dispatch.call(this, channel, data, ...more);\r\n        \r\n        return this;\r\n    }\r\n    \r\n}\r\n\r\nexport { Mediator };\r\n","\r\nexport { Mediator as Reactive } from './mediator.rxjs';\r\n","\r\nimport { Sandbox as CommonSandbox } from '@motorman/core';\r\nimport { Core, } from '@motorman/vertices/core/core';\r\nimport { Utilities } from '@motorman/core/utilities';\r\nimport { Queue, Stack } from '@motorman/core/utilities/ds';\r\nimport { Subject } from '@motorman/core/utilities/patterns/behavioral/observer';\r\nimport { ISandbox } from './sandbox.interface';\r\n\r\n\r\ntype TElement = 'element';\r\ntype TAttribute = 'attribute';\r\ntype TText = 'text';\r\ntype TComment = 'comment';\r\ntype TPipe = 'pipe';\r\ntype TService = 'service';\r\ntype TMicroService = 'microservice';\r\ntype TIoT = 'iot';\r\ntype TPrecept = (Node&Element) | (Node&Attr) | (Node&Text) | (Node&Comment) | Utilities;\r\n\r\n\r\nclass TemplateSubject extends Subject {\r\n    private repository: Node&DocumentFragment = new DocumentFragment();\r\n    private digestion: Node&HTMLDivElement = document.createElement('div');\r\n    public template: string = '';\r\n    public content: NodeList|Node[] = [ ];\r\n    public events: string[] = [ ];\r\n    \r\n    constructor(private sandbox: ElementSandboxState, private core: Core) {\r\n        super('content');\r\n        var { repository, digestion } = this;\r\n        repository.appendChild(digestion);\r\n    }\r\n    \r\n    protected encodePropertyTokens(template: string): string {\r\n        return template.replace(/\\{([^{}]+)\\}=\"(.*)\"/img, function replace(whole, $1, $2) {\r\n            var codes = $1.split(''), codes = codes.map( c => c.charCodeAt(0) ), codes = codes.join('#');\r\n            return `{${codes}}=\"${$2}\"`;\r\n        });\r\n    }\r\n    \r\n    protected collectEventTypes(template: string): string {\r\n        var re = /\\(([^()]+)\\)=/img;\r\n        var matches = (template.match(re) || []).map( match => match.replace(re, '$1') );\r\n        this.events.length = 0;\r\n        this.events.push(...matches);\r\n        return template;\r\n    }\r\n    \r\n    /**\r\n     * @intention\r\n     *      Sets template and triggers update on all observers. This allows components to set a template from any source:\r\n     *          * import template from './x.component.html'; subject.set(template);  // compiletime\r\n     *          * http.get('template.html').then( (html) => subject.set(html) );  // runtime AJAX\r\n     *          * subject.set(Sandbox.data.occupee.innerHTML);  // runtime provided (slotless)\r\n     *          * subject.set(Sandbox.data.occupee.querySelector('template').content);  // runtime provided (slot)\r\n     *          * subject.set( utils.interpolate(template)(this) );  // runtime any interpolated\r\n     *      \r\n     */\r\n    set(template: string = '') {\r\n        var { sandbox, digestion } = this;\r\n        var { state } = sandbox;\r\n        var html = this.collectEventTypes(template)\r\n          , html = this.encodePropertyTokens(template)\r\n          , html = sandbox.utils.interpolate(html)(state.data)\r\n          ;\r\n        \r\n        digestion.innerHTML = html;\r\n        this.template = template;\r\n        this.observation = this.content = Array.prototype.slice.call(digestion.childNodes);\r\n        \r\n        return this;\r\n    }\r\n    \r\n}\r\nclass StateSubject extends Subject {\r\n    public states: Stack<any> = new Stack([]);\r\n    public get data(): any { return this.states.peek(); };\r\n    \r\n    constructor(private sandbox: ElementSandboxState, private core: Core) {\r\n        super('data');\r\n    }\r\n    \r\n    set(state: any = {}) {\r\n        this.states.push(state);\r\n        this.notify();\r\n        return this;\r\n    }\r\n    \r\n}\r\n\r\nclass MutationManager {  // https://developer.mozilla.org/pt-BR/docs/Web/API/MutationObserver\r\n    protected observer: MutationObserver = new MutationObserver( (r, o) => this.observe(r, o) );\r\n    protected bootstrap: any = this.core.configuration.bootstrap;\r\n    protected get node(): Node { return this.sandbox.target; }\r\n    protected get data(): any { return this.sandbox.data; }\r\n    protected get selector(): string { return this.data.selector; }\r\n    protected get instance(): string { return this.data.instance; }\r\n    \r\n    constructor(private sandbox: ElementSandboxState, private core: Core) {}\r\n    \r\n    private observe(changes: MutationRecord[], observer: MutationObserver) {\r\n        for(let mutation of changes) this[mutation.type](mutation);\r\n    }\r\n    \r\n    private trigger(type: string, mutation: MutationRecord) {\r\n        var { target, addedNodes, removedNodes } = mutation;\r\n        var nodes = { 'children:added': addedNodes, 'children:removed': removedNodes }[ type ];\r\n        var detail = { mutation, nodes };\r\n        var e = new CustomEvent(type, { detail });\r\n        \r\n        target.dispatchEvent(e);\r\n        for (let i = 0, len = nodes.length; i < len; i++) trigger(target, type, mutation, nodes[i]);\r\n        \r\n        function trigger(target: Node, type: string, mutation: MutationRecord, node: Node) {\r\n            var detail = { mutation, node, target };\r\n            var tChild = { 'children:added': 'node:added', 'children:removed': 'node:removed' }[ type ];\r\n            var tParent = { 'children:added': 'child:added', 'children:removed': 'child:removed' }[ type ];\r\n            var c = new CustomEvent(tChild, { detail });\r\n            var p = new CustomEvent(tParent, { detail });\r\n            \r\n            node.dispatchEvent(c);\r\n            target.dispatchEvent(p);\r\n        }\r\n        \r\n        return this;\r\n    }\r\n    \r\n    private ['childList'](mutation: MutationRecord) {\r\n        var { sandbox, node, bootstrap } = this;\r\n        var detail = { mutation }\r\n          , e = new CustomEvent('mutation:children', { detail })\r\n          ;\r\n        this.trigger('children:added', mutation);\r\n        this.trigger('children:removed', mutation);\r\n        if (mutation.addedNodes.length) bootstrap.parseNode( mutation.addedNodes[0] );  // ISSUE: sometimes triggers recursive bootstrap.parseNode() up parentElement chain\r\n    }\r\n    private ['attributes'](mutation: MutationRecord) {\r\n        var { sandbox, node, selector, instance } = this;\r\n        var { attributeName: name, target: element }: any&{ target: HTMLElement } = mutation;\r\n        var attr = element.getAttributeNode(name);\r\n        var detail = { mutation, node: attr, operation: 'update' }\r\n          , a = new CustomEvent('mutation', { detail })\r\n          , e = new CustomEvent('mutation:attribute', { detail })\r\n          ;\r\n        if ( !element.hasAttribute(name) ) detail.operation = 'delete';\r\n        if ( { 'null': true, 'undefined': true, '': true }[ mutation.oldValue ] ) detail.operation = 'create';\r\n        \r\n        element.dispatchEvent(e);\r\n        if ( { 'delete': true }[ detail.operation ]) element.dispatchEvent( new CustomEvent('node:removed', { detail }) );\r\n        if (!{ 'delete': true }[ detail.operation ]) attr.dispatchEvent(a);\r\n    }\r\n    private ['characterData'](mutation: MutationRecord) {\r\n        var { sandbox, node } = this;\r\n        // console.log('MutationManager - characterData', mutation);\r\n    }\r\n    private ['subtree'](mutation: MutationRecord) {\r\n        var { sandbox, node } = this;\r\n        // console.log('MutationManager - subtree', mutation);\r\n    }\r\n    \r\n    connect(config?: any) {\r\n        var { observer, node } = this;\r\n        var config = {\r\n            attributes: true,\r\n            childList: true,\r\n            characterData: true,\r\n            subtree: true,\r\n            attributeOldValue: true,\r\n            characterDataOldValue: true,\r\n            // attributeFilter: true,\r\n            ...config\r\n        };\r\n        \r\n        observer.observe(node, config);\r\n        \r\n        return this;\r\n    }\r\n    \r\n    disconnect() {\r\n        var { observer } = this;\r\n        observer.disconnect();\r\n        return this;\r\n    }\r\n    \r\n}\r\n\r\nclass EventManager {\r\n    private emit: (e: Event|CustomEvent) => any;\r\n    private $events: Map<string, any> = new Map();\r\n    get events(): string[] { return Array.from( this.$events.keys() ); }\r\n    set events(value: string[]) { this.$events.clear(); value.forEach( type => this.$events.set(type, type) ); }\r\n    get node(): Node { return this.sandbox.target; }\r\n    get proxy(): EventTarget { return EventTarget.prototype; }\r\n    // get proxy(): EventTarget { return this.node; }\r\n    get data(): any { return this.sandbox.data; }\r\n    get instance(): any { return this.data.instance; }\r\n    \r\n    constructor(private sandbox: ElementSandboxState, private core: Core) {}\r\n    \r\n    /**\r\n     * @param : source := EventTarget\r\n     *  *   EventTarget.prototype\r\n     *  *   Node (Element, Attr, etc)\r\n     * @usage : [Node].addEventListener('*', ({ detail: e }) => {...}, false);\r\n     */\r\n    private proxyEventTargetSource_IDEAL(source: EventTarget) {\r\n        var emit = source.dispatchEvent;  // obtain reference\r\n\r\n        function proxy(e: Event|CustomEvent) {\r\n            var { type } = e, any = new CustomEvent('*', { detail: e });  // use original event as detail\r\n            if (!{ '*': true }[ type ]) emit.call(this, any);  // only emit \"any\" if type is not any.type ('*')\r\n            return emit.call(this, e);\r\n        }\r\n\r\n        if ({ 'dispatchEvent': true }[ emit.name ]) source.dispatchEvent = proxy;  // attempt overwrite only if not already set (avoid rewrapping)\r\n        this.emit = emit;\r\n\r\n        return (source.dispatchEvent === proxy);  // indicate if its set after we try to\r\n    }\r\n    \r\n    connect(events: string[]) {\r\n        var { node, proxy } = this;\r\n        \r\n        this.events = events;\r\n        this.events.forEach( (type) => node.addEventListener(type, this.handleAll, true) );  // enforce `useCapture` to handle other events such as <img>.error (disallows bubble).\r\n        node.addEventListener('*', this.handleAny, true);  // `useCapture`\r\n        \r\n        return this;\r\n    }\r\n    \r\n    disconnect() {\r\n        var { node, proxy } = this;\r\n        \r\n        node.removeEventListener('*', this.handleAll);\r\n        proxy.dispatchEvent = this.emit;\r\n        \r\n        return this;\r\n    }\r\n    \r\n    private handleAll = (e: Event|CustomEvent) => {\r\n        var { node } = this;\r\n        var { type, target }: any&{ target: Element } = e\r\n          , { parentElement: parent }: any&{ parentElement: Element } = target\r\n          ;\r\n        var any = new CustomEvent('*', { detail: e }), recursive = new Event(type, { bubbles: true });\r\n        \r\n        target.dispatchEvent(any);\r\n        if ( !parent.isSameNode(node) ) parent.dispatchEvent(recursive);  // retrigger event on parent to ensure Event Delegation. otherwise, parents with same handler will not be reached. use parent.isSameNode to prevent (type)=\"...\" from host being invoked\r\n        \r\n        return true;  // always allow bubbling\r\n    };\r\n    \r\n    public handleAny = (any: CustomEvent<{ type: string, target: Element, e: Event }>) => {\r\n        if ( !any.detail.target.attributes[`(${any.detail.type})`] ) return true;\r\n        var { instance } = this;\r\n        var { detail: e } = any\r\n          , { type, target }: any&{ target: Element } = e\r\n          , property = `(${type})`\r\n          , attr = target.attributes[property]\r\n          , { name, value }: Attr = attr\r\n          ;\r\n        var re = /^(\\w+)\\((.*)\\)$/\r\n          , matches = value.match(re) || [ ]\r\n          , [ full, action, params ] = matches\r\n          ;\r\n        var method = instance[action]\r\n          , invoke = new Function('fn', 'ctx', '$event', `with (ctx) return fn.call(ctx, ${params})`)\r\n          , result = invoke(method, instance, e)\r\n          ;\r\n        return result;\r\n    };\r\n    \r\n}\r\n\r\nclass Sandbox extends CommonSandbox implements ISandbox {\r\n    protected get core() { return this.details.core; }\r\n    public data: any = this.details.data;\r\n    public target: any = this.details.target;\r\n    public bootstrap: any = this.core.configuration.bootstrap;\r\n    \r\n    constructor(protected details: { type: string, target: any, data: any, core: Core }) {  // TODO: make first argument always target\r\n        super(details.core.configuration.director);\r\n    }\r\n    \r\n    init(data: any = {}): Sandbox {\r\n        // ~this.data~ this.config (change key name)\r\n        // this.data = data;\r\n        return this;\r\n    }\r\n    \r\n}\r\n\r\nclass NodeSandbox extends Sandbox {\r\n    \r\n    constructor(details: { type: string, target: Element|Attr|Text|Comment, data: any, core: Core }) {\r\n        super(details);\r\n    }\r\n    \r\n    protected handleNodeRemoved(e: CustomEvent) {\r\n        console.warn('TODO (SUPER): core.stop(e.target).destroy(e.target)', e);\r\n    }\r\n    \r\n}\r\n\r\n\r\n\r\nclass ElementProxy {\r\n    \r\n    constructor(private sandbox: Sandbox, private target: Element, private core: Core) {}\r\n    \r\n    get(target: Element, key: string|number|symbol, receiver: ElementProxy): any {\r\n        var result: any = Reflect.get(target, key, receiver);\r\n        return result;\r\n    }\r\n    \r\n}\r\n\r\nclass NamedNodeMapProxy {\r\n    \r\n    constructor(private sandbox: Sandbox, private target: NamedNodeMap, private core: Core) {}\r\n    \r\n    get(target: NamedNodeMap, key: string|number|symbol, receiver: NamedNodeMapProxy): Attr {\r\n        var attr: Attr = Reflect.get(target, key, receiver);\r\n        var handler: AttributeProxy = new AttributeProxy(this.sandbox, attr, this.core);\r\n        var result: Attr = new Proxy(attr, handler);\r\n        \r\n        return result;\r\n    }\r\n    \r\n}\r\n\r\nclass AttributeProxy implements ProxyHandler<Attr> {\r\n    \r\n    constructor(private sandbox: Sandbox, private target: Attr, private core: Core) {}\r\n    \r\n    get(target: Attr, key: string|number|symbol, receiver: AttributeProxy): any {\r\n        var result: any = Reflect.get(target, key, receiver);\r\n        return result;\r\n    }\r\n    \r\n    set(target: Attr, key: string|number|symbol, value: any, receiver: AttributeProxy): any {\r\n        var current = target[key];\r\n        var result: any = Reflect.set(target, key, value, receiver);\r\n        var changed = (current !== result);\r\n        if ({ value: true, nodeValue: true }[ key ] && changed) this.trigger('changed', { oldValue: current });\r\n        \r\n        return result;\r\n    }\r\n    \r\n    deleteProperty(target: Attr, key: string|number|symbol): any {\r\n        var current = target[key];\r\n        var result: any = Reflect.deleteProperty(target, key);\r\n        var changed = (current !== result);\r\n        if ({ value: true, nodeValue: true }[ key ] && changed) this.trigger('deleted', { oldValue: current });\r\n        \r\n        return result;\r\n    }\r\n    \r\n    trigger(trigger: string, data: { oldValue: any, newValue?: any }) {\r\n        var { target } = this;\r\n        var { name, value, ownerElement } = target;\r\n        var operation = { 'changed': 'change', 'deleted': 'delete' }[ trigger ];\r\n        var type = { 'changed': 'attribute:changed', 'deleted': 'attribute:deleted' }[ trigger ];\r\n        var spec = `${name}:${trigger}`;\r\n        var detail = { ...data, target, ownerElement, name, value, old: data.oldValue, operation };\r\n        var t = new CustomEvent(type, { detail });  // example: ('attribute:changed', detail: {...})\r\n        var m = new CustomEvent(spec, { detail });  // example: ('active:changed', detail: { ..., name: 'active', value: 'true', oldValue: 'false', ..., })\r\n        \r\n        ownerElement.dispatchEvent(t);  // dispatch generic\r\n        ownerElement.dispatchEvent(m);  // dispatch specific\r\n        \r\n        return this;\r\n    }\r\n    \r\n}\r\n\r\nclass ElementSandboxState extends NodeSandbox implements ISandbox {\r\n    protected delegations: EventManager = new EventManager(this, this.core);\r\n    protected mutations: MutationManager = new MutationManager(this, this.core);\r\n    public content: TemplateSubject = new TemplateSubject(this, this.core);\r\n    public state: StateSubject = new StateSubject(this, this.core);\r\n    public node: Element = this.target;\r\n    public element: Element = new Proxy( this.target, new ElementProxy(this, this.target, this.core) );\r\n    public attributes: NamedNodeMap = this.target.attributes;\r\n    public attrs: NamedNodeMap = new Proxy( this.attributes, new NamedNodeMapProxy(this, this.target.attributes, this.core) );\r\n    public $classes: DOMTokenList = this.target.classList;\r\n    public $dataset: DOMStringMap = (this.target as HTMLElement).dataset;\r\n    \r\n    constructor(details: { type: 'element', target: Element, data: any, core: Core }) {\r\n        super(details);\r\n        var { target, data } = details;\r\n        \r\n        this.content.attach({ update: (state) => this.handleTemplateUpdate(state) });  // TODO: detatch is broken. use Command Pattern.\r\n        this.state.attach({ update: (state) => this.handleStateUpdate(state) });  // TODO: detatch is broken. use Command Pattern.\r\n        this.mutations.connect();\r\n        target.addEventListener('node:removed', this.handleNodeRemoved, false);\r\n        target.addEventListener('children:removed', this.handleChildrenRemoved, false);\r\n        target.addEventListener('child:removed', this.handleChildRemoved, false);\r\n        \r\n        return this;\r\n    }\r\n    \r\n    v(root: Node): Node {\r\n        var { bootstrap } = this;\r\n        var result = bootstrap.parseNode(root);\r\n        return result;\r\n    }\r\n    \r\n    handleStateUpdate(state: any) {\r\n        this.content.set(this.content.template);  // trigger full template reparse\r\n    }\r\n    \r\n    handleTemplateUpdate(state: NamedNodeMap) {  // Chain of Responsibility Pattern\r\n        var { content, mutations, delegations, target } = this;\r\n        \r\n        delegations.connect(content.events);  // listen for all events before children begin to load\r\n        mutations.disconnect();  // reconnect after to avoid mutation events\r\n        (target as Element).innerHTML = '';  // clear current contents\r\n        for (let child of state) (target as Element).appendChild(child);\r\n        mutations.connect();  // reconnect after to avoid mutation events\r\n    }\r\n    \r\n    protected handleNodeRemoved = (e: CustomEvent) => {\r\n        console.warn('TODO (ELEMENT): handle target+instance destroy', e);\r\n        super.handleNodeRemoved(e);\r\n    }\r\n    \r\n    protected handleChildrenRemoved = (e: CustomEvent) => {}\r\n    \r\n    protected handleChildRemoved = (e: CustomEvent) => {}\r\n    \r\n}\r\n\r\nclass AttributeSandboxState extends NodeSandbox implements ISandbox {\r\n    public node: Attr = this.target;\r\n    public attribute: Attr = new Proxy( this.target, new AttributeProxy(this, this.target, this.core) );\r\n    public element: Element = this.target.ownerElement;\r\n    public owner: any = this.data.owner;\r\n    \r\n    constructor(details: { type: 'attribute', target: Node&Attr, data: any, core: Core }) {\r\n        super(details);\r\n        var { target } = details;\r\n        target.ownerElement.addEventListener('node:removed', this.handleNodeRemoved, false);\r\n        return this;\r\n    }\r\n    \r\n    protected handleNodeRemoved = (e: CustomEvent) => {\r\n        console.warn('TODO (ATTRIBUTE): handle target+instance destroy', e);\r\n        super.handleNodeRemoved(e);\r\n    }\r\n    \r\n}\r\n\r\n\r\nclass TextSandboxState extends NodeSandbox {\r\n    \r\n    constructor(details: { type: 'text', target: Text, data: any, core: Core }) {\r\n        super(details);\r\n    }\r\n    \r\n}\r\nclass CommentSandboxState extends NodeSandbox {\r\n    \r\n    constructor(details: { type: 'comment', target: Comment, data: any, core: Core }) {\r\n        super(details);\r\n    }\r\n    \r\n}\r\n\r\nclass PipeSandboxState {}\r\n\r\nclass ServiceSandboxState extends Sandbox implements ISandbox {\r\n    private get config() { return this.core.configuration; }\r\n    // private get director() { return this.config.director; }\r\n    // public get channels() { return this.director.channels; }\r\n    \r\n    constructor(details: { type: 'service', target: Utilities, data: any, core: Core }) {\r\n        super(details);\r\n        return this;\r\n    }\r\n    \r\n}\r\n\r\nclass MicroserviceSandboxState {}\r\nclass IoTSandboxState {}\r\n\r\n\r\nfunction select(details: { type, target: any, data: any, core: Core }): any {\r\n    var { type, target, data, core } = details;\r\n    var Sandbox = {\r\n        ['element']: ElementSandboxState,\r\n        ['attribute']: AttributeSandboxState,\r\n        ['text']: TextSandboxState,\r\n        ['comment']: CommentSandboxState,\r\n        ['pipe']: PipeSandboxState,\r\n        ['service']: ServiceSandboxState,\r\n        ['microservice']: MicroserviceSandboxState,\r\n        ['iot']: IoTSandboxState,\r\n    }[ type ] as any;\r\n    var sandbox = new Sandbox(details);\r\n    \r\n    return sandbox;\r\n}\r\n\r\n\r\nclass SandboxContext extends Sandbox implements ISandbox {\r\n    public element: Element;  // stub\r\n    public content: TemplateSubject;  // stub\r\n    \r\n    constructor(details: { type, target: any, data: any, core: Core }) {\r\n        super(details);\r\n        var sandbox = select(details);\r\n        return sandbox;\r\n    }\r\n    \r\n}\r\n\r\n\r\nexport {\r\n    SandboxContext as Sandbox,\r\n    ServiceSandboxState as ServiceSandbox,\r\n    ElementSandboxState as NodeSandbox,\r\n};\r\n","\r\nimport { Core, Sandbox } from '@motorman/vertices/core';\r\nimport { ChainOfResponsibility } from '@motorman/core/utilities/patterns/behavioral';\r\nimport { Utilities, Deferred } from '@motorman/core/utilities';\r\n\r\nvar utils = new Utilities();\r\n\r\ntype IMetadata = { type: string, selector: string, Class: any, Sandbox: typeof Sandbox };\r\ntype IReferenceInstance = IMetadata & {\r\n    target: Node | Utilities,\r\n    instance: any,\r\n    sandbox: Sandbox,\r\n    owner?: any,\r\n    parent?: any,\r\n    occupants?: Node[],\r\n    occupee?: Node,\r\n    $occupants?: Map<string, Node>,\r\n};\r\n\r\nclass Bootstrap {\r\n    private core: Core = null;  // assume !null if pEnvironment.[[status]] !== pending\r\n    public dEnvironment: Deferred<any> = new Deferred();  // resolver must set this.core before invoking resolve()\r\n    public pEnvironment: Promise<any> = this.dEnvironment.promise;\r\n    get modules() { if (this.core) return this.core.modules; else return null; }\r\n    protected $processed: Map<Node, any> = new Map();\r\n    protected pipeNodeHandler = (handler: Function) => (e: CustomEvent) => handler.call(this, e.detail, e);\r\n    protected nodeProcessors: ChainOfResponsibility = new ChainOfResponsibility({}, [\r\n        { respond: this.pipeNodeHandler(this.processElementNode) },\r\n        { respond: this.pipeNodeHandler(this.processTextNode) },\r\n        { respond: this.pipeNodeHandler(this.processCommentNode) },\r\n    ]);\r\n    \r\n    constructor(options: any = {}) {\r\n        var { pEnvironment } = this;\r\n        \r\n        pEnvironment\r\n            // .then( (env) => this.bootstrapDirector(env) )\r\n            .then( (env) => this.bootstrapServices(env) )\r\n            // .then( (env) => this.bootstrapRouters(env) )  // TODO!\r\n            .then( (env) => this.parseNode(env) )\r\n            ;\r\n        return this;\r\n    }\r\n    \r\n    execute(core: Core): Node&Document {\r\n        var { configuration } = core;\r\n        var { environment } = configuration;\r\n        \r\n        this.core = core;\r\n        this.dEnvironment.resolve(environment);\r\n        \r\n        return environment;\r\n    }\r\n    \r\n    bootstrapServices(env: Document): Node&Document {\r\n        var { core } = this;\r\n        var { modules } = core;\r\n        var { service: $services = new Map() } = modules;\r\n        \r\n        for (let [key, val] of $services) this.bootstrapService(val, key, $services);\r\n        \r\n        return env;\r\n    }\r\n    bootstrapService(metadata: IMetadata, key: string, $services: Map<string, IMetadata>) {\r\n        var { core } = this;\r\n        var { Sandbox, Class, selector } = metadata;\r\n        let data: IReferenceInstance = { target: utils, instance: null, selector, sandbox: null, ...metadata };\r\n        let sandbox = new Sandbox({ type: 'service', target: utils, data, core });\r\n        let instance = new Class(sandbox);\r\n        data.instance = instance;  // is there a better way to do this using Hoisting?\r\n        data.sandbox = sandbox;  // is there a better way to do this using Hoisting?\r\n    }\r\n    \r\n    bootstrapRouters(env: Document) {\r\n        var { core } = this;\r\n        var { modules, configuration } = core;\r\n        var { routers, RouterSandbox } = configuration;  // ?\r\n        var { router: $routers = new Map() } = modules;  // ?\r\n        \r\n        for (let [key, val] of $routers) this.bootstrapRouter(val, key, $routers);\r\n        \r\n        return env;\r\n    }\r\n    bootstrapRouter(metadata: IMetadata, key: string, $services: Map<string, IMetadata>) {\r\n        var { core } = this;\r\n        var { Sandbox, Class, selector } = metadata;\r\n        let data: IReferenceInstance = { target: utils, instance: null, selector, sandbox: null, ...metadata };\r\n        let sandbox = new Sandbox({ type: 'router', target: utils, data, core });\r\n        let instance = new Class(sandbox);\r\n        data.instance = instance;  // is there a better way to do this using Hoisting?\r\n        data.sandbox = sandbox;  // is there a better way to do this using Hoisting?\r\n    }\r\n    \r\n    parseNode(node: Node): Node {\r\n        if (!node) return node;\r\n        if ( this.$processed.has(node) ) return node;\r\n        var { nodeProcessors: cor } = this;\r\n        var e = new CustomEvent('domnodeprocess', { detail: <any>node })\r\n            , e = cor.respond(e)\r\n            , { detail: result = {} } = e\r\n            ;\r\n        var { isConnected, parentNode: parent, previousSibling: previous, nextSibling: next, firstChild: child } = result;\r\n        \r\n        // RECURSION\r\n        // if (result !== node) return this.parseNode(result);  // reparse. assume replacement occurred. do not continue for next or child.\r\n        if (child) this.parseNode(child);  // TCO???\r\n        if (next) this.parseNode(next);  // TCO???\r\n        this.$processed.set(node, node);  // allow full processing of children before setting as processed. !ALERT! watch for memory leaks!\r\n        \r\n        return node;  // result can still equal node\r\n    }\r\n        \r\n    private decorateElement(node: Node&Element, metadata: IMetadata, selector: string, $elements: Map<string, IMetadata>) {\r\n        if ( !node.matches(selector) ) return;\r\n        var { core } = this;\r\n        var { $instances, $targets } = core;\r\n        var { Class, Sandbox } = metadata;\r\n        var { nodeType, childNodes } = node;\r\n        var occupants = Array.prototype.slice.call(childNodes);\r\n        // var occupee = new DocumentFragment();\r\n        var occupee = document.createElement('div');\r\n        var $occupants = new Map();\r\n        \r\n        function addOccupant($occupants: Map<string, Node[]>, occupee: Element, schema: Node&HTMLSlotElement) {\r\n            var { slot: name = '' } = schema, node = schema.cloneNode(true);\r\n            if ( !$occupants.has(name) ) $occupants.set(name, [ ]);\r\n            // console.log('<?>', name);\r\n            $occupants.get(name).push(node);\r\n            occupee.appendChild(node);\r\n        }\r\n        \r\n        occupants.forEach( c => addOccupant($occupants, occupee, c) );\r\n        // while (node.lastChild) node.firstChild.remove();  // clear from original parent to obviate child.cloneNode and maintain same object in Heap\r\n        let owner = this.getOwnerInstance(node), parentData: IReferenceInstance = $instances.get(owner);\r\n        // console.log('-->', node.tagName, owner);\r\n        let data: IReferenceInstance = { selector, target: node, instance: null, owner, sandbox: null, occupants, occupee, $occupants, ...metadata };\r\n        if ( $instances.has(owner) ) data.parent = { occupants: parentData.occupants, $occupants: parentData.$occupants, occupee: parentData.occupee, Class: parentData.Class };\r\n        let sandbox = new Sandbox({ type: 'element', target: node, data, core });  // must be constructed after node is emptied to avoid mutation events.\r\n        let instance = new Class(sandbox);\r\n        data.instance = instance;  // is there a better way to do this using Hoisting?\r\n        data.sandbox = sandbox;  // is there a better way to do this using Hoisting?\r\n        // occupants.forEach( c => addOccupant($occupants, occupee, c) );\r\n        \r\n        $targets.set(node, data);\r\n        $instances.set(instance, data);\r\n    }\r\n    \r\n    private processElementNode(node: Node&Element): Node&Element {  // Node.ELEMENT_NODE === 1\r\n        if ( !{ '1': true }[ node.nodeType ] ) return node;  // https://developer.mozilla.org/en-US/docs/Web/API/Node/nodeType\r\n        var { modules = {} } = this;\r\n        var { element: $elements = new Map() } = modules;\r\n        var { attributes } = node;\r\n        var attribute = attributes[0];\r\n        \r\n        for (let [key, val] of $elements) this.decorateElement(node, val, key, $elements);\r\n        if (attribute) this.processAttributeNode(attribute, ...node.attributes);\r\n        \r\n        return node;\r\n    }\r\n    \r\n    private processAttributeNode(node?: Node&Attr, ...more: (Node&Attr)[]): Node&Attr {\r\n        if ( !node ) return node;\r\n        if ( !{ [Node.ATTRIBUTE_NODE]: true }[ node.nodeType ] ) return node;\r\n        if ( !this.modules.attribute ) return node;\r\n        var { core, modules = {} } = this;\r\n        var { $targets, $instances } = core;\r\n        var { attribute: $attributes = new Map() } = modules;\r\n        var { name, value } = node, metadata = $attributes.get(name);\r\n        var reBinding = /^\\[.+\\]$/\r\n          , reReporter = /^{[^{}]*}$/\r\n          , reReference = /^#$/\r\n          , isBinding = reBinding.test(name)\r\n          , isReporter = reReporter.test(name)\r\n          , hasBinding = $attributes.has('[*]')\r\n          , hasReporter = $attributes.has('{*}')\r\n          , bindable = (isBinding && hasBinding)\r\n          , reportable = (isReporter && hasReporter)\r\n          ;\r\n        \r\n        if ( !$attributes.has(name) && !bindable && !reportable ) return this.processAttributeNode(...more);\r\n        if (bindable) metadata = $attributes.get('[*]');\r\n        if (reportable) metadata = $attributes.get('{*}');\r\n        \r\n        let { Sandbox, Class, selector }: IMetadata = metadata;\r\n        let owner = this.getOwnerInstance(node.ownerElement), parentData: IReferenceInstance = $instances.get(owner);\r\n        let data: IReferenceInstance = { target: node, instance: null, selector, sandbox: null, value, owner, ...metadata };\r\n        if ( $instances.has(owner) ) data.parent = { occupants: parentData.occupants, $occupants: parentData.$occupants, occupee: parentData.occupee, Class: parentData.Class };\r\n        let sandbox = new Sandbox({ type: 'attribute', target: node, data, core });  // must be constructed after node is emptied to avoid mutation events.\r\n        let instance = new Class(sandbox);\r\n        data.instance = instance;  // is there a better way to do this using Hoisting?\r\n        data.sandbox = sandbox;  // is there a better way to do this using Hoisting?\r\n        $targets.set(node, data);\r\n        $instances.set(instance, data);\r\n        \r\n        if ( !more.length ) return node;\r\n        return this.processAttributeNode(...more);\r\n    }\r\n    \r\n    private processTextNode(node: Node&Text): Node&Text {  // Node.TEXT_NODE === 3\r\n        if (!{ '3': true }[ node.nodeType ]) return node;  // https://developer.mozilla.org/en-US/docs/Web/API/Node/nodeType\r\n        if ( !this.modules.text ) return node;\r\n        var { modules } = this;\r\n        var { text: $texts }: { text: Map<RegExp, IMetadata> } = modules;\r\n        \r\n        for (let [key, val] of $texts) this.initializeInstance(node, val, key, $texts);\r\n        \r\n        return node;\r\n    }\r\n    \r\n    private processCommentNode(node: Node&Comment): Node&Comment {  // Node.COMMENT_NODE === 8\r\n        if (!{ '8': true }[ node.nodeType ]) return node;  // https://developer.mozilla.org/en-US/docs/Web/API/Node/nodeType\r\n        if ( !this.modules.comment ) return node;\r\n        var { modules } = this;\r\n        var { comment: $comments }: { comment: Map<RegExp, IMetadata> } = modules;\r\n        \r\n        for (let [key, val] of $comments) this.initializeInstance(node, val, key, $comments);\r\n        \r\n        return node;\r\n    }\r\n    \r\n    private getOwnerInstance(node: Element): any {\r\n        if ( !this.core.$targets.has(node) && !node.parentElement ) return null;\r\n        if ( !this.core.$targets.has(node) ) return this.getOwnerInstance(node.parentElement);\r\n        var { core } = this;\r\n        var { $targets } = core, metadata = $targets.get(node);\r\n        var { instance } = metadata;\r\n        \r\n        if (node && (node as Element).id && (node as Element).id.toString() === '0') console.log('<N>', this.core.$targets.has(node), node.parentNode );\r\n        return instance;\r\n    }\r\n    \r\n    private initializeInstance(node: Node&(Text|Comment), metadata: IMetadata, key: RegExp, $text: Map<RegExp, IMetadata>) {\r\n        var { core } = this;\r\n        var { $instances, $targets } = core;\r\n        var { nodeType, nodeValue } = node;\r\n        var { Sandbox, Class, selector } = metadata;\r\n        \r\n        if ( !key.test(nodeValue) && !{ '#text': true }[ selector ] ) return;\r\n        let owner = this.getOwnerInstance(node.parentElement);\r\n        let type = { [Node.TEXT_NODE]: 'text', [Node.COMMENT_NODE]: 'comment' }[ nodeType ];\r\n        let data: IReferenceInstance = { target: node, instance: null, selector, sandbox: null, owner, ...metadata };\r\n        let sandbox = new Sandbox({ type, target: node, data, core });\r\n        let instance = new Class(sandbox);\r\n        \r\n        data.instance = instance;  // is there a better way to do this using Hoisting?\r\n        data.sandbox = sandbox;  // is there a better way to do this using Hoisting?\r\n        $instances.set(instance, data);\r\n        $targets.set(node, data);\r\n    }\r\n    \r\n}\r\n\r\nexport { Bootstrap };\r\n","\r\n/**\r\n * @name:\r\n * @intention\r\n *  * \r\n */\r\nclass Dictionary extends Map {\r\n        \r\n    constructor(map) {\r\n        super();\r\n        return this;\r\n    }\r\n    \r\n    private serialize(object) {\r\n        var json = JSON.stringify(object);\r\n        return json;\r\n    }\r\n    private deserialize(json) {\r\n        var object = JSON.parse(json);\r\n        return object;\r\n    }\r\n    private copy(object) {\r\n        var json = this.serialize(object), object = this.deserialize(json);\r\n        return object;\r\n    }\r\n    private static fromMap(map: any) {\r\n        var keys = Object.keys(map), pairs = keys.reduce( pair.bind(this, map), [] );\r\n        \r\n        function pair(map, pairs, key, i, keys) {\r\n            var value = map[key], pair = [ key, value ];\r\n            pairs.push(pair);\r\n            return pairs;\r\n        }\r\n        \r\n        return pairs;\r\n    }\r\n    private toMap(entries) {\r\n        var map = { };\r\n        for (let [ key, value ] of entries) map[key] = value;\r\n        return map;\r\n    }\r\n    \r\n    toJSON() {\r\n        return this.valueOf();\r\n    }\r\n    toString() {\r\n        var json = this.serialize( this.valueOf() );\r\n        return json;\r\n    }\r\n    valueOf() {\r\n        return this.toMap( this.entries() );\r\n    }\r\n    \r\n}\r\n\r\nexport { Dictionary };\r\n","\r\n/**\r\n * @name: Stack\r\n * @intention\r\n *  * LIFO (Last-In, First-Out)\r\n */\r\nclass Stack<T> {\r\n    private data: T[] = [ ];\r\n    get length() { return this.size(); }\r\n    get index() { return (this.length - 1); }\r\n    \r\n    constructor(data: T[] = []) {\r\n        this.clear();\r\n        this.data = [ ...data ];\r\n        return this;\r\n    }\r\n    \r\n    private serialize(object) {\r\n        var json = JSON.stringify(object);\r\n        return json;\r\n    }\r\n    private deserialize(json) {\r\n        var object = JSON.parse(json);\r\n        return object;\r\n    }\r\n    private copy(object) {\r\n        var json = this.serialize(object), object = this.deserialize(json);\r\n        return object;\r\n    }\r\n    \r\n    push(value: T): Stack<T> {\r\n        this.data.push(value);\r\n        return this;\r\n    }\r\n    pop(): T {\r\n        var value = this.data.pop();\r\n        return value;\r\n    }\r\n    peek(): T {\r\n        var value = this.data[this.index];\r\n        return value;\r\n    }\r\n    clear(): Stack<T> {\r\n        this.data.length = 0;\r\n        return this;\r\n    }\r\n    size(): number {\r\n        var value = this.data.length;\r\n        return value;\r\n    }\r\n    isEmpty(): boolean {\r\n        var is = !this.size();\r\n        return is;\r\n    }\r\n    \r\n    toJSON(): T[] {\r\n        return this.valueOf();\r\n    }\r\n    toString(): string {\r\n        var json = this.serialize( this.valueOf() );\r\n        return json;\r\n    }\r\n    valueOf(): T[] {\r\n        return this.data.slice(0);\r\n    }\r\n    \r\n}\r\n\r\nexport { Stack };\r\n","\r\n/**\r\n * @name: Queue\r\n * @intention\r\n *  * FIFO (First-In, First-Out)\r\n */\r\nclass Queue<T> {\r\n    private data: T[] = [ ];\r\n    get length() { return this.size(); }\r\n    get index() { return 0; }\r\n    \r\n    constructor(data: T[] = []) {\r\n        this.clear();\r\n        this.data = [ ...data ];\r\n        return this;\r\n    }\r\n    \r\n    private serialize(object) {\r\n        var json = JSON.stringify(object);\r\n        return json;\r\n    }\r\n    private deserialize(json) {\r\n        var object = JSON.parse(json);\r\n        return object;\r\n    }\r\n    private copy(object) {\r\n        var json = this.serialize(object), object = this.deserialize(json);\r\n        return object;\r\n    }\r\n    \r\n    enqueue(value) {\r\n        this.data.push(value);\r\n        return this;\r\n    }\r\n    dequeue() {\r\n        var value = this.data.shift();\r\n        return value;\r\n    }\r\n    front() {\r\n        var value = this.data[this.index];\r\n        return value;\r\n    }\r\n    clear() {\r\n        this.data.length = 0;\r\n        return this;\r\n    }\r\n    size() {\r\n        var value = this.data.length;\r\n        return value;\r\n    }\r\n    isEmpty() {\r\n        var is = !this.size();\r\n        return is;\r\n    }\r\n    \r\n    toJSON() {\r\n        return this.valueOf();\r\n    }\r\n    toString() {\r\n        var json = this.serialize( this.valueOf() );\r\n        return json;\r\n    }\r\n    valueOf() {\r\n        return this.data.slice(0);\r\n    }\r\n    \r\n}\r\n\r\nexport { Queue };\r\n","\r\nexport { Dictionary } from './dictionary';\r\nexport { Stack } from './stack';\r\nexport { Queue } from './queue';\r\nexport { LinkedList } from './linked-list';\r\n","\"use strict\";\n\nvar isOldIE = function isOldIE() {\n  var memo;\n  return function memorize() {\n    if (typeof memo === 'undefined') {\n      // Test for IE <= 9 as proposed by Browserhacks\n      // @see http://browserhacks.com/#hack-e71d8692f65334173fee715c222cb805\n      // Tests for existence of standard globals is to allow style-loader\n      // to operate correctly into non-standard environments\n      // @see https://github.com/webpack-contrib/style-loader/issues/177\n      memo = Boolean(window && document && document.all && !window.atob);\n    }\n\n    return memo;\n  };\n}();\n\nvar getTarget = function getTarget() {\n  var memo = {};\n  return function memorize(target) {\n    if (typeof memo[target] === 'undefined') {\n      var styleTarget = document.querySelector(target); // Special case to return head of iframe instead of iframe itself\n\n      if (window.HTMLIFrameElement && styleTarget instanceof window.HTMLIFrameElement) {\n        try {\n          // This will throw an exception if access to iframe is blocked\n          // due to cross-origin restrictions\n          styleTarget = styleTarget.contentDocument.head;\n        } catch (e) {\n          // istanbul ignore next\n          styleTarget = null;\n        }\n      }\n\n      memo[target] = styleTarget;\n    }\n\n    return memo[target];\n  };\n}();\n\nvar stylesInDom = {};\n\nfunction modulesToDom(moduleId, list, options) {\n  for (var i = 0; i < list.length; i++) {\n    var part = {\n      css: list[i][1],\n      media: list[i][2],\n      sourceMap: list[i][3]\n    };\n\n    if (stylesInDom[moduleId][i]) {\n      stylesInDom[moduleId][i](part);\n    } else {\n      stylesInDom[moduleId].push(addStyle(part, options));\n    }\n  }\n}\n\nfunction insertStyleElement(options) {\n  var style = document.createElement('style');\n  var attributes = options.attributes || {};\n\n  if (typeof attributes.nonce === 'undefined') {\n    var nonce = typeof __webpack_nonce__ !== 'undefined' ? __webpack_nonce__ : null;\n\n    if (nonce) {\n      attributes.nonce = nonce;\n    }\n  }\n\n  Object.keys(attributes).forEach(function (key) {\n    style.setAttribute(key, attributes[key]);\n  });\n\n  if (typeof options.insert === 'function') {\n    options.insert(style);\n  } else {\n    var target = getTarget(options.insert || 'head');\n\n    if (!target) {\n      throw new Error(\"Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.\");\n    }\n\n    target.appendChild(style);\n  }\n\n  return style;\n}\n\nfunction removeStyleElement(style) {\n  // istanbul ignore if\n  if (style.parentNode === null) {\n    return false;\n  }\n\n  style.parentNode.removeChild(style);\n}\n/* istanbul ignore next  */\n\n\nvar replaceText = function replaceText() {\n  var textStore = [];\n  return function replace(index, replacement) {\n    textStore[index] = replacement;\n    return textStore.filter(Boolean).join('\\n');\n  };\n}();\n\nfunction applyToSingletonTag(style, index, remove, obj) {\n  var css = remove ? '' : obj.css; // For old IE\n\n  /* istanbul ignore if  */\n\n  if (style.styleSheet) {\n    style.styleSheet.cssText = replaceText(index, css);\n  } else {\n    var cssNode = document.createTextNode(css);\n    var childNodes = style.childNodes;\n\n    if (childNodes[index]) {\n      style.removeChild(childNodes[index]);\n    }\n\n    if (childNodes.length) {\n      style.insertBefore(cssNode, childNodes[index]);\n    } else {\n      style.appendChild(cssNode);\n    }\n  }\n}\n\nfunction applyToTag(style, options, obj) {\n  var css = obj.css;\n  var media = obj.media;\n  var sourceMap = obj.sourceMap;\n\n  if (media) {\n    style.setAttribute('media', media);\n  } else {\n    style.removeAttribute('media');\n  }\n\n  if (sourceMap && btoa) {\n    css += \"\\n/*# sourceMappingURL=data:application/json;base64,\".concat(btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))), \" */\");\n  } // For old IE\n\n  /* istanbul ignore if  */\n\n\n  if (style.styleSheet) {\n    style.styleSheet.cssText = css;\n  } else {\n    while (style.firstChild) {\n      style.removeChild(style.firstChild);\n    }\n\n    style.appendChild(document.createTextNode(css));\n  }\n}\n\nvar singleton = null;\nvar singletonCounter = 0;\n\nfunction addStyle(obj, options) {\n  var style;\n  var update;\n  var remove;\n\n  if (options.singleton) {\n    var styleIndex = singletonCounter++;\n    style = singleton || (singleton = insertStyleElement(options));\n    update = applyToSingletonTag.bind(null, style, styleIndex, false);\n    remove = applyToSingletonTag.bind(null, style, styleIndex, true);\n  } else {\n    style = insertStyleElement(options);\n    update = applyToTag.bind(null, style, options);\n\n    remove = function remove() {\n      removeStyleElement(style);\n    };\n  }\n\n  update(obj);\n  return function updateStyle(newObj) {\n    if (newObj) {\n      if (newObj.css === obj.css && newObj.media === obj.media && newObj.sourceMap === obj.sourceMap) {\n        return;\n      }\n\n      update(obj = newObj);\n    } else {\n      remove();\n    }\n  };\n}\n\nmodule.exports = function (moduleId, list, options) {\n  options = options || {}; // Force single-tag solution on IE6-9, which has a hard limit on the # of <style>\n  // tags it will allow on a page\n\n  if (!options.singleton && typeof options.singleton !== 'boolean') {\n    options.singleton = isOldIE();\n  }\n\n  moduleId = options.base ? moduleId + options.base : moduleId;\n  list = list || [];\n\n  if (!stylesInDom[moduleId]) {\n    stylesInDom[moduleId] = [];\n  }\n\n  modulesToDom(moduleId, list, options);\n  return function update(newList) {\n    newList = newList || [];\n\n    if (Object.prototype.toString.call(newList) !== '[object Array]') {\n      return;\n    }\n\n    if (!stylesInDom[moduleId]) {\n      stylesInDom[moduleId] = [];\n    }\n\n    modulesToDom(moduleId, newList, options);\n\n    for (var j = newList.length; j < stylesInDom[moduleId].length; j++) {\n      stylesInDom[moduleId][j]();\n    }\n\n    stylesInDom[moduleId].length = newList.length;\n\n    if (stylesInDom[moduleId].length === 0) {\n      delete stylesInDom[moduleId];\n    }\n  };\n};","\"use strict\";\n\n/*\n  MIT License http://www.opensource.org/licenses/mit-license.php\n  Author Tobias Koppers @sokra\n*/\n// css base code, injected by the css-loader\n// eslint-disable-next-line func-names\nmodule.exports = function (useSourceMap) {\n  var list = []; // return the list of modules as css string\n\n  list.toString = function toString() {\n    return this.map(function (item) {\n      var content = cssWithMappingToString(item, useSourceMap);\n\n      if (item[2]) {\n        return \"@media \".concat(item[2], \" {\").concat(content, \"}\");\n      }\n\n      return content;\n    }).join('');\n  }; // import a list of modules into the list\n  // eslint-disable-next-line func-names\n\n\n  list.i = function (modules, mediaQuery) {\n    if (typeof modules === 'string') {\n      // eslint-disable-next-line no-param-reassign\n      modules = [[null, modules, '']];\n    }\n\n    for (var i = 0; i < modules.length; i++) {\n      var item = [].concat(modules[i]);\n\n      if (mediaQuery) {\n        if (!item[2]) {\n          item[2] = mediaQuery;\n        } else {\n          item[2] = \"\".concat(mediaQuery, \" and \").concat(item[2]);\n        }\n      }\n\n      list.push(item);\n    }\n  };\n\n  return list;\n};\n\nfunction cssWithMappingToString(item, useSourceMap) {\n  var content = item[1] || ''; // eslint-disable-next-line prefer-destructuring\n\n  var cssMapping = item[3];\n\n  if (!cssMapping) {\n    return content;\n  }\n\n  if (useSourceMap && typeof btoa === 'function') {\n    var sourceMapping = toComment(cssMapping);\n    var sourceURLs = cssMapping.sources.map(function (source) {\n      return \"/*# sourceURL=\".concat(cssMapping.sourceRoot || '').concat(source, \" */\");\n    });\n    return [content].concat(sourceURLs).concat([sourceMapping]).join('\\n');\n  }\n\n  return [content].join('\\n');\n} // Adapted from convert-source-map (MIT)\n\n\nfunction toComment(sourceMap) {\n  // eslint-disable-next-line no-undef\n  var base64 = btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap))));\n  var data = \"sourceMappingURL=data:application/json;charset=utf-8;base64,\".concat(base64);\n  return \"/*# \".concat(data, \" */\");\n}","\r\nimport { IEventAggregator } from '../eventaggregator.interface';\r\nimport { IDirectorOptions } from './options.interface';\r\nimport { Reactive as Store } from '../store';\r\nimport { Utilities } from '../utilities';\r\n\r\n\r\nclass Director extends Store implements IEventAggregator {\r\n    private dependencies: IDirectorOptions;\r\n    private actionHandlers: any;\r\n    private stateHandlers: any;\r\n    public utils: Utilities = new Utilities();\r\n    public channels: any;\r\n\r\n    constructor(options: IDirectorOptions) {\r\n        super({ id: 'app' });\r\n        var { channels, ActionHandlers, StateHandlers, Dependencies } = options;\r\n        var dependencies = new Dependencies(this);\r\n        var actionHandlers = new ActionHandlers(this, dependencies)\r\n          , stateHandlers = new StateHandlers(this, dependencies)\r\n          ;\r\n        \r\n        this.channels = channels;\r\n        this.dependencies = dependencies;\r\n        this.actionHandlers = actionHandlers;\r\n        this.stateHandlers = stateHandlers;\r\n        this.register('publishers', actionHandlers);\r\n        this.attach({ next: this.handleState });\r\n    }\r\n\r\n    private handleState = (e: CustomEvent) => {\r\n        var { type, detail } = e;\r\n        var { stateHandlers: handlers } = this;\r\n        var action = handlers[type];\r\n\r\n        if (action) action.call(handlers, e);\r\n        // else setTimeout( () => console.log('@ OBSERVED STATE', type, detail), (1000 * 10) );\r\n    };\r\n\r\n    emit(channel: string, data?: any, ...more: any[]) {\r\n        this.dispatch(channel, data, ...more);\r\n        return this;\r\n    }\r\n\r\n}\r\n\r\nexport { Director };\r\n","\r\nimport { ISubscriber } from '../subscriber.interface';\r\nimport { Reactive as Director } from '../director';\r\nimport { ISandbox } from './sandbox.interface';\r\n\r\n\r\nclass Sandbox implements ISandbox {\r\n    get utils() { return this.director.utils; }\r\n    get channels() { return this.director.channels; }\r\n\r\n    constructor(protected director: Director) {\r\n        return this;\r\n    }\r\n    \r\n    protected get(channel: string): string {\r\n        if ( !(channel in this.channels) ) console.warn(`Warning! channel \"${channel}\" does not exist in channels.`);\r\n        var channel: string = this.channels[channel] || channel;\r\n        return channel;\r\n    }\r\n\r\n    in(channel: string) {\r\n        var channel: string = this.get(channel);\r\n        return this.director.in(channel);\r\n    }\r\n    publish(channel: string, data?: any, ...more: any[]) {\r\n        var channel: string = this.get(channel);\r\n        this.director.publish(channel, data, ...more);\r\n        return this;\r\n    }\r\n    subscribe(channel: string, handler: Function) {\r\n        var channel: string = this.get(channel);\r\n        this.director.subscribe(channel, handler);\r\n        return this;\r\n    }\r\n    unsubscribe(channel: string, handler: Function) {\r\n        var channel: string = this.get(channel);\r\n        this.director.unsubscribe(channel, handler);\r\n        return this;\r\n    }\r\n    attach(observer: ISubscriber) {\r\n        this.director.attach(observer);\r\n        return this;\r\n    }\r\n    detach(observer: ISubscriber) {\r\n        this.director.detach(observer);\r\n        return this;\r\n    }\r\n\r\n}\r\n\r\nexport { Sandbox };\r\n","\r\n// INTERFACES\r\nexport { IEventAggregator } from './eventaggregator.interface';\r\nexport { ISandbox } from './sandbox';\r\n// STANDARD/NATIVE\r\nexport { Reactive as EventHub } from './eventhub';  // |----------------------------------------------------------------\r\nexport { Reactive as Mediator } from './mediator';  // |\r\nexport { Reactive as Director } from './director';  // |         <-- TODO: use add normal, non-reactive\r\nexport { Reactive as Sandbox } from './sandbox';    // |\r\nexport { Reactive as Store } from './store';        // |----------------------------------------------------------------\r\n// REACTIVE\r\nimport * as reactive from './reactive';\r\nexport { reactive };\r\n","\r\nimport { ElementNode } from '@motorman/vertices';\r\nimport { NodeSandbox as Sandbox } from '@motorman/vertices/core';\r\n\r\n@ElementNode({ selector: 'v-backdrop' })\r\nexport class BackdropComponent {\r\n    \r\n    constructor(private $: Sandbox) {\r\n        $.in('BACKDROP:REQUESTED').subscribe(this.handleRequest);\r\n        $.in('BACKDROP:DISMISSED').subscribe(this.handleDismiss);\r\n        $.state.set(this);\r\n    }\r\n    \r\n    private handleRequest = (e: CustomEvent) => {\r\n        this.$.node.setAttribute('active', 'true');\r\n    };\r\n    \r\n    private handleDismiss = (e: CustomEvent) => {\r\n        this.$.node.setAttribute('active', 'false');\r\n    };\r\n    \r\n}\r\n","var api = require(\"!../../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../../node_modules/css-loader/dist/cjs.js!../../../../../../node_modules/sass-loader/dist/cjs.js!./backdrop.component.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(module.id, content, options);\n\nvar exported = content.locals ? content.locals : {};\n\n\n\nmodule.exports = exported;","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../../../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \"v-backdrop{position:fixed;top:0;bottom:0;left:0;right:0;opacity:0.8;display:none;z-index:999}v-backdrop::before{content:\\\"\\\";display:block;position:relative;top:0;bottom:0;left:0;right:0;width:100%;height:100%;background-color:#333}v-backdrop[active=\\\"true\\\"]{display:block}\\n\", \"\"]);\n// Exports\nmodule.exports = exports;\n"],"sourceRoot":""}