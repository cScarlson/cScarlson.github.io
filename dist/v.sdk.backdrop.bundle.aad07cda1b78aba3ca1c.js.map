{"version":3,"sources":["webpack:///./src/@motorman/vertices/core/defaults.js","webpack:///./src/@motorman/vertices/core/core.ts","webpack:///./src/@motorman/vertices/core/api.js","webpack:///./src/@motorman/vertices/core/element-engine.ts","webpack:///./src/@motorman/vertices/core/index.ts","webpack:///./src/@motorman/vertices/core/decorators.ts","webpack:///./src/@motorman/core/utilities/utilities.ts","webpack:///./src/@motorman/core/utilities/patterns/other/deferred.ts","webpack:///./src/@motorman/core/utilities/patterns/other/detective.ts","webpack:///./src/@motorman/core/utilities/index.ts","webpack:///./src/@motorman/vertices/index.ts","webpack:///./src/@motorman/core/utilities/patterns/behavioral/chainOfRespnsibility.ts","webpack:///./src/@motorman/core/utilities/patterns/behavioral/command.ts","webpack:///./src/@motorman/core/utilities/patterns/behavioral/mediator/eventhub.ts","webpack:///./src/@motorman/core/utilities/patterns/behavioral/index.ts","webpack:///./src/@motorman/core/utilities/patterns/behavioral/observer.ts","webpack:///./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js","webpack:///./node_modules/css-loader/dist/runtime/api.js","webpack:///./src/@motorman/vertices/core/sandbox.ts","webpack:///./src/@motorman/vertices/core/bootstrap.ts","webpack:///./src/@motorman/core/utilities/ds/dictionary.ts","webpack:///./src/@motorman/core/utilities/ds/stack.ts","webpack:///./src/@motorman/core/utilities/ds/queue.ts","webpack:///./src/@motorman/core/utilities/ds/index.ts","webpack:///./node_modules/tslib/tslib.es6.js","webpack:///./node_modules/rxjs/_esm5/internal/util/isFunction.js","webpack:///./node_modules/rxjs/_esm5/internal/config.js","webpack:///./node_modules/rxjs/_esm5/internal/util/hostReportError.js","webpack:///./node_modules/rxjs/_esm5/internal/Observer.js","webpack:///./node_modules/rxjs/_esm5/internal/util/isArray.js","webpack:///./node_modules/rxjs/_esm5/internal/util/UnsubscriptionError.js","webpack:///./node_modules/rxjs/_esm5/internal/Subscription.js","webpack:///./node_modules/rxjs/_esm5/internal/util/isObject.js","webpack:///./node_modules/rxjs/_esm5/internal/symbol/rxSubscriber.js","webpack:///./node_modules/rxjs/_esm5/internal/Subscriber.js","webpack:///./node_modules/rxjs/_esm5/internal/symbol/observable.js","webpack:///./node_modules/rxjs/_esm5/internal/util/noop.js","webpack:///./node_modules/rxjs/_esm5/internal/util/pipe.js","webpack:///./node_modules/rxjs/_esm5/internal/Observable.js","webpack:///./node_modules/rxjs/_esm5/internal/util/toSubscriber.js","webpack:///./node_modules/rxjs/_esm5/internal/util/canReportError.js","webpack:///./node_modules/rxjs/_esm5/internal/util/ObjectUnsubscribedError.js","webpack:///./node_modules/rxjs/_esm5/internal/SubjectSubscription.js","webpack:///./node_modules/rxjs/_esm5/internal/Subject.js","webpack:///./node_modules/rxjs/_esm5/internal/scheduler/QueueAction.js","webpack:///./node_modules/rxjs/_esm5/internal/scheduler/AsyncAction.js","webpack:///./node_modules/rxjs/_esm5/internal/scheduler/Action.js","webpack:///./node_modules/rxjs/_esm5/internal/Scheduler.js","webpack:///./node_modules/rxjs/_esm5/internal/scheduler/queue.js","webpack:///./node_modules/rxjs/_esm5/internal/scheduler/QueueScheduler.js","webpack:///./node_modules/rxjs/_esm5/internal/scheduler/AsyncScheduler.js","webpack:///./node_modules/rxjs/_esm5/internal/observable/empty.js","webpack:///./node_modules/rxjs/_esm5/internal/util/isScheduler.js","webpack:///./node_modules/rxjs/_esm5/internal/util/subscribeToArray.js","webpack:///./node_modules/rxjs/_esm5/internal/Notification.js","webpack:///./node_modules/rxjs/_esm5/internal/scheduled/scheduleArray.js","webpack:///./node_modules/rxjs/_esm5/internal/observable/fromArray.js","webpack:///./node_modules/rxjs/_esm5/internal/observable/throwError.js","webpack:///./node_modules/rxjs/_esm5/internal/observable/of.js","webpack:///./node_modules/rxjs/_esm5/internal/operators/observeOn.js","webpack:///./node_modules/rxjs/_esm5/internal/ReplaySubject.js","webpack:///./node_modules/rxjs/_esm5/internal/operators/filter.js","webpack:///./node_modules/rxjs/_esm5/internal/operators/map.js","webpack:///./src/@motorman/core/store/store.rxjs.ts","webpack:///./src/@motorman/core/mediator/mediator.rxjs.ts","webpack:///./src/@motorman/core/eventhub/eventhub.rxjs.ts","webpack:///./src/@motorman/core/director/director.rxjs.ts","webpack:///./src/@motorman/core/sandbox/sandbox.rxjs.ts","webpack:///./src/@motorman/core/index.ts","webpack:///./src/@motorman/vertices/sdk/components/backdrop/backdrop.component.ts","webpack:///./src/@motorman/vertices/sdk/components/backdrop/backdrop.component.scss?c95c","webpack:///./src/@motorman/vertices/sdk/components/backdrop/backdrop.component.scss"],"names":["DefaultNodeSandbox","element","DEFAULT_CONFIG","director","selector","datasets","decorators","services","utils","components","dConfiguration","pConfiguration","this","promise","dInitialization","pInitialization","$instances","Map","$targets","modules","configuration","then","config","resolve","bootstrap","options","environment","execute","extend","metadata","registerModule","_selector","Sandbox","_Sandbox","type","Class","set","target","startServices","call","service","registry","i","len","length","startService","metadatum","data","id","ComponentSandbox","Vertex","Vertices","Core","Facade","V","register","apply","arguments","core","configure","init","component","name","command","composeCommand","item","handler","composeExecutor","Metadata","klass","$members","$observedAttributes","$watchers","$elements","$attrs","$listeners","$subscriptions","DEFAULT_DESCRIPTOR","writable","configurable","enumerable","ElementNode","definition","key","members","meta","AttributeNode","TextNode","CommentNode","Directive","Pipe","Service","object","ns","keys","split","shift","Function","namespace","value","get","observe","attr","thus","descriptor","constructor","action","true","false","process","hasGet","hasSet","hasGetOrSet","hasGetAndSet","decorator","alias","isHost","matches","RegExp","exec","match","tagName","MethodProxy","fn","args","result","Reflect","proxy","Proxy","observee","observer","listener","message","trigger","CSV","collection","fields","delimiter","$table","$values","$lines","matrix","lines","span","Object","reduce","o","x","width","j","height","y","row","rows","col","columns","_id","field","record","column","line","Math","max","join","tabs","Array","map","concat","replace","csv","slice","array","datum","bind","push","Utilities","console","first","more","k","null","undefined","0","splat","window","setTimeout","timeout","delay","params","log","clearTimeout","timer","context","threshhold","scope","deferTimer","now","Date","last","invoke","c","r","random","toString","s","path","drill","str","interpolate$","a","b","f","val","escapeHTML","re","matcher","string","values","url","document","createElement","href","hash","host","hostname","origin","pathname","port","protocol","search","methods","prototype","sortByKey","size","unit","$","toFixed","$bytes","$KB","$MB","$GB","$TB","$PB","bytes","KB","MB","GB","TB","PB","auto","Infinity","n","Number","round","Deferred","_resolve","_reject","Promise","exe","reject","Detective","detector","EventTarget","e","receiver","emitter","oldValue","CustomEvent","detail","detect","dispatchEvent","getPrototypeOf","dtor","getOwnPropertyDescriptor","getPropertyDescriptor","getter","setter","defineProperty","next","composite","getContextAndKey","has","hasOwnProperty","hasProperty","addEventListener","Handler","ChainOfResponsibility","responders","super","cancelable","bubbles","respond","cancelBubble","defaultPrevented","handlers","propagate","event","stopImmediatePropagation","StrictCommand","Subject","observers","notify","observation","update","splice","state","memo","isOldIE","Boolean","all","atob","getTarget","styleTarget","querySelector","HTMLIFrameElement","contentDocument","head","stylesInDom","modulesToDom","moduleId","list","part","css","media","sourceMap","addStyle","insertStyleElement","style","attributes","nonce","forEach","setAttribute","insert","Error","appendChild","textStore","replaceText","index","replacement","filter","applyToSingletonTag","remove","obj","styleSheet","cssText","cssNode","createTextNode","childNodes","removeChild","insertBefore","applyToTag","removeAttribute","btoa","unescape","encodeURIComponent","JSON","stringify","firstChild","singleton","singletonCounter","styleIndex","parentNode","removeStyleElement","newObj","module","exports","base","newList","useSourceMap","content","cssMapping","sourceMapping","base64","sourceURLs","sources","source","sourceRoot","cssWithMappingToString","mediaQuery","TemplateSubject","sandbox","repository","DocumentFragment","digestion","template","events","whole","$1","$2","charCodeAt","html","collectEventTypes","encodePropertyTokens","interpolate","innerHTML","StateSubject","states","peek","MutationManager","MutationObserver","instance","changes","mutation","addedNodes","removedNodes","nodes","node","tParent","p","parseNode","attributeName","getAttributeNode","operation","hasAttribute","childList","characterData","subtree","attributeOldValue","characterDataOldValue","disconnect","EventManager","$events","handleAll","parentElement","parent","any","recursive","Event","handleAny","currentTarget","property","full","from","clear","emit","removeEventListener","details","NodeSandbox","warn","ElementProxy","NamedNodeMapProxy","AttributeProxy","current","nodeValue","deleteProperty","ownerElement","spec","old","t","m","ElementSandboxState","delegations","mutations","attrs","$classes","classList","$dataset","dataset","handleNodeRemoved","handleChildrenRemoved","handleChildRemoved","attach","handleTemplateUpdate","handleStateUpdate","connect","root","child","AttributeSandboxState","attribute","owner","TextSandboxState","CommentSandboxState","PipeSandboxState","ServiceSandboxState","MicroserviceSandboxState","IoTSandboxState","SandboxContext","select","Bootstrap","dEnvironment","pEnvironment","$processed","pipeNodeHandler","nodeProcessors","processElementNode","processTextNode","processCommentNode","env","bootstrapServices","$services","bootstrapService","routers","RouterSandbox","router","$routers","bootstrapRouter","cor","isConnected","previousSibling","previous","nextSibling","nodeType","occupants","occupee","$occupants","schema","slot","cloneNode","addOccupant","getOwnerInstance","parentData","decorateElement","processAttributeNode","Node","ATTRIBUTE_NODE","$attributes","isBinding","test","isReporter","hasBinding","hasReporter","bindable","reportable","text","$texts","initializeInstance","comment","$comments","$text","TEXT_NODE","COMMENT_NODE","Stack","json","parse","serialize","deserialize","pop","valueOf","Queue","extendStatics","d","setPrototypeOf","__proto__","__extends","__","create","isFunction","_enable_super_gross_mode_that_will_cause_bad_things","stack","hostReportError","err","empty","closed","error","useDeprecatedSynchronousErrorHandling","complete","isArray","UnsubscriptionError","UnsubscriptionErrorImpl","errors","Subscription","unsubscribe","_parentOrParents","_subscriptions","_unsubscribe","flattenUnsubscriptionErrors","sub","add","teardown","subscription","EMPTY","tmp","indexOf","subscriptions","subscriptionIndex","errs","rxSubscriber","Symbol","_super","Subscriber","destinationOrNext","_this","syncErrorValue","syncErrorThrown","syncErrorThrowable","isStopped","destination","subscriber","_next","_error","_complete","_unsubscribeAndRecycle","SafeSubscriber","_parentSubscriber","observerOrNext","_context","__tryOrSetError","__tryOrUnsub","wrappedComplete","observable","noop","pipeFromArray","fns","input","prev","Observable","subscribe","_isScalar","_subscribe","lift","operator","sink","nextOrObserver","toSubscriber","_trySubscribe","_a","closed_1","canReportError","promiseCtor","getPromiseCtor","pipe","operations","_i","toPromise","ObjectUnsubscribedError","ObjectUnsubscribedErrorImpl","SubjectSubscription","subject","subscriberIndex","SubjectSubscriber","hasError","thrownError","copy","asObservable","AnonymousSubject","QueueAction","scheduler","work","schedule","flush","_execute","requestAsyncId","AsyncAction","pending","recycleAsyncId","setInterval","clearInterval","errored","errorValue","actions","Action","Scheduler","SchedulerAction","queue","QueueScheduler","AsyncScheduler","delegate","active","scheduled","emptyScheduled","isScheduler","NotificationKind","scheduleArray","fromArray","dispatch","Notification","kind","hasValue","do","accept","toObservable","of","createNext","undefinedValueNotification","createError","createComplete","completeNotification","ObserveOnSubscriber","arg","notification","scheduleMessage","ObserveOnMessage","ReplaySubject","bufferSize","windowTime","POSITIVE_INFINITY","_events","_infiniteTimeWindow","_bufferSize","_windowTime","nextInfiniteTimeWindow","nextTimeWindow","ReplayEvent","_getNow","_trimBufferThenGetEvents","eventsCount","spliceCount","time","FilterOperator","predicate","thisArg","FilterSubscriber","count","MapOperator","project","MapSubscriber","initializations","initialized","channels$","channel","filterChannel","mapData","TypeError","in","publishers","publish","$data","paths","entries","settings","handleState","stateHandlers","channels","ActionHandlers","StateHandlers","Dependencies","dependencies","actionHandlers","detach","BackdropComponent","handleRequest","handleDismiss","api","__esModule","default","exported","locals","___CSS_LOADER_API_IMPORT___"],"mappings":"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","file":"v.sdk.backdrop.bundle.aad07cda1b78aba3ca1c.js","sourcesContent":["\r\nfunction bootstrap(target) {\r\n    var element = target;\r\n    var selector = this.selector;\r\n    var data = element.dataset || {};\r\n    var ex = /[\\s]+/img;\r\n    var slug = data.behavior || element.v || '';\r\n    var components = slug.split(ex);\r\n    var children = element.children;// element.querySelectorAll(selector);\r\n    (this, document, data, slug, components, children);\r\n    \r\n    var resolveScope = function resolveScope(parent, child) {\r\n        var isDirectDescendant = (child.parentNode === parent);\r\n        if (isDirectDescendant) bootstrap.call(this, child);\r\n    }.bind(this, element);\r\n    \r\n    // components.forEach(this.bootstrap.bind(this, element));\r\n    // Array.prototype.forEach.call(children, resolveScope);\r\n    \r\n    // ... or? ...\r\n    \r\n    Array.prototype.forEach.call(children, resolveScope);  // TODO: Optimize!!!\r\n    if (!!slug) components.forEach(this.bootstrap.bind(this, element));\r\n}\r\n\r\nfunction $bootstrap(root, medium) {\r\n    var scopeSelector = '[data-behavior]'\r\n      , $root = $(root)\r\n      , $parent = $root.find(scopeSelector)\r\n      , hasBehavior = $root.is(scopeSelector)\r\n      ;\r\n    var slug = $root.attr('data-behavior')\r\n      , formattedSlug = slug && slug.replace(/^[,;\\s]+|[,;\\s]+$/g, '').replace(/[,;\\s]+/g, '|').replace(/[|]+$/g, '') || ''\r\n      , moduleIds = $.unique(formattedSlug.split('|')).sort()\r\n      , scopeId = moduleIds.join(' ')\r\n      ;\r\n    var childMedium = medium.$spawn(new function ChildScope() { this.element = root; });\r\n    \r\n\r\n    var resolveBehavior = function resolveBehavior(scope, behavior, i, a) {\r\n        var scope = ($root.is('html')) ? document : scope;\r\n        this.start(behavior, scope, scopeId, childMedium);\r\n    }.bind(this, $root[0]);\r\n\r\n    var resolveChildren = function resolveChildren(i, scope) {\r\n        var $firstScope = $(scope);\r\n        if (!$($firstScope.parent()).is($parent)) {\r\n            autoRegisterModules.call(this, $firstScope, childMedium);\r\n        }\r\n\r\n    }.bind(this);\r\n\r\n    moduleIds.forEach(resolveBehavior);\r\n    $parent.each(resolveChildren);\r\n\r\n}\r\n\r\nclass DefaultDirector {}\r\n\r\nfunction DefaultSandbox(anything) { return anything; }  // see The Decorator Pattern @GoF\r\nfunction DefaultServicesSandbox(utils) { return utils; }\r\nfunction DefaultNodeSandbox(element) { return element; }\r\n\r\nexport { bootstrap, $bootstrap, DefaultDirector, DefaultSandbox, DefaultServicesSandbox, DefaultNodeSandbox as DefaultComponentSandbox };\r\n","\r\nimport { Utilities, Deferred } from '@motorman/core/utilities';\r\nimport { IEventAggregator } from '@motorman/core/eventaggregator.interface';\r\nimport { bootstrap, $bootstrap, DefaultDirector, DefaultSandbox, DefaultComponentSandbox, DefaultServicesSandbox } from './defaults';\r\nimport { ElementEngine } from './element-engine';\r\n\r\n\r\nclass DOMUtilities {\r\n    \r\n    constructor(protected node: Node) {}\r\n    \r\n    forEach(node: Node): Node {\r\n        // var { isConnected, parentNode: parent, previousSibling: previous, nextSibling: next, firstChild: child } = result;\r\n        \r\n        // // RECURSION\r\n        // if (result !== node) return this.parseNode(result);  // reparse. assume replacement occurred. do not continue for next or child.\r\n        // if (child) this.parseNode(child);  // TCO???\r\n        // if (next) this.parseNode(next);  // TCO???\r\n        // this.dTemplateReady.resolve(true);  // gets fulfilled after last element processed. noop after that.\r\n        \r\n        return node;  // result can still equal node\r\n    }\r\n    \r\n}\r\n\r\n\r\ntype ModuleType = string | 'service'|'element'|'attribute'|'IoT' | ''|'component'|'directive'|'';\r\n\r\ninterface IModuleMetadata {\r\n    type: ModuleType;\r\n    selector: string;\r\n    Class: any;\r\n    Sandbox?: any;  // sandbox\r\n}\r\n\r\ninterface IBootstrap {  // Note similarity to The Command Pattern. implementer only needs Instance.execute and not necessarily an \"action\"\r\n    new(context: Core, action?: string);\r\n    execute(environment: any): any;\r\n}\r\ninterface IConfiguration {\r\n    environment: any;\r\n    director: IEventAggregator;  // maybe unnecessary. perhaps sandbox should be provided by V.register(metadata);\r\n    selector: string;\r\n    Sandbox: (typeof DefaultSandbox)|any;  // perhaps sandbox should be provided by V.register(metadata);\r\n    bootstrap: IBootstrap;\r\n}\r\n\r\nvar director = new DefaultDirector();\r\nvar DEFAULT_CONFIG = {  // ... defaults\r\n    director,\r\n    selector: '[data-v]' || '[data-behavior]',\r\n    datasets: '[v-attribute]',  // includes <script type=\"application/json\"> { items: [...] } </scrpt>\r\n    // bootstrap: bootstrap,\r\n    decorators: { services: DefaultServicesSandbox, components: DefaultComponentSandbox, },\r\n};\r\n\r\nclass Core {\r\n    private dConfiguration: Deferred<any> = new Deferred();\r\n    private pConfiguration: Promise<any> = this.dConfiguration.promise;\r\n    private dInitialization: Deferred<any> = new Deferred();\r\n    private pInitialization: Promise<any> = this.dInitialization.promise;\r\n    private utils: Utilities = new Utilities();\r\n    // private engine: ElementEngine = new ElementEngine(DefaultComponentSandbox, director);\r\n    public $instances: Map<any, any> = new Map();\r\n    public $targets: Map<Node, any> = new Map();\r\n    public modules: any = { };\r\n    public configuration: any = DEFAULT_CONFIG;\r\n    \r\n    constructor() {\r\n        var { pConfiguration, pInitialization } = this;\r\n        \r\n        pConfiguration\r\n            .then( (config) => this.dInitialization.resolve(config) )\r\n            ;\r\n        pInitialization\r\n            .then( (config) => this.bootstrap(config) )\r\n            ;\r\n        return this;\r\n    }\r\n    \r\n    init(options) {\r\n        var { configuration } = this;\r\n        // this.dInitialization.resolve({ ...configuration, options });\r\n        return this;\r\n    }\r\n    \r\n    bootstrap(config: IConfiguration) {\r\n        var { environment, bootstrap } = config;\r\n        bootstrap.execute(this);\r\n    }\r\n    \r\n    configure(config) {\r\n        this.utils.extend(this.configuration, config);\r\n        // this.engine = new ElementEngine(this.configuration.decorators.components, this.configuration.director);\r\n        this.dConfiguration.resolve(this.configuration);\r\n        return this.utils.extend({ }, this.configuration);\r\n    }\r\n    \r\n    register(metadata: IModuleMetadata) {\r\n        var { pConfiguration } = this;\r\n        pConfiguration.then( (config: IConfiguration) => this.registerModule(config, metadata) );\r\n        return this;\r\n    }\r\n    private registerModule(config: IConfiguration, metadata: IModuleMetadata) {\r\n        var { modules } = this;\r\n        var { selector: _selector, Sandbox: _Sandbox } = config;\r\n        var { type, selector = _selector, Class, Sandbox = _Sandbox } = metadata;\r\n        \r\n        if ( !modules[type] ) modules[type] = new Map<string, IModuleMetadata>();\r\n        modules[type].set(selector, { ... metadata, type, selector, Class, Sandbox });\r\n        \r\n        return this;\r\n    }\r\n    \r\n    // define(definition) {\r\n    //     var { name, Class, options } = definition;\r\n    //     var { dConfiguration } = this, { promise: pConfiguration } = dConfiguration;\r\n        \r\n    //     pConfiguration\r\n    //         .then( (config) => this.engine.define(name, Class, options) )\r\n    //         ;\r\n    //     return this;\r\n    // }\r\n    \r\n    arm(options) {  // automatically register modules\r\n        var config = this.configuration\r\n          , bootstrap = config.bootstrap\r\n          , target = options.target\r\n          ;\r\n        \r\n        this.startServices();\r\n        bootstrap.call(config, target, this);\r\n    }\r\n    \r\n    startServices() {\r\n        var { configuration, modules } = this;\r\n        var { service: registry } = modules;\r\n        for (let i = 0, len = registry.length; i < len; i++) this.startService(registry[i], i, registry);\r\n        return this;\r\n    }\r\n    private startService(metadatum: IModuleMetadata, i: number, metadata: IModuleMetadata[]) {\r\n        // ...\r\n        // var { configuration, utils } = this, { director, decorators } = configuration;\r\n        // var { services: ServiceSandbox = DefaultServicesSandbox } = decorators;\r\n        // var Service = _service.Constructor\r\n        //   , sandbox = new ServiceSand?box(utils, director)\r\n        //   , service = new Service(sandbox)\r\n        //   ;\r\n        // service.init();\r\n    }\r\n    \r\n    /**\r\n     * Gets called by this.configuration.bootstrap\r\n     * TODO: Rename `details` to `api` and provide an API for mapping, starting, stopping & destroying (etc) modules.\r\n     */\r\n    bootstrapX(element, data, id) {\r\n        if (!element || !id) return null;\r\n        // if (!this.components[id]) return this.utils.console.warn(\"Unregistered Component: \" + id) && null || null;\r\n        \r\n        var { configuration: config } = this\r\n          , { director, decorators } = config\r\n          , { components: ComponentSandbox = DefaultComponentSandbox } = decorators\r\n          ;\r\n        // var component = this.components[id]\r\n        //   , Component = component.Constructor\r\n        //   , sandbox = new ComponentSandbox(element, director)\r\n        //   , instance = new Component(sandbox)\r\n        //   , data = data || { }\r\n        //   ;\r\n        var details = {\r\n            id: id,\r\n            // instance: instance,\r\n            element: element,\r\n            data: data,\r\n        };\r\n        // instance.init(data);\r\n        \r\n        return details;\r\n    }\r\n    \r\n}\r\n\r\nexport { Core };\r\n","\r\nimport { Core } from './core';\r\n\r\n\r\nvar Facade = function Facade(core) {\r\n    var thus = this;\r\n    \r\n    function configure() {\r\n        return core.configure.apply(core, arguments);\r\n    }\r\n    \r\n    function register(metadata) {\r\n        core.register(metadata);\r\n        return this;\r\n    }\r\n    \r\n    function bootstrap(options) {\r\n        core.init(options);\r\n        return this;\r\n    }\r\n    \r\n    // export precepts\r\n    this.utils = core.utils;\r\n    this.config = configure;\r\n    this.register = register;\r\n    this.bootstrap = bootstrap;\r\n    \r\n    return this;\r\n};\r\n\r\n/**\r\n * API\r\n */\r\nvar Vertex = new (function Vertices(Core, Facade) {\r\n    \r\n    var V = Facade.call( function V() {\r\n        if (this instanceof V) return ( new Vertices(Core, Facade) );\r\n        return V.register.apply(V, arguments);\r\n    }, new Core() );\r\n    \r\n    return V;\r\n})(Core, Facade);\r\n\r\nexport { Vertex };\r\n","\r\nimport { Utilities, Deferred } from \"@motorman/core/utilities\";\r\nimport { IEventAggregator } from \"@motorman/core/eventaggregator.interface\";\r\nimport { StrictCommand as Command } from \"@motorman/core/utilities/patterns/behavioral\";\r\nimport { ChainOfResponsibility } from \"@motorman/core/utilities/patterns/behavioral\";\r\n\r\ntype ListenerMap = { type: string, name: string, handler: (e: Event, ...splat: any[]) => any };\r\ntype EventEmitter = IEventAggregator&(Comm|Hub);\r\n\r\nvar utils = new (class ElementUtilities extends Utilities {\r\n    \r\n    composeCommand(component: any, name: string) {\r\n        var command = new Command(component, name);\r\n        return command;\r\n    }\r\n    composeExecutor(component: any, name: string) {\r\n        var command = this.composeCommand(component, name), { execute } = command;\r\n        return execute;\r\n    }\r\n    mapExecutor(component: any, item: any) {\r\n        var { name } = item;\r\n        var handler = this.composeExecutor(component, name), details = { ...item, handler };\r\n        return details;\r\n    }\r\n    \r\n})();\r\n\r\nclass Channels {\r\n    ['LEFECYCLE:ELEMENT:CREATED'] = 'vcomm://created/element';\r\n    ['LEFECYCLE:ELEMENT:CONNECTED'] = 'vcomm://connected/element';\r\n    ['ELEMENT:TEMPLATE:FOUND'] = 'vcomm://found/element/template';\r\n    ['ELEMENT:MUTATION:OBSERVED'] = 'vcomm://observed/element/mutation';\r\n    ['PROXY:INVOKED'] = 'vcomm://invoked/proxy';\r\n    ['PROXY:CONSTRUCT:INVOKED'] = 'vcomm://invoked/proxy/construct';\r\n    ['PROXY:HAS:INVOKED'] = 'vcomm://invoked/proxy/has';\r\n    ['PROXY:GET:INVOKED'] = 'vcomm://invoked/proxy/get';\r\n    ['PROXY:SET:INVOKED'] = 'vcomm://invoked/proxy/set';\r\n    ['PROXY:DELETE:INVOKED'] = 'vcomm://invoked/proxy/delete';\r\n    ['PROXY:APPLY:INVOKED'] = 'vcomm://invoked/proxy/apply';\r\n    ['PROXY:MOCK:INVOKED'] = 'vcomm://invoked/proxy/mock';\r\n}\r\nclass Hub implements IEventAggregator {\r\n    private subscriptions: any = { };\r\n    public channels: Channels = new Channels();\r\n\r\n    constructor() {}\r\n    \r\n    private invoke(subscription, data) {\r\n        var { channel, handler, context } = subscription;\r\n        var e = new CustomEvent(channel, { detail: data });\r\n        handler.call(context, e);\r\n        return this;\r\n    }\r\n\r\n    publish(channel: string, data?: any, ...more: any[]) {\r\n        if (!this.subscriptions[channel]) this.subscriptions[channel] = [ ];\r\n        var subscriptions = this.subscriptions[channel];\r\n        for (let i = 0, len = subscriptions.length; i < len; i++) this.invoke(subscriptions[i], data);\r\n        return this;\r\n    }\r\n    subscribe(channel, handler) {\r\n        if (!this.subscriptions[channel]) this.subscriptions[channel] = [ ];\r\n        var subscription = { channel, handler, context: this };\r\n        this.subscriptions[channel].push(subscription);\r\n        return this;\r\n    }\r\n    unsubscribe(channel, handler) {\r\n        if (!this.subscriptions[channel]) this.subscriptions[channel] = [ ];\r\n        // this.target.removeEventListener(channel, handler, false);\r\n        return this;\r\n    }\r\n\r\n}\r\nclass Comm implements IEventAggregator {\r\n    private target = new EventTarget();\r\n    public channels: Channels = new Channels();\r\n\r\n    constructor() {}\r\n\r\n    publish(channel: string, data?: any, ...more: any[]) {\r\n        var e = new CustomEvent(channel, { detail: data });\r\n        this.target.dispatchEvent(e);\r\n        return this;\r\n    }\r\n    subscribe(channel, handler) {\r\n        this.target.addEventListener(channel, handler, false);\r\n        return this;\r\n    }\r\n    unsubscribe(channel, handler) {\r\n        this.target.removeEventListener(channel, handler, false);\r\n        return this;\r\n    }\r\n\r\n}\r\n\r\nclass ConstructorProxy {\r\n    private comm: any;\r\n    private Sandbox: any;\r\n    private element: HTMLElement;\r\n    private director: any;\r\n    public sandbox: any;\r\n\r\n    constructor({ comm, Sandbox, element, director }) {\r\n        this.comm = comm;\r\n        this.Sandbox = Sandbox;\r\n        this.element = element;\r\n        this.director = director;\r\n    }\r\n\r\n    construct(Target, args) {\r\n        var { Sandbox, comm, element, director } = this;\r\n        var sandbox = new Sandbox(element, comm, director);\r\n        var params = [].concat(sandbox, 'extra');\r\n        var data = { type: 'construct', Target, args };\r\n        var result = Reflect.construct(Target, params /*, PrototypeConstructor*/);\r\n        \r\n        this.sandbox = sandbox;\r\n        comm.publish(comm.channels['PROXY:INVOKED'], data);\r\n        comm.publish(comm.channels['PROXY:CONSTRUCT:INVOKED'], data);\r\n        \r\n        return result;\r\n    }\r\n    \r\n}\r\n\r\nclass MemberProxy {\r\n    private comm: any;\r\n    private source: any;\r\n    private element: HTMLElement;\r\n\r\n    constructor({ comm, source, element }) {\r\n        this.comm = comm;\r\n        this.source = source;\r\n        this.element = element;\r\n    }\r\n\r\n    has(target: any, key: any) {\r\n        var { source, comm } = this;\r\n        var data = { type: 'has', source, key };\r\n        var result = Reflect.has(source, key);\r\n        \r\n        comm.publish(comm.channels['PROXY:INVOKED'], data);\r\n        comm.publish(comm.channels['PROXY:HAS:INVOKED'], data);\r\n        \r\n        return result;\r\n    }\r\n\r\n    get(target: any, key: any, receiver: any) {\r\n        // if (target[key].call) return new Proxy( target[key], new MethodProxy({ comm: this.comm, source: this.source, element: this.element }) );\r\n        var { source, comm, element } = this;\r\n        var data = { type: 'get', source, key };\r\n        var result = Reflect.get(source, key);  // omit receiver to get key of source\r\n        \r\n        comm.publish(comm.channels['PROXY:INVOKED'], data);\r\n        comm.publish(comm.channels['PROXY:GET:INVOKED'], data);\r\n        \r\n        return result;\r\n    }\r\n\r\n    set(target: any, key: any, value: any, receiver: any) {\r\n        var { source, comm } = this;\r\n        var data = { type: 'set', source, key, value };\r\n        var result = Reflect.set(source, key, value);\r\n        \r\n        comm.publish(comm.channels['PROXY:INVOKED'], data);\r\n        comm.publish(comm.channels['PROXY:SET:INVOKED'], data);\r\n        \r\n        return result\r\n    }\r\n\r\n    deleteProperty(target: Function, key: any) {\r\n        var { source, comm } = this;\r\n        var data = { type: 'delete', source, key };\r\n        var result = Reflect.deleteProperty(source, key);\r\n        \r\n        comm.publish(comm.channels['PROXY:INVOKED'], data);\r\n        comm.publish(comm.channels['PROXY:DELETE:INVOKED'], data);\r\n        \r\n        return result;\r\n    }\r\n\r\n}\r\n\r\nclass MethodProxy {\r\n    private comm: any;\r\n    private source: any;\r\n    private element: HTMLElement;\r\n\r\n    constructor({ comm, source, element }) {\r\n        this.comm = comm;\r\n        this.source = source;\r\n        this.element = element;\r\n    }\r\n\r\n    apply(target, thus, args) {\r\n        var { source, comm } = this;\r\n        var data = { type: 'apply', source, target, thus, args };\r\n        var result = target.call(source, ...args);\r\n        // var result = source[target.name](...args);\r\n        // var result = target.call(thus, ...args);\r\n        // var result = Reflect.apply(target, thus, args);\r\n        \r\n        comm.publish(comm.channels['PROXY:INVOKED'], data);\r\n        comm.publish(comm.channels['PROXY:APPLY:INVOKED'], data);\r\n        \r\n        return result;\r\n    }\r\n\r\n}\r\n\r\nclass ProxyManager {  // sets up & manages proxy relationships\r\n    \r\n}\r\n\r\nclass Comparitor {\r\n    public previous: any = undefined;\r\n    get name(): string { return this.attr.name; }\r\n    get current(): any { return this.component[ this.name ]; }\r\n    set current(value: any) { this.attr.value = value; }\r\n    get equal(): boolean { return this.detect(); }\r\n    get dirty(): boolean { return !this.equal; }\r\n    \r\n    constructor(private comm: EventEmitter, private component: any, private attr: Attr) {\r\n        var { name, value } = attr;\r\n        this.previous = value;\r\n        return this;\r\n    }\r\n    \r\n    detect() {\r\n        var { comm, name, previous, current } = this;\r\n        var equal = (previous === current);\r\n        var details = { name, previous, current, equal };\r\n        \r\n        if (!equal) comm.publish(comm.channels['ELEMENT:ATTRIBUTE:CHANGE'], details);\r\n        return equal;\r\n    }\r\n    \r\n    update() {\r\n        var { name, component } = this;\r\n        this.previous = this.current = component[name];\r\n        return this;\r\n    }\r\n    \r\n}\r\n\r\nclass TemplateVariable {  // TODO: this could probably just have attr passed in while using getters for everything\r\n    name: string = '';\r\n    attr: Attr = null;\r\n    element: HTMLElement = null;\r\n    \r\n    constructor(options: any = {}) {\r\n        var { name, attr, element } = options;\r\n        \r\n        this.name = name || this.name;\r\n        this.attr = attr || this.attr;\r\n        this.element = element || this.element;\r\n        \r\n        return this;\r\n    }\r\n    \r\n}\r\nclass TemplateListener extends TemplateVariable {\r\n    type: string = '';\r\n    handler: (e: Event) => any;\r\n    \r\n    constructor(options: any = {}) {\r\n        super(options);\r\n        var { type, handler } = options;\r\n        \r\n        this.type = type || this.type;\r\n        this.handler = handler || this.handler;\r\n        \r\n        return this;\r\n    }\r\n    \r\n}\r\nclass TemplateManagementOptions {\r\n    // reReference: RegExp = /^#(.+)$/;\r\n    reAttrIn: RegExp = /\\[(\\w*)\\]/;\r\n    reStructural: RegExp = /^\\*(\\w*)$/;\r\n    reListener: RegExp = /\\((\\w*)\\)/;\r\n    reListenerValue: RegExp = /(\\w*)\\((.*)\\)/;\r\n    // reInterpolable: RegExp = /{{([^{}]*)}}/g;\r\n}\r\nclass AttributeManager {\r\n    get name() { return this.attr.name; }\r\n    get value() { return this.attr.value; }\r\n    get element() { return this.attr.ownerElement; }\r\n    \r\n    constructor(protected attr: Attr) {\r\n        var { name, value, ownerElement: element } = attr;\r\n        attr.addEventListener('attributechange', this.handleChange, true);\r\n        attr.addEventListener('mutation', (e) => console.log('MUTATION IS A NATIVE EVENT!'), true);\r\n        attr.addEventListener('attributechange', (e) => console.log('MUTATION EVENT!'), true);\r\n        return this;\r\n    }\r\n    \r\n    destroy() {\r\n        var { attr } = this;\r\n        attr.removeEventListener('change', this.handleChange, false);\r\n        return this;\r\n    }\r\n    \r\n    private handleChange = (e: CustomEvent) => {\r\n        var { name, value, element, attr } = this;\r\n        var detail = { name, value, element, attr }, event = new CustomEvent('attributechange', { detail });\r\n        console.log('@AttrManager # handleChange', e, this);\r\n        element.dispatchEvent(event);\r\n        \r\n    };\r\n    \r\n}\r\n\r\nclass MutationManager {\r\n    protected observer: MutationObserver = new MutationObserver( (r, o) => this.observe(r, o) );\r\n    protected element: Element;\r\n    \r\n    constructor(protected comm: EventEmitter, protected component: any) {}\r\n    \r\n    private observe(changes: MutationRecord[], observer: MutationObserver) {\r\n        for(let mutation of changes) this[mutation.type](mutation);\r\n    }\r\n    \r\n    private ['childList'](mutation: MutationRecord) {\r\n        var { element, component, comm } = this;\r\n        console.log('A child node has been added or removed.');\r\n        comm.publish(comm.channels[''], { mutation, element });\r\n    }\r\n    private ['attributes'](mutation: MutationRecord) {\r\n        var { component, comm } = this;\r\n        var { attributeName: name, target: element } = mutation;\r\n        var attr = (element as Element).getAttributeNode(name);\r\n        var detail = mutation, e = new CustomEvent('attributechange', { detail }), a = new CustomEvent('mutation', { detail });\r\n        \r\n        comm.publish(comm.channels['ELEMENT:MUTATION:OBSERVED'], mutation);\r\n        element.dispatchEvent(e);\r\n        attr.dispatchEvent(a);\r\n    }\r\n    private ['subtree'](mutation: MutationRecord) {\r\n        var { element, component, comm } = this;\r\n    }\r\n    \r\n    connect(element: Element, config?: any) {\r\n        var { observer } = this;\r\n        var config = { attributes: true, childList: true, subtree: true, ...config };\r\n        \r\n        this.element = element;\r\n        observer.observe(element, config);\r\n        \r\n        return this;\r\n    }\r\n    \r\n    destroy() {\r\n        this.observer.disconnect();\r\n        // destroy all attribute listeners as well\r\n    }\r\n    \r\n}\r\nclass ContentManager {\r\n    protected dTemplateReady: Deferred<boolean> = new Deferred();\r\n    protected $slots: Map<string, NodeList> = new Map();\r\n    // protected $variables: Map<string, Element> = new Map();\r\n    // protected attributes: AttributeManager[] = [ ];\r\n    protected templateListeners: TemplateListener[] = [];\r\n    protected activeListeners: { element, type, handler }[] = [ ];\r\n    protected mutations: MutationManager = new MutationManager(this.comm, this.component);\r\n    public fragment: DocumentFragment|Element = new DocumentFragment();\r\n    public template: string = '';\r\n    public content: string = '';\r\n    get component() { return this.element.component; }\r\n    get comm() { return this.element.comm; }\r\n    get $elementRefs() { return this.element.$elementRefs; }\r\n    get elementRefs() { return this.element.elementRefs; }\r\n    get $attrRefs() { return this.element.$attrRefs; }\r\n    get attrRefs() { return this.element.attrRefs; }\r\n    get listeners() { return this.element.listeners; }\r\n    get reAttrIn() { return this.options.reAttrIn; }\r\n    get reStructural() { return this.options.reStructural; }\r\n    get reListener() { return this.options.reListener; }\r\n    get reListenerValue() { return this.options.reListenerValue; }\r\n    protected pipeNodeHandler = (handler: Function) => (e: CustomEvent) => handler.call(this, e.detail, e);\r\n    protected nodeProcessors: ChainOfResponsibility = new ChainOfResponsibility({}, [\r\n        { respond: this.pipeNodeHandler(this.processSlotElementNode) },\r\n        { respond: this.pipeNodeHandler(this.processAttributeNodeRepeat) },  // note Execution Guards in method\r\n        { respond: this.pipeNodeHandler(this.processElementNode) },\r\n        { respond: this.pipeNodeHandler(this.processTextNode) },\r\n        { respond: this.pipeNodeHandler(this.processCommentNode) },\r\n    ]);\r\n    protected pipeAttributeHandler = (handler: Function) => (e: CustomEvent) => handler.call(this, e.detail, e);\r\n    protected attributeProcessors: ChainOfResponsibility = new ChainOfResponsibility({}, [\r\n        { respond: this.pipeAttributeHandler(this.handlePropertyBinding) },\r\n        { respond: this.pipeAttributeHandler(this.handleListenerBinding) },\r\n    ]);\r\n    \r\n    constructor(private element: HTMLElement&any, private options: TemplateManagementOptions) {\r\n        var { $slots } = this;\r\n        var container = document.createElement('div');\r\n        \r\n        container.innerHTML = element.innerHTML;  // this needs to be done at construction-time\r\n        $slots.clear();  // clear before each potential cycle\r\n        for (let i = 0, len = container.childNodes.length; i < len; i++) setSlot.call(this, $slots, <Node&Element>container.childNodes[i]);\r\n        \r\n        function setSlot($slots: Map<string, NodeList>, node: Node&Element) {  // Node.ELEMENT_NODE === 1\r\n            if (!{ '1': true }[ node.nodeType ]) return;\r\n            if ( !node.hasAttribute('slot') ) return;\r\n            if ( $slots.has(node.slot) ) return;  // if already set, skip. parent.querySelectorAll() gets siblings.\r\n            var { slot, parentElement: parent } = node;\r\n            var selector = `[slot=\"${slot}\"]`, all = parent.querySelectorAll(selector);\r\n            \r\n            if (all.length) $slots.set(slot, all);\r\n        }\r\n        \r\n    }\r\n    \r\n    parseNode(node: Node): Node {\r\n        var { nodeProcessors: cor } = this;\r\n        var e = new CustomEvent('domnodeprocess', { detail: <any>node })\r\n          , e = cor.respond(e)\r\n          , { detail: result } = e\r\n          ;\r\n        var { isConnected, parentNode: parent, previousSibling: previous, nextSibling: next, firstChild: child } = result;\r\n        \r\n        // RECURSION\r\n        if (result !== node) return this.parseNode(result);  // reparse. assume replacement occurred. do not continue for next or child.\r\n        if (child) this.parseNode(child);  // TCO???\r\n        if (next) this.parseNode(next);  // TCO???\r\n        this.dTemplateReady.resolve(true);  // gets fulfilled after last element processed. noop after that.\r\n        \r\n        return node;  // result can still equal node\r\n    }\r\n    \r\n    private processSlotElementNode(node: Node&Element&HTMLSlotElement, response: CustomEvent): Node&Element {  // Node.ELEMENT_NODE === 1\r\n        if (!{ '1': true }[ node.nodeType ]) return node;  // https://developer.mozilla.org/en-US/docs/Web/API/Node/nodeType\r\n        if (!{ 'SLOT': true }[ node.tagName ]) return node;\r\n        if ( !this.$slots.has(node.name) ) return node;  // only process if there are occupants\r\n        var { $slots } = this;\r\n        var { name, previousSibling: previous } = node;\r\n        var occupants: NodeList = $slots.get(name)\r\n          , container = document.createElement('div')\r\n          ;\r\n        occupants.forEach( (occupant) => container.appendChild(occupant) );\r\n        node.outerHTML = container.innerHTML;\r\n        response.stopPropagation();  // end responsibility processing. abort/break chain. do not pass into next process.\r\n        \r\n        return <Node&Element>previous.nextSibling;\r\n    }\r\n    \r\n    private processAttributeNodeRepeat(node: Node&Element, response: CustomEvent): Node&Element {\r\n        if (!{ '1': true }[ node.nodeType ]) return node;  // https://developer.mozilla.org/en-US/docs/Web/API/Node/nodeType\r\n        \r\n        if ( !node.hasAttribute('*each') ) return node;\r\n        else response.stopPropagation();  // end responsibility processing. abort/break chain. do not pass into next process.\r\n        \r\n        var attribute: Attr = node.getAttributeNode('*each')\r\n          , replacement: Node&Element = this.handleStructuralRepeat(attribute)\r\n          ;\r\n        return replacement;\r\n    }\r\n    private handleStructuralRepeat(attr: Attr): Node&Element {\r\n        var { reStructural, component } = this;\r\n        var { name, value, ownerElement: instructor } = <any>attr;\r\n        var { previousSibling: previous } = instructor;\r\n        var matches = reStructural.exec(name), [ match, type ] = matches;\r\n        var [ namespace, property ] = value.split(' of ');\r\n        var items = component[property] || [ { id: 3 }, { id: 2 }, { id: 1 } ];\r\n        var ignore = instructor.removeAttribute(match);  // avoid infinite loop\r\n        var clones = items.map( (item) => utils.interpolate(instructor.outerHTML)({ ...component, [namespace]: item }) )  // not working because utils.interpolate doesn't account for namespaces (x.y.z)\r\n          , elements = clones.join('\\n')\r\n          ;\r\n        instructor.outerHTML = elements;  // replace current element with clones. create real Nodes in DOM Tree & [Heap] memory.\r\n        \r\n        return previous.nextSibling;  // that node which now exists at instructor's index due to replacement\r\n    }\r\n    \r\n    private processElementNode(node: Node&Element): Node&Element {  // Node.ELEMENT_NODE === 1\r\n        if (!{ '1': true }[ node.nodeType ]) return node;  // https://developer.mozilla.org/en-US/docs/Web/API/Node/nodeType\r\n        var attributes: NamedNodeMap = node.attributes, attrs = Array.prototype.slice.call(attributes), attr = attrs.shift();\r\n        var result = this.processAttributeNode(attr, ...attrs);\r\n        \r\n        return node;\r\n    }\r\n    private processAttributeNode(node: Node&Attr, ...more: (Node&Attr)[]): Node&Attr {  // Node.ATTRIBUTE_NODE === 2\r\n        if (!node) return node;\r\n        if (!{ '2': true }[ node.nodeType ]) return node;  // https://developer.mozilla.org/en-US/docs/Web/API/Node/nodeType\r\n        var { name, value, ownerElement: owner } = node;\r\n        var { attributeProcessors: cor } = this;\r\n        var e = new CustomEvent('domnodeattributeprocess', { detail: <any>node })\r\n          , e = cor.respond(e)\r\n          , { detail: result } = e\r\n          ;\r\n        var next: Node&Attr = more.shift();\r\n        \r\n        if (next) this.processAttributeNode(next, ...more);  // TCO???\r\n        return node;\r\n    }\r\n    private handlePropertyBinding(node: Node&Attr): Node&Attr {\r\n        if (!{ '2': true }[ node.nodeType ]) return node;  // https://developer.mozilla.org/en-US/docs/Web/API/Node/nodeType\r\n        if ( !this.reAttrIn.test(node.name) ) return node;\r\n        var { reAttrIn, component } = this;\r\n        var { name, value, ownerElement: owner } = node;\r\n        var matches = reAttrIn.exec(name), [ match, property ] = matches;\r\n        var { [value]: datum } = component;\r\n        \r\n        // console.log('ATTR (IN) %O', node, property, node.value, datum);\r\n        // ownerElement.setAttribute(property, datum);\r\n        owner[property] = datum;\r\n        \r\n        return node;\r\n    }\r\n    private handleListenerBinding(node: Node&Attr): Node&Attr {\r\n        if (!{ '2': true }[ node.nodeType ]) return node;  // https://developer.mozilla.org/en-US/docs/Web/API/Node/nodeType\r\n        if ( !this.reListener.test(node.name) ) return node;\r\n        var { templateListeners, reListener } = this;\r\n        var { name, ownerElement: element } = node, matches = reListener.exec(name), [ match, type ] = matches;\r\n        var handler = this.createBindingInvoker(node);\r\n        var details = new TemplateListener({ name, type, node, element, handler });\r\n        // console.log('LISTENER %O', node);\r\n        \r\n        templateListeners.push(details);\r\n        return node;\r\n    }\r\n    private createBindingInvoker(attr: Attr): Function {\r\n        var { component, reListenerValue } = this;\r\n        var { name, value } = attr;\r\n        var [ match, method, args ] = value.match(reListenerValue);\r\n        var exe = utils.composeExecutor(component, method);\r\n        var op = `with($_) return eval(\"h(${args})\");`;\r\n        var fn = new Function('$_', 'h', '$event', op);\r\n        var f = (e) => fn(component, exe, e);\r\n        \r\n        return f;\r\n    }\r\n    \r\n    private processTextNode(node: Node&Text): Node&Text {  // Node.TEXT_NODE === 3\r\n        if (!{ '3': true }[ node.nodeType ]) return node;  // https://developer.mozilla.org/en-US/docs/Web/API/Node/nodeType\r\n        // var { component} = this;\r\n        // var { data } = node;\r\n        // var interpolated = utils.interpolate(data)(component);\r\n        \r\n        // console.log('TEXT %O', node);\r\n        // // node.replaceWith(interpolated);\r\n        // // console.log('TEXT %O', node, data, interpolated);\r\n        \r\n        return node;\r\n    }\r\n    \r\n    private processCommentNode(node: Node&Comment): Node&Comment {  // Node.COMMENT_NODE === 8\r\n        if (!{ '8': true }[ node.nodeType ]) return node;  // https://developer.mozilla.org/en-US/docs/Web/API/Node/nodeType\r\n        // var attrs: NamedNodeMap = node.attributes;\r\n        \r\n        // console.log('COMMENT %O', node);\r\n        // for (let i = 0, len = attrs.length; i < len; i++) this.parseChildAttr(attrs[i], i, attrs);\r\n        // this.parse(node.childNodes);\r\n        \r\n        return node;\r\n    }\r\n    \r\n    /**\r\n     * @intention : Leverage <template> &| DocumentFragment so that DOM objects do not change between parsing template variables & processing event-bindings.\r\n     */\r\n    refresh(template: string = '') {\r\n        var { component, element, dTemplateReady } = this;\r\n        var { shadow } = element;\r\n        var { promise: pTemplateReady } = dTemplateReady;\r\n        var innerHTML = utils.interpolate(template)(component);\r\n        \r\n        shadow.innerHTML = innerHTML;\r\n        pTemplateReady\r\n            .then( () => this.template = template )\r\n            .then( () => this.bindMutationObservers() )\r\n            .then( () => this.bindElementNodeRefs() )\r\n            .then( () => this.bindAttributeNodeRefs() )\r\n            .then( () => this.bindListeners() )\r\n            // .then( () => this.element.config.createSurrogate() )\r\n            .then( () => this.dTemplateReady = new Deferred() )\r\n            // .then( () => this.comm.publish(READY) )\r\n            ;\r\n        this.destroy()\r\n            .parseNode(shadow.firstChild)\r\n            ;\r\n        \r\n        return this;\r\n    }\r\n    \r\n    appendTo(element: Element) {\r\n        // var { content } = this;\r\n        // this.element = element;\r\n        // this.element.innerHTML = content;\r\n        \r\n        return this;\r\n    }\r\n    \r\n    bind() {  // convert all of this to Promises using new Deferred() at this.processNode Tail-Call.\r\n        this.bindMutationObservers()\r\n            .bindListeners()\r\n            .dTemplateReady = new Deferred()\r\n            ;\r\n        return this;\r\n    }\r\n    bindMutationObservers() {\r\n        var { element, mutations } = this;\r\n        mutations.connect(element);\r\n        mutations.connect(element.shadow);\r\n        return this;\r\n    }\r\n    bindElementNodeRefs() {\r\n        var { element, component, elementRefs } = this;\r\n        // element.matches(selector);\r\n        for (let { isHost, selector, key } of elementRefs) if (!{ 'function': true }[ typeof component[key] ]) isHost ? component[key] = element : component[key] = element.querySelector(selector);\r\n        return this;\r\n    }\r\n    bindAttributeNodeRefs() {\r\n        var { element, component, attrRefs } = this;\r\n        for (let { isHost, selector, key, name } of attrRefs) if (!{ 'function': true }[ typeof component[key] ]) isHost ? component[key] = element.getAttributeNode(name) : component[key] = element.querySelector(selector).getAttributeNode(name);\r\n        return this;\r\n    }\r\n    bindListeners() {\r\n        var { element, listeners, templateListeners, $elementRefs } = this;\r\n        listeners.forEach( ({ key, type, handler }) => this.addNodeListener(key, type, handler ) );\r\n        templateListeners.forEach( ({ element: target, type, handler }) => target.addEventListener(type, handler, false) );\r\n        return this;\r\n    }\r\n    addNodeListener(key: string, type: string, handler: Function) {\r\n        var { element, $elementRefs, $attrRefs, activeListeners } = this;\r\n        var metadata = $elementRefs.get(key) || $attrRefs.get(key) || { };\r\n        var { decorator, selector, isHost, name } = metadata;\r\n        var target = {\r\n            'true': element,\r\n            'false': element.shadow['querySelector'](selector),\r\n        }[ isHost ];\r\n        var node = {\r\n            'reference:element': target,\r\n            'reference:attribute': target['getAttributeNode'](name),\r\n        }[ decorator ];\r\n        \r\n        if ( !$elementRefs.get(key) && !$attrRefs.get(key) ) return this;\r\n        if (  $elementRefs.get(key) &&  $attrRefs.get(key) ) return this;\r\n        \r\n        node.addEventListener(type, handler, false);\r\n        activeListeners.push({ element: node, type, handler });\r\n    }\r\n    \r\n    destroy() {\r\n        var { element, mutations, listeners, templateListeners, activeListeners } = this;\r\n        \r\n        mutations.destroy();\r\n        templateListeners.forEach( ({ element, type, handler }) => element.removeEventListener(type, handler, false) );\r\n        activeListeners.forEach( ({ element, type, handler }) => element.removeEventListener(type, handler, false) );\r\n        templateListeners.length = 0;\r\n        activeListeners.length = 0;\r\n        \r\n        return this;\r\n    }\r\n    \r\n}\r\n\r\n\r\nclass ElementEngine {\r\n    \r\n    constructor(private Sandbox: any, private director: any) {}\r\n    \r\n    private getConfig(Class, element) {  // TODO: fractionate routine\r\n        var { director, Sandbox } = this;\r\n        var { metadata } = Class;\r\n        var { $members, $observedAttributes, $watchers, $elements: $elementRefs, $attrs: $attrRefs, $listeners, $subscriptions } = metadata;\r\n        \r\n        var comm = new Comm();\r\n        var construction = new ConstructorProxy({ comm, Sandbox, element, director }); \r\n        var ClassProxy = new Proxy(Class, construction);\r\n        var component = new ClassProxy({ state: false });\r\n        var membersProxy = new MemberProxy({ comm, source: component, element });\r\n        var methodsProxy = new MethodProxy({ comm, source: component, element });\r\n        var proxy = new Proxy(component, membersProxy);\r\n        var properties = Object.getOwnPropertyNames(Class.prototype);\r\n        var methodBlacklist = { 'constructor': true, 'connectedCallback': true, 'attributeChangedCallback': true, 'disconnectedCallback': true, 'adoptedCallback': true };\r\n        \r\n        var members = Array.from( $members.values() )\r\n          , watchers = Array.from( $watchers.values() )\r\n          , elementRefs = Array.from( $elementRefs.values() )\r\n          , attrRefs = Array.from( $attrRefs.values() )\r\n          , listeners = Array.from( $listeners.values() ).map( (item) => utils.mapExecutor(component, item) )  // map each handler to a handler bound to \"component\"\r\n          , subscriptions = Array.from( $subscriptions.values() ).map( (item) => utils.mapExecutor(component, item) )  // map each handler to a handler bound to \"component\"\r\n          ;\r\n        var shadow = element;\r\n        // var shadow = element.attachShadow({ mode: 'open' });\r\n        \r\n        var createSurrogate = _createSurrogate.bind(this, { proxy, component, methodsProxy, methodBlacklist });\r\n        \r\n        // TODO!!! THIS NEEDS TO BE PERFORMED REPEATEDLY OnRecycle (and surrogate destroyed) MAY OBVIATE INFINITE LOOP.\r\n        function _createSurrogate({ proxy, component, methodsProxy, methodBlacklist }) {\r\n            var surrogate = Object.create(proxy);  // use Object.create to carry over get|set; spread op fails to do so\r\n            for (let key in proxy) if (proxy[key] && proxy[key].call) surrogate[key] = new Proxy(proxy[key], methodsProxy);\r\n            properties.forEach( (key) => { if (!!component[key] && component[key].call && !methodBlacklist[key]) surrogate[key] = new Proxy(component[key], methodsProxy); });\r\n            return surrogate;\r\n        }\r\n        \r\n        var config = {  // TODO: create fn\r\n            comm,\r\n            director,\r\n            Sandbox,\r\n            Class,\r\n            ...{\r\n                shadow,\r\n            },\r\n            ...{\r\n                sandbox: construction.sandbox,\r\n            },\r\n            ...{\r\n                $members, members,\r\n            },\r\n            ...{\r\n                $watchers, watchers,\r\n            },\r\n            ...{\r\n                $elementRefs, elementRefs,\r\n                $attrRefs, attrRefs,\r\n            },\r\n            ...{\r\n                $listeners, listeners,\r\n                $subscriptions, subscriptions,\r\n            },\r\n            ...{\r\n                component,\r\n                // surrogate,\r\n                createSurrogate,\r\n            },\r\n        };\r\n        \r\n        return config;\r\n    }\r\n    \r\n    private prepare(Class) {\r\n        var thus = this;\r\n        var { metadata } = Class;\r\n        var { $observedAttributes } = metadata;\r\n        var observedAttributes = Array.from( $observedAttributes.values() ).map( ({ name }) => name )\r\n        var templateOptions = new TemplateManagementOptions();\r\n        \r\n        return class Element extends HTMLElement {  // https://alligator.io/web-components/attributes-properties/\r\n            static get observedAttributes(): string[] { return observedAttributes }  // native HTML Custom Elements\r\n            protected $utils: Utilities = new Utilities();\r\n            private config: any = thus.getConfig(Class, this);\r\n            private comm: EventEmitter = this.config.comm;\r\n            private $: any = this.config.sandbox;\r\n            private component: any = this.config.component;\r\n            // private surrogate: any = this.config.surrogate;\r\n            // private createSurrogate: any = this.config.createSurrogate;\r\n            //\r\n            private shadow: ShadowRoot = this.config.shadow;\r\n            //\r\n            private $observedAttributes: Map<string, any> = this.config.$observedAttributes;\r\n            private observedAttributes: any[] = this.config.observedAttributes;\r\n            private $watchers: Map<string, any> = this.config.$watchers;\r\n            private watchers: any[] = this.config.watchers;\r\n            private $elementRefs: Map<string, any> = this.config.$elementRefs;\r\n            private elementRefs: any[] = this.config.elementRefs;\r\n            private $attrRefs: Map<string, any> = this.config.$attrRefs;\r\n            private attrRefs: any[] = this.config.attrRefs;\r\n            private $listeners: Map<string, any> = this.config.$listeners;\r\n            private listeners: ListenerMap[] = this.config.listeners;\r\n            private $subscriptions: Map<string, any> = this.config.$subscriptions;\r\n            private subscriptions: any[] = this.config.subscriptions;\r\n            //\r\n            private $content: ContentManager = new ContentManager(this, templateOptions);\r\n            private template: string = '';  // this.config.template;\r\n            // private pTemplate: Promise<string> = this.config.pTemplate;\r\n            // private $comparitors: Map<string, Comparitor> = new Map();\r\n            private handlers: any[] = [ ];\r\n            // get comparitors(): Comparitor[] { return Array.from( this.$comparitors.values() ); }\r\n            // get content(): string { return this.$utils.interpolate(this.template)(this.component); }\r\n            // set content(value: string) { this.innerHTML = value; }\r\n            get attrs() { return observedAttributes; }\r\n            get channels() { return this.comm.channels; }\r\n            // get $elements() { return this.$content.$elements; }\r\n            \r\n            constructor() {\r\n                super();\r\n                console.log('CONSTRUCTOR');\r\n                var { comm } = this;\r\n                \r\n                this.bind();\r\n                comm.subscribe(comm.channels['ELEMENT:MUTATION:OBSERVED'], (e) => console.log('@MUTATION', e) );\r\n                comm.subscribe(comm.channels['ELEMENT:TEMPLATE:FOUND'], this.handleTemplate );\r\n                // comm.subscribe(comm.channels['PROXY:INVOKED'], this.handleProxyInvokation);\r\n                comm.subscribe(comm.channels['PROXY:APPLY:INVOKED'], this.handleProxyInvokation);\r\n                // comm.subscribe(comm.channels['PROXY:MOCK:INVOKED'], this.handleProxyInvokation);\r\n                comm.publish(comm.channels['LEFECYCLE:ELEMENT:CREATED']);\r\n                \r\n                return this;\r\n            }\r\n            \r\n            private bind() {\r\n                var { comm, component, subscriptions } = this;\r\n                var { observedAttributes: attributes } = Element;\r\n                \r\n                attributes.forEach( (key) => this.bindAttribute(key) );\r\n                subscriptions.forEach( ({ type, handler }) => comm.subscribe(comm.channels[type], handler) );\r\n                \r\n                return this;\r\n            }\r\n            private bindAttribute(key: string) {  // KEEP?!!!\r\n                var { component } = this;\r\n                var descriptor = Object.getOwnPropertyDescriptor(Class.prototype, key)\r\n                  , descriptor = { ...descriptor }\r\n                  , { get, set } = descriptor\r\n                  ;\r\n                var value = this.getAttribute(key);\r\n                if (!value) this.setAttribute(key, component[key]);\r\n                if (descriptor.get && descriptor.set) descriptor = { get, set };\r\n                else if (!descriptor.get && !descriptor.set) descriptor = { get: () => this.getAttribute(key), set: (v) => this.setAttribute(key, v) };\r\n                else if (!descriptor.get && descriptor.set) descriptor = { get: () => this.getAttribute(key), set };\r\n                else if (descriptor.get && !descriptor.set) descriptor = { get, set: () => this.setAttribute(key, component[key]) };\r\n                Object.defineProperty(component, key, descriptor);\r\n                \r\n                return this;\r\n            }\r\n            \r\n            // https://developer.mozilla.org/en-US/docs/Web/Web_Components/Using_custom_elements#Using_the_lifecycle_callbacks\r\n            connectedCallback() {\r\n                var { comm, component } = this;\r\n                console.log('connectedCallback');\r\n                // if (component.attachedCallback) component.connectedCallback();\r\n                // this.$load();\r\n                comm.publish(comm.channels['LEFECYCLE:ELEMENT:CONNECTED']);\r\n            }\r\n            attributeChangedCallback(attrName: string, oldVal: string, newVal: string) {\r\n                var { component, $watchers } = this;\r\n                // // var action = `[${attrName}]`, handler = component[action];\r\n                // // var any = `[*]`, all = component[any];\r\n                var $watcher = $watchers.get(attrName);\r\n                \r\n                // // if (component.attributeChangedCallback) component.attributeChangedCallback(attrName, oldVal, newVal);\r\n                // // if (all) all.call(component, attrName, oldVal, newVal);\r\n                // // if (handler) handler.call(component, newVal, oldVal);\r\n                if ($watcher) $watcher.handler.call(component, newVal, oldVal);\r\n            }\r\n            disconnectedCallback() {\r\n                var { component, listeners, subscriptions } = this;\r\n                if (component.detachedCallback) component.disconnectedCallback();\r\n                // listeners.forEach( (map) => this.unbindListener(component, map) );\r\n                // subscriptions.forEach( (map) => this.unbindMessageHandler(component, map) );\r\n                // this.$unload();\r\n            }\r\n            adoptedCallback() {\r\n                var { component } = this;\r\n                // if (component.adoptedCallback) component.adoptedCallback();\r\n                // this.$load();\r\n                console.log('--adoptedCallback--');\r\n            }\r\n            \r\n            cycle() {\r\n                var { template } = this;\r\n                setTimeout( () => this.$content.refresh(template), 0 );  // let current callStack clear while element may still be mounting\r\n            }\r\n            \r\n            private handleTemplate = (e: CustomEvent) => {\r\n                var { type, detail: template } = e;\r\n                this.template = template;\r\n                this.cycle();\r\n                // console.log('\\n\\n', 'WORKING ON TEMPLATE-HANDLING', '\\n', template, '\\n\\n');\r\n            };\r\n            \r\n            private handleProxyInvokation = (e: CustomEvent) => {  // KEEP?\r\n                // var { component, attributes, content } = this;\r\n                // var { type, detail } = e, { type: method } = detail;\r\n                // var dirty = this.getDirtyAttributeStates(this.comparitors);\r\n                \r\n                // dirty.forEach( ({ name }) => this.initAttribute(component, attributes[name]) );\r\n                console.log('--handleProxyInvokation--');\r\n                setTimeout( () => this.cycle(), (1000 * 3) );\r\n            };\r\n            \r\n        };\r\n    }\r\n    \r\n    define(name, Class, options?: any) {\r\n        if ( !!customElements.get(name) ) return this;\r\n        var Element = this.prepare(Class);\r\n        window.customElements.define(name, Element, options);\r\n        \r\n        return this;\r\n    }\r\n    \r\n}\r\n\r\nexport { ElementEngine };\r\n\r\n/* ================================================================================================================================\r\nTODO\r\n\r\nORDER OF OPERATIONS\r\nOnInitialization:\r\n    getOccupants()\r\n        .then( trigger('onchange') )\r\nOnChange:\r\n    pTemplateReady\r\n        .then( () => this.template = template )\r\n        .then( () => this.bindMutationObservers() )\r\n        .then( () => this.bindElementNodeRefs() )\r\n        .then( () => this.bindAttributeNodeRefs() )\r\n        .then( () => this.bindListeners() )\r\n\r\n\r\nRefactor\r\nDo less; simplify. Use EDA for more. Lifecycle Hooks should be CustomEvents from Comm.\r\n - ProxyManager: Create \"ProxyManager\" class -- passing in comm -- to manage Proxy operations & triggers.\r\n - AttributeValueProxy: R&D; see if a Proxy Trap can be set on attributes so that Events can be setup on `set()` for `.value`.\r\n    - @watch: @watch Decorator should STILL be used ONLY for Host's observedAttributes -- BUT it should drive a subscription to an event\r\n              published from attributeChangedCallback, which can be on the same or similar channel as other AttrValProxy events.\r\n    - MutationObserver: R&D https://developer.mozilla.org/en-US/docs/Web/API/MutationObserver\r\n - Lifecycle Hooks: Lifecycle Hooks should be driven through Comm.\r\n    - TODO: Define Lifecycle Flow.\r\n - @message: @message Decorator should be used for subscribing to Comm; leave assumption about Sandbox alone!\r\n    - Operators: This will obviate the complexity around operators/operands etc! :-D\r\n - Comm: Comm should remain as disperate EventTarget as to not conflate DOM events with Object-to-Object tether.\r\n - Templates: Templates should have their own Channel while `component` is responsible for BOTH getting AND `.publish`ing a template. This\r\n              way, components have control over lazyLoading and swapping out the template on the fly.\r\n    - Templates should be loaded into a detached element, such as a DOMFragment, before interations to discover template refs, \r\n      bindings, and other variables.\r\n    - TemplateRefs should be accessed through the element's $children Map.\r\n - Event Listeners: If there is a way to bind event-handlers before appending Content to DOM, after interpolation, this would be helpful.\r\n - Comm & Channels: Comm should be phased out using an @Decorator for subscriptions while providing access to Comm AND comm Channels ONLY\r\n                    through methods (get|set for channels) on element.\r\n - Slots: Need <slot>s\r\n \r\n - EDA\r\n    - Events can be published for TemplateRef variables while letting Developer decide what to do with them & their .ownerElement.\r\n    \r\n - LEFECYCLE EVENTS & CHANNELS\r\n    - ELEMENT:TEMPLATE:FOUND (watch out for Race Conditions)\r\n    - ELEMENT:CREATED (constructor)\r\n    - ELEMENT:TEMPLATE:CHECKED (DOM Fragment evaluation)\r\n        // -? ELEMENT:TEMPLATE:VARIABLE:FOUND (DOM Fragment evaluation, TemplateRef)\r\n        // -? ELEMENT:TEMPLATE:VARIABLES:FOUND (DOM Fragment evaluation, TemplateRef)\r\n    - ELEMENT:CONTENT:CREATED (interpolated)\r\n    - ELEMENT:CONTENT:CHECKED (injected/appended)\r\n        // -? ELEMENT:TEMPLATE:LISTENER:BOUND (DOM Fragment evaluation, event-handler bound)\r\n        // -? ELEMENT:TEMPLATE:LISTENERS:BOUND (DOM Fragment evaluation, event-handlers bound)\r\n        // -? ELEMENT:TEMPLATE:ATTRIBUTE:BOUND (DOM Fragment evaluation, AttrValTrap & Listener bound)\r\n        // -? ELEMENT:TEMPLATE:ATTRIBUTES:BOUND (DOM Fragment evaluation, AttrValTraps & Listeners bound)\r\n    - ELEMENT:CONTENT:READY (checked + bound)\r\n    - ELEMENT:READY (everything in its right place)\r\n      [ADDITIONAL] ... which part of the sequence do these fall in?\r\n    - ELEMENT:CONNECTED (LIFECYCLE METHOD)\r\n    - ELEMENT:DISCONNECTED (LIFECYCLE METHOD)\r\n    - ELEMENT:ADOPTED (LIFECYCLE METHOD)\r\n    - ELEMENT:ATTRIBUTE:CHANGED (LIFECYCLE METHOD, could be same channel as AttrValTraps, but could also or instead be ELEMENT:OBSERBED-ATTRIBUTE:CHANGED)\r\n\r\n\r\nREFACTOR 2\r\n\r\n\r\nSyntax\r\n\r\nTemplate (<input {{attr}}=\"{{variable}}\"  />)\r\nEvent: Uses (click)=\"handle($event, variable, 'literal')\"\r\nAttribute: type=\"text\", type=\"{{var}}\", {{var}}=\"literal\", {{attr}}=\"{{var}}\"\r\nProperty I (ctrl -> el): [value]=\"var\" (update element)\r\n// Property O (el -> ctrl): {value}=\"var\" (update controller)\r\nTextNode: {{interpolation}}\r\n\r\n\r\nBehavior\r\n\r\nTemplate: Template gets inserted into element and immediately crawled.\r\nParsing: Parsing crawls element.childNodes to include TextNodes, crawls child.attributes, and recurses from child.childNodes.\r\nAttributes: Each attribute is tested for its binding type, handled accordingly, and evaluated using an \"evaluator\".\r\nTextNodes: TextNodes always get interpolated using an \"evaluator\".\r\nChildNodes: ChildNodes are parsed using strategy above.\r\nEvaluator: Evaluator\r\n\r\n\r\nChange Detection\r\n\r\n\r\n\r\n\r\nDecorators\r\n\r\nClass decorators should always contain a \"meta\" property (on their descriptor, Class, or [root] Prototype) with a \"members\" object.\r\nMember decorators always assign metadata to a \"meta\" object on their Class under members[key] providing data for their purpose.\r\nDecorators should have the capability to be leveraged compositively with each other, adding \"meta\" data to the descriptor.\r\n\r\n@observe('prop') x: any;  // prepares metadata for observedAttributes (of \"prop\" with alias \"x\")\r\n@observer('prop') handleChange(...?) {}  // prepares metadata for handler called from attributedChangedCallback\r\n@element('tagName.class[attr]') element: HTMLElement;  // prepares metadata to select & bind an element to component['element'] (if not arguments.length then return HostElement or FirstChild or querySelector('*') or descriptor.name)\r\n@attr('tagName.class[attr]') attr: Attr;  // prepares metadata to select & bind an element's attribute-node to component['attr'] (if not \"[attr]\" then return descriptor.name)\r\n@listener('click') handleClick() {}  // prepares metadata to handle \"click\" on HostElement\r\n@dispatcher('some-type') unique: EventTarget<CustomElement, 'some-type'>; this.unique.dispatchEvent(detail);\r\n----\r\n@listener('click') @element('tagName.class[attr]') handleClick({ target }) {}  // prepares metadata to handle \"click\" on metadata.selector of type \"element\"\r\n@listener('change') @attr('tagName.class[attr]') handleChange({ ownerElement }) {}  // prepares metadata to handle \"change\" on metadata.selector of type \"attr\"\r\n\r\n\r\nMISC\r\nhttps://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/setPrototypeOf\r\n\r\n\r\n\r\nRESOURCES\r\nMutationObserver (AttrValProxy): https://developer.mozilla.org/en-US/docs/Web/API/MutationObserver\r\nDocumentFragment (Preparations): https://developer.mozilla.org/en-US/docs/Web/API/DocumentFragment\r\nShodowDOM: https://developer.mozilla.org/en-US/docs/Web/Web_Components/Using_shadow_DOM\r\n================================================================================================================================ */\r\n","\r\nexport { Vertex } from './api';\r\nexport { Core } from './core';\r\nexport * from './sandbox';\r\nexport { Bootstrap } from './bootstrap';\r\nexport { ElementEngine } from './element-engine';\r\nexport * from './decorators';\r\n","\r\n/*\r\n\r\nDecorators\r\n\r\nClass decorators should always contain a \"meta\" property (on their descriptor, Class, or [root] Prototype) with a \"members\" object.\r\nMember decorators always assign metadata to a \"meta\" object on their Class under members[key] providing data for their purpose.\r\nDecorators should have the capability to be leveraged compositively with each other, adding \"meta\" data to the descriptor.\r\n\r\n@observee('prop') x: any;  // prepares metadata for observableAttributes (of \"prop\" with alias \"x\")\r\n@observer('prop') handleChange(...?) {}  // prepares metadata for handler called from attributedChangedCallback\r\n@element('tagName.class[attr]') element: HTMLElement;  // prepares metadata to select & bind an element to component['element'] (if not arguments.length then return HostElement or FirstChild or querySelector('*') or descriptor.name)\r\n@attr('tagName.class[attr]') attr: Attr;  // prepares metadata to select & bind an element's attribute-node to component['attr'] (if not \"[attr]\" then return descriptor.name)\r\n@listener('click') handleClick() {}  // prepares metadata to handle \"click\" on HostElement\r\n----\r\n@listener('click') @element('tagName.class[attr]') handleClick({ target }) {}  // prepares metadata to handle \"click\" on metadata.selector of type \"element\"\r\n@listener('change') @attr('tagName.class[attr]') handleChange({ ownerElement }) {}  // prepares metadata to handle \"change\" on metadata.selector of type \"attr\"\r\n\r\n*/\r\n\r\n\r\ntype ObserveeMetadata = {\r\n    decorator: 'attribute:observee',\r\n    name: string,\r\n    alias: string,\r\n    hasGet: boolean,\r\n    hasSet: boolean,\r\n    hasGetOrSet: boolean,\r\n    hasGetAndSet: boolean,\r\n};\r\ntype ObserverMetadata = {\r\n    decorator: 'attribute:observer',\r\n    name: string,\r\n    attr: string,\r\n    handler: (...splat: any[]) => any,\r\n};\r\ninterface ElementRefMetadata {\r\n    decorator: 'reference:element';\r\n    name: string;\r\n    key: string;\r\n    selector: string;\r\n    isHost: boolean;\r\n};\r\ninterface AttrRefMetadata {\r\n    decorator: 'reference:attribute';\r\n    name: string;\r\n    key: string;\r\n    selector: string;\r\n    isHost: boolean;\r\n};\r\ntype ListenerMetadata = {\r\n    decorator: 'handler:dom',\r\n    name: string,\r\n    key: string,\r\n    type: string,\r\n    handler: (...splat: any[]) => any,\r\n    isHost: boolean;\r\n};\r\ntype CommMetadata = {\r\n    decorator: 'handler:comm',\r\n    name: string,\r\n    key: string,\r\n    type: string,\r\n    handler: (...splat: any[]) => any,\r\n};\r\n\r\nclass Metadata {  // TODO: create types for maps\r\n    public $members: Map<string, any> = new Map();\r\n    public $observedAttributes: Map<string, any> = new Map();\r\n    public $watchers: Map<string, any> = new Map();\r\n    public $elements: Map<string, any> = new Map();\r\n    public $attrs: Map<string, any> = new Map();\r\n    public $listeners: Map<string, any> = new Map();\r\n    public $subscriptions: Map<string, any> = new Map();\r\n    \r\n    constructor(protected klass: any) {\r\n        var { metadata } = klass;  // might already exist\r\n        var { $members, $observedAttributes, $watchers, $elements, $attrs, $listeners, $subscriptions } = (metadata || {});\r\n        \r\n        this.$members = $members || this.$members;  // prefer existing if available\r\n        this.$observedAttributes = $observedAttributes || this.$observedAttributes;  // prefer existing if available\r\n        this.$watchers = $watchers || this.$watchers;  // prefer existing if available\r\n        this.$elements = $elements || this.$elements;  // prefer existing if available\r\n        this.$attrs = $attrs || this.$attrs;  // prefer existing if available\r\n        this.$listeners = $listeners || this.$listeners;  // prefer existing if available\r\n        this.$subscriptions = $subscriptions || this.$subscriptions;  // prefer existing if available\r\n        \r\n        klass.metadata = this;  // ensure has structure of this while this.${{x}} originates from first issuance and subsequently klass\r\n        return this;  // `this` maintains references to those members from klass.metadata\r\n    }\r\n    \r\n}\r\n\r\n\r\nvar DEFAULT_DESCRIPTOR = { writable: true, configurable: true, enumerable: true };\r\n\r\n\r\nclass DecoratorUtilities {  // DEP\r\n    namespace(object: any, ns: string, keys: string[] = ns.split('.')): boolean {\r\n        while (keys.length) if (!object[ keys[0] ]) object[ keys.shift() ] = { };\r\n        return !!(new Function(`return constructor.${ns};`))();\r\n    }\r\n    ensure(object, namespace, key, value) {\r\n        var exists = this.namespace(object, namespace);\r\n        var set = new Function('value', `object.${namespace} = value;`);\r\n        // var set = new Function('value', `object.${namespace}.${key} = value;`);\r\n        var get = new Function(`return object.${namespace};`);\r\n        \r\n        set(value);\r\n        return get();\r\n    }\r\n    meta(object, key, meta) {\r\n        this.namespace(object, 'meta.members');\r\n        object.meta.members[key] = meta;\r\n    }\r\n}\r\n\r\n\r\nfunction ElementNode(definition: { selector: string, template?: string }, options: any = {}): any {\r\n    var data = { ...definition, type: 'element', key: 'selector', options, members: {} };\r\n    \r\n    return function get(Class: any): any {\r\n        Class.meta = data;\r\n        return { ...data, Class };\r\n    };\r\n}\r\nfunction AttributeNode(definition: { selector: string }): any {\r\n    var data = { ...definition, type: 'attribute', key: 'selector' };\r\n    \r\n    return function get(Class: any): any {\r\n        return { ...data, Class };\r\n    };\r\n}\r\nfunction TextNode(definition: { selector?: RegExp|'#text' }): any {  // selector := TextNode.nodeValue || TextNode.charaterData\r\n    /*\r\n    if reInterpolate.test(node.[nodeValue,wholeText,textContent,data]) > node.nodeValue = interpolate(nodeValue)(parent/owner)\r\n    */\r\n    var { selector = '#text' } = definition;\r\n    var data = { ...definition, type: 'text', selector };\r\n    \r\n    return function get(Class: any): any {\r\n        return { ...data, Class };\r\n    };\r\n}\r\nfunction CommentNode(definition: { selector?: RegExp|'#comment' }): any {  // selector := CommentNode.data || CommentNode.charaterData\r\n    /*\r\n    comments may be used to drive performance\r\n    syntax can be used to drive directive(s) / operation(s): <!-- <psst! [next.parent]=\"v-modal\" /> -->, etc\r\n    if owner > core.$selectors.linkedList.get(<string>owner, this.nextElementSibling)\r\n    */\r\n    var { selector = '#comment' } = definition;\r\n    var data = { ...definition, type: 'comment', selector };\r\n    \r\n    return function get(Class: any): any {\r\n        return { ...data, Class };\r\n    };\r\n}\r\nfunction Directive(definition: { type: '#text'|'#comment', selector: RegExp }): any {\r\n    var { type } = definition;\r\n    var get = {\r\n        '#text': TextNode({ ...definition, selector: '#text' }),\r\n        '#comment': CommentNode({ ...definition, selector: '#comment' }),\r\n    }[ type ];\r\n    \r\n    return get;\r\n}\r\nfunction Pipe() {}\r\nfunction Service(definition: { id?: string }): any {  // selector := CommentNode.data || CommentNode.charaterData\r\n    var data = { ...definition, type: 'service' };\r\n    \r\n    return function get(Class: any): any {\r\n        var { id: selector = Class.name } = data;\r\n        return { ...data, selector, Class };\r\n    };\r\n}\r\nfunction IoT() {}\r\nfunction MicroService() {}\r\n\r\nvar decorators = new (class Decorators extends DecoratorUtilities {\r\n    \r\n    /**\r\n     * @intention Provide a convenience method for mapping to correct behavior depending on input type to keep other methods clean.\r\n     *      * If member is datum : this.observee\r\n     *      * If member is method: this.observer\r\n     *      * Note: data-members are not created until class instance construction (value === undefined)\r\n     */\r\n    observe = (attr?: string): any => {\r\n        var thus = this;\r\n        \r\n        return function get(target: any, key: string, descriptor: any = {}): any {\r\n            var { constructor } = target;\r\n            var { value } = descriptor;\r\n            var metadata = new Metadata(constructor);\r\n            var descriptor = { ...descriptor, ...DEFAULT_DESCRIPTOR };\r\n            var action = { true: 'observer', false: 'observee' }[ <any>!!value ];  // this.observee || this.observer\r\n            var process = thus[action](attr);\r\n            var data = process(...arguments);\r\n            \r\n            metadata.$members.set(key, data);\r\n            return descriptor;\r\n        };\r\n    };\r\n    observee(attr?: string): any {  // @usage: @observe('options') options: any;\r\n        var thus = this;\r\n        \r\n        return function get(target: any, key: string, descriptor: any = {}): any {\r\n            var { constructor } = target;\r\n            var { get, set } = descriptor, hasGet = !!get, hasSet = !!set, hasGetOrSet = (hasGet || hasSet), hasGetAndSet = (hasGet && hasSet);\r\n            var metadata = new Metadata(constructor);\r\n            var name = (attr || key), alias = key;  // name === alias if !attr\r\n            var data = { decorator: 'attribute:observee', name, alias, hasGet, hasSet, hasGetOrSet, hasGetAndSet };\r\n            \r\n            if (!hasGetOrSet) descriptor.writable = true;  // do not declare WHATSOEVER unless !hasGetOrSet\r\n            metadata.$members.set(key, data);\r\n            metadata.$observedAttributes.set(key, data);\r\n            \r\n            return data;\r\n        };\r\n    };\r\n    observer(attr: string): any {  // @usage: @observe('options') handleOptionsChange(val, old) {}\r\n        var thus = this;\r\n        \r\n        return function get(target: any, key: string, descriptor: any = {}): any {\r\n            var { constructor } = target;\r\n            var descriptor = { ...descriptor, ...DEFAULT_DESCRIPTOR };\r\n            var { value: handler } = descriptor;\r\n            var metadata = new Metadata(constructor);\r\n            var name = key;\r\n            var data = { decorator: 'attribute:observer', name, attr, handler };\r\n            \r\n            metadata.$members.set(key, data);\r\n            metadata.$watchers.set(attr, data);\r\n            \r\n            return data;\r\n        };\r\n    };\r\n    \r\n    element(selector: string): any {  // DEP\r\n        var thus = this;\r\n        var isHost = (selector === 'this');\r\n        \r\n        return function get(target: any, key: string, descriptor: any = {}): any {\r\n            var { constructor } = target;\r\n            var descriptor = { ...descriptor, ...DEFAULT_DESCRIPTOR };\r\n            var metadata = new Metadata(constructor);\r\n            var name = key;\r\n            var data = { decorator: 'reference:element', name, key, selector, isHost };\r\n            \r\n            metadata.$members.set(key, data);\r\n            metadata.$elements.set(key, data);\r\n            \r\n            return descriptor;\r\n        };\r\n    };\r\n    \r\n    attr(selector: string): any {  // DEP\r\n        var thus = this;\r\n        var re = new RegExp(/^(.*)\\[(.+)\\]$/);\r\n        var matches = re.exec(selector), [ match, tagName, attr ] = matches;\r\n        var isHost = (tagName === 'this');\r\n        \r\n        return function get(target: any, key: string, descriptor: any = {}): any {\r\n            var { constructor } = target;\r\n            var descriptor = { ...descriptor, ...DEFAULT_DESCRIPTOR };\r\n            var metadata = new Metadata(constructor);\r\n            var name = attr;\r\n            var data = { decorator: 'reference:attribute', name, key, selector, isHost };\r\n            \r\n            metadata.$members.set(key, data);\r\n            metadata.$attrs.set(key, data);\r\n            \r\n            return descriptor;\r\n        };\r\n    };\r\n    \r\n    listener(type: string) {  // DEP\r\n        var thus = this;\r\n        var isHost = !type;\r\n        \r\n        return function get(target: any, key: string, descriptor: any = {}): any {\r\n            var { constructor } = target;\r\n            // var descriptor = { ...descriptor, ...DEFAULT_DESCRIPTOR };\r\n            var { value: handler } = descriptor;\r\n            var metadata = new Metadata(constructor);\r\n            var name = key;\r\n            var data = { decorator: 'handler:dom', name, key, type, handler, isHost };\r\n            \r\n            metadata.$members.set(key, data);\r\n            metadata.$listeners.set(key, data);\r\n            \r\n            return descriptor;\r\n        };\r\n    };\r\n    \r\n    message(type: string): any {  // DEP\r\n        \r\n        return function get(target: any, key: string, descriptor: any = {}): any {\r\n            var { constructor } = target;\r\n            var descriptor = { ...descriptor, ...DEFAULT_DESCRIPTOR };\r\n            var { value: handler } = descriptor;\r\n            var metadata = new Metadata(constructor);\r\n            var name = key;\r\n            var data = { decorator: 'handler:comm', name, key, type, handler };\r\n            \r\n            metadata.$members.set(key, data);\r\n            metadata.$subscriptions.set(key, data);\r\n            \r\n            return descriptor;\r\n        };\r\n    };\r\n    \r\n    trigger(action: string) {  // DEP\r\n        class MethodProxy {\r\n            constructor(private target: any, private name: string) {}\r\n            apply(fn: Function, thus: any, args: any[]) {\r\n                var { target, name } = this;\r\n                var result = Reflect.apply(fn, thus, args);\r\n                \r\n                target[action](name, ...args);\r\n                \r\n                return result;\r\n            }\r\n        }\r\n        \r\n        return function get(target: any, key: string, descriptor: any = {}): any {\r\n            var { value: fn } = descriptor;\r\n            var proxy = new Proxy( fn, new MethodProxy(target, key) );\r\n            var descriptor = { ...descriptor, value: proxy };\r\n            \r\n            return descriptor;\r\n        };\r\n    }\r\n\r\n})();\r\n\r\n\r\nconst {\r\n    observe, observee, observer,\r\n    element, attr,\r\n    listener, message,\r\n    trigger,\r\n} = decorators;\r\n\r\nexport { ElementNode, AttributeNode, TextNode, CommentNode, Directive, Pipe, Service };\r\nexport { observe, observee, observer };\r\nexport { element, attr };\r\nexport { listener, message };\r\nexport { trigger };\r\n","\r\nvar CSV = new class CSV {\r\n    \r\n    // JSON.stringify(value[, replacer[, space]])\r\n    stringify(collection, fields, delimiter) {  // Word Art Cloud: wordToWeight() & weightToWord()\r\n        /**\r\n         * Given: map.get(fields[i]).push( collection[j][ fields[i] ] )\r\n         * Then: every column (fields[i]) contains an equal number of values as any other column.\r\n         * Because: map.get(fields[i])[0] === collection[j][ fields[i] ]\r\n         */\r\n        var $table = new Map();  // Map { 0 => { a, b, c, ... } }\r\n        var $values = new Map();  // Map { a => [ x, y, z, ... ] }\r\n        var $lines = new Map();  // Map { 0 => [ x, y, z, ... ] }\r\n        var matrix = [ ];  // [ [a,b,c,...], [a,b,c,...], ... ]\r\n        var lines = [ ];\r\n        var span = 0;\r\n        \r\n        if (!fields) fields = Object.keys( collection.reduce( (o, x) => ({ ...o, ...x }), { } ) );  // gets all available keys across all objects in collection\r\n        \r\n        for (let i = 0, width  = collection.length; i < width;  i++)\r\n        for (let j = 0, height = fields.length;     j < height; j++)\r\n\t\t(function create(value, [x, y], row, i, rows, col, j, columns) {\r\n            var _id = x, field = col;\r\n            var record = $table.get(_id) || { _id };\r\n            var column = $values.get(col) || [ ];\r\n            var line = $lines.get(x) || [ ];\r\n            \r\n            if ({ 'undefined': true }[ value ]) value = '';\r\n            matrix[x] = matrix[x] || [ ];\r\n            matrix[x][y] = record[field] = column[x] = line[y] = value;\r\n            \r\n            $table.set(_id, record);  // ensure gets set first time\r\n            $values.set(col, column);  // ensure gets set first time\r\n            $lines.set(x, line);  // ensure gets set first time\r\n            \r\n            span = Math.max.apply(null, [ span, col.length, `${value}`.length ]);\r\n            lines[x] = line.join(',');\r\n            \r\n        })(collection[i][ fields[j] ], [i, j], collection[i], i, collection, fields[j], j, fields);\r\n        \r\n        var tabs = Array.apply(null, { length: span });\r\n        var delimiter = {\r\n            '\\t': tabs.map( () => '\\t' ),\r\n            '\\s': tabs.map( () => '\\s' ),\r\n            'undefined': [ ],\r\n        }[ delimiter ].join('');\r\n        var columns = fields.join(',');\r\n        var csv = [ columns ].concat(lines).join('\\n');\r\n        var csv = csv.replace(/,/img, `,${delimiter}`);\r\n        \r\n        return csv;\r\n    }\r\n    \r\n    parse(csv) {\r\n        var lines = csv.split(/\\n+/img), [ fields ] = lines, fields = fields.split(/,\\t*/), rows = lines.slice(1);\r\n\t\tvar collection = rows.reduce( getObject.bind(this, fields), [ ] );\r\n        \r\n        function getObject(fields, array, line, row, lines) {\r\n            var o = fields.reduce( getValue.bind(this, line), { } );\r\n            array.push(o);\r\n            \r\n            function getValue(line, o, key, i, fields) {\r\n                var values = line.split(/,\\s*/), value = values[i], datum = { [key]: value };\r\n                return { ...o, ...datum };\r\n            }\r\n            \r\n            return array;\r\n        }\r\n        \r\n\t\treturn collection;\r\n    }\r\n    \r\n};\r\n\r\n/**\r\n * @ URLComponents\r\n */\r\nclass URLComponents {\r\n    hash: string = '';\r\n    host: string = '';\r\n    hostname: string = '';\r\n    href: string = '';\r\n    origin: string = '';\r\n    pathname: string = '';\r\n    port: string = '';\r\n    protocol: string = '';\r\n    search: string = '';\r\n    \r\n    constructor(url) {\r\n        var parser = document.createElement('a');\r\n        parser.href = url;\r\n\r\n        this.hash = parser.hash;\r\n        this.host = parser.host;\r\n        this.hostname = parser.hostname;\r\n        this.href = parser.href;\r\n        this.origin = parser.origin;\r\n        this.pathname = parser.pathname;\r\n        this.port = parser.port;\r\n        this.protocol = parser.protocol;\r\n        this.search = parser.search;\r\n\r\n        return this;\r\n    }\r\n    \r\n}\r\n\r\nclass ParameterMap {\r\n    name: string = '';\r\n    value: string = '';\r\n    \r\n    constructor(str) {\r\n        var pair = str.split('=');\r\n        this.name = pair[0];\r\n        this.value = pair[1];\r\n        return this;\r\n    }\r\n    \r\n}\r\n\r\nclass QueryMap {\r\n    \r\n    constructor(q) {\r\n        var query = decodeURIComponent(q);\r\n        var exp = /[^\\?|\\&]([^=]+)\\=([^&]+)/g;\r\n        var res = query.match(exp);\r\n\r\n        for (var i = 0, len = res.length; i < len; i++) {\r\n            var map = new ParameterMap(res[i]);\r\n            this[map.name] = map.value;\r\n        }\r\n\r\n        return this;\r\n    }\r\n    \r\n}\r\n\r\nclass Utilities {\r\n    CSV: any = CSV;\r\n    console: any = console;\r\n    \r\n    constructor() {\r\n        return this;\r\n    }\r\n      \r\n    noop() {}\r\n    \r\n    extend(object, first?, ...more) {\r\n        var o = Object.keys(first).reduce( (o, k) => (o[k] = first[k], o), object );\r\n        if (more.length) return this.extend(object, ...more);\r\n        return o;\r\n    }\r\n    \r\n    is(value) {\r\n        var isnt = { null: true, undefined: true, '': true, 0: false }[ value ];\r\n        return !isnt;\r\n    }\r\n    \r\n    timeout(handler, ...splat) {\r\n        var cancel = window.setTimeout(handler, ...splat);\r\n        return cancel;\r\n    }\r\n    \r\n    enqueue(handler, ...splat) {\r\n        var result = this.timeout(handler, 0, ...splat);\r\n        return result;\r\n    }\r\n    \r\n    /**\r\n     * \r\n     * @intention\r\n     *  * Leverage global.setTimeout for intervals instead of global.setInterval.\r\n     * @patterns { Curry }\r\n     * @usage \r\n     *  * var clear = utils.interval( () => console.log('called!'), 1000 );\r\n     *  * setTimeout(clear, (1000 * n) );  // clears interval after n seconds\r\n     */\r\n    interval(handler, delay, ...splat) {\r\n        var thus = this, timeout = thus.timeout(set, delay, ...splat);\r\n        \r\n        function set(...params) {\r\n            if ( !timeout ) return console.log('break');  // > -1\r\n            handler.call(this, ...params);\r\n            timeout = thus.timeout(set, delay, ...splat);\r\n        }\r\n        function clear() {\r\n            clearTimeout(timeout);\r\n            timeout = null;\r\n            return !timeout;  // assert is cleared\r\n        }\r\n        \r\n        return clear;\r\n    }\r\n    \r\n    debounce(fn, delay) {  // # thx Remy Sharp\r\n        var timer = null;\r\n        \r\n        function _debounce(...splat) {\r\n            var context = this;\r\n            clearTimeout(timer);\r\n            timer = setTimeout( () => fn.call(context, ...splat), delay);\r\n        };\r\n        \r\n        return _debounce;\r\n    }\r\n    \r\n    throttle(fn, threshhold, scope) {  // # thx Remy Sharp\r\n        var threshhold = threshhold || 250, last, deferTimer;\r\n        \r\n        function _throttle(...splat) {\r\n            var context = scope || this, now = +(new Date()), last = now, final = (last + threshhold);\r\n            var invoke = () => ( fn.call(context, ...splat), last = now );\r\n            \r\n            if (!last || now >= final) return invoke();  // don't hold on to it\r\n            clearTimeout(deferTimer);\r\n            deferTimer = setTimeout(invoke, threshhold);\r\n        };\r\n        \r\n        return _throttle;\r\n    }\r\n    \r\n    uuid() {\r\n        function replace(c) {\r\n        var r = Math.random() * 16 | 0, v = c == 'x' ? r : (r & 0x3 | 0x8);\r\n        return v.toString(16);\r\n        }\r\n        return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, replace);\r\n    }\r\n    \r\n    escapeHTML(s) {\r\n        return s.replace(/[&\"<>]/g, function (c) {\r\n            return {\r\n                '&': '&amp;',\r\n                '\"': '&quot;',\r\n                '<': '&lt;',\r\n                '>': '&gt;'\r\n            }[c];\r\n        });\r\n    }\r\n    \r\n    \r\n    drill(data: any, path: string): any {  // @usage: var x = drill('a.b.c.id', { a: { b: { c: { id: x } } } });\r\n        var keys = path.split('.'), key = keys.shift();\r\n        \r\n        if (!data) return undefined;  // not unlike an operation of { 'existent': true }[ 'absent' ] > undefined\r\n        if (!key) return data;  // data is final\r\n        \r\n        return this.drill( data[key], keys.join('.') );  // TCO/TCE\r\n    }\r\n    \r\n    interpolate$(str) {\r\n        return (o) => (new Function(`if (this) with (this) return \\`${str}\\`;`) ).call(o);\r\n    }\r\n    interpolate(str: string): (o) => string {\r\n        // var str = str.replace(/{{([^{}]*)}}/g, '${$1}');\r\n        return (o) => this.interpolate$(str)(o);\r\n    }\r\n    \r\n    /**\r\n     * @ Inspiration: Douglas Crockford (String.prototype.supplant)\r\n     */\r\n    interpolateX(str: string): (o) => string {\r\n        return (o) => str.replace(/{{([^{}]*)}}/g, (a, b) => {\r\n            var f = new Function('o', `with (o) if (o.${b} !== undefined) return o.${b}; else return '{{${b}}}';`), val = ''+f(o);\r\n            return val;  // assume rational value for string result\r\n        });\r\n    }\r\n    /**\r\n     * @ Inspiration: Douglas Crockford (String.prototype.supplant)\r\n     */\r\n    safelyInterpolate(str) {\r\n        return (o) => str.replace(/{{([^{}]*)}}/g, (a, b) => {\r\n            var f = new Function('o', `with (o) if (o.${b} !== undefined) return o.${b}; else return '{{${b}}}';`), val = ''+f(o);\r\n            return this.escapeHTML(val);  // assume rational value for string result\r\n        });\r\n    }\r\n    \r\n    /**\r\n     * @ THX: Douglas Crockford (String.prototype.supplant)\r\n     * @ INTERPOLATE\r\n     */\r\n    interpolateShallow(str) {\r\n        return (o) => {\r\n            return str.replace(/{{([^{}]*)}}/g, (a, b) => {\r\n                var val = ''+o[b];\r\n                return this.escapeHTML(val);  // TODO: escape HTML-Entities\r\n            });\r\n        };\r\n    }\r\n\r\n    /**\r\n     * @ THX: Douglas Crockford (String.prototype.supplant)\r\n     * @ INSECURE_INTERPOLATE\r\n     */\r\n    INSECURE_INTERPOLATE(str) {\r\n        return function interpolate(o) {\r\n            return str.replace(/{{([^{}]*)}}/g, function (a, b) {\r\n                var val = ''+o[b];\r\n                return val;  // TODO: escape HTML-Entities\r\n            });\r\n        }\r\n    }\r\n    \r\n    /**\r\n     * @ EXTERPOLATE | PARSE ROUTE-URI\r\n     */\r\n    exterpolate(str) {\r\n        var str = str || '';\r\n        var re = /:[^\\s/]+|{+[^\\s/]+}+/g;\r\n        var matcher = new RegExp(str.replace(re, '([\\\\w-]+)'));\r\n\r\n        return function getValues(string) {\r\n            if (!string.match(matcher)) return false;\r\n            var string = string || '';\r\n            var result = string.match(matcher);\r\n            var keys = str.match(re);\r\n            var values = result.slice(1);\r\n            var map = {};\r\n\r\n            if (keys && values) {\r\n                for (var i = 0, len = keys.length; i < len; i++) {\r\n                    var key = keys[i].replace(/[:{}]+/g, '');\r\n                    var val = values[i];\r\n                    if (key !== val) map[key] = val;\r\n                }\r\n            }\r\n\r\n            return map;\r\n        };\r\n    }\r\n    \r\n    parseURL(url) {\r\n        var a = document.createElement('a');\r\n        a.href = url;\r\n        \r\n        return {\r\n            hash: a.hash,\r\n            host: a.host,\r\n            hostname: a.hostname,\r\n            href: a.href,\r\n            origin: a.origin,\r\n            pathname: a.pathname,\r\n            port: a.port,\r\n            protocol: a.protocol,\r\n            search: a.search,\r\n        };\r\n    }\r\n    \r\n    sortByKey(k, a, b) {  // Sort by Multiple keys (Reusable) using sortByKey()\r\n        // USAGE:\r\n        // var sort = sortByKey.bind(collection, 'x');\r\n        // collection.sort(sort);\r\n        if (a[k] > b[k]) return  1;\r\n        if (a[k] < b[k]) return -1;\r\n        return 0;\r\n    }\r\n    \r\n    // Sort by Multiple keys (Reusable + Optimized) using Methods-Array\r\n    priorityMethodSort(methods, a, b) {\r\n        // USAGE:\r\n        // var sort = prioritySort.bind(collection, [ sort$A, sort$B, sort$C, sort$D ]);\r\n        // collection.sort(sort);\r\n        var i = 0, methods = Array.prototype.slice.call(methods || [ ], 0);\r\n        while (i === 0 && methods.length) i = methods.shift().call(this, a, b);\r\n        return i;\r\n    }\r\n    \r\n    priorityKeySort(keys, a, b) {  // Sort by Multiple keys (Reusable + Optimized) using Reusable prioritySort()\r\n        // USAGE:\r\n        // var sort = prioritySort.bind(collection, [ 'a', 'b', 'c', 'd' ]);\r\n        // collection.sort(sort);\r\n        // console.log('>', collection);\r\n        // >  [\r\n        //       { \"a\": 0, \"b\": 0, \"c\": 0, \"d\": 0 },\r\n        //       { \"a\": 0, \"b\": 1, \"c\": 2, \"d\": 2 },\r\n        //       { \"a\": 0, \"b\": 1, \"c\": 2, \"d\": 3 },\r\n        //       { \"a\": 1, \"b\": 1, \"c\": 1, \"d\": 1 },\r\n        //       { \"a\": 1, \"b\": 2, \"c\": 2, \"d\": 1 },\r\n        //       { \"a\": 1, \"b\": 2, \"c\": 3, \"d\": 1 },\r\n        //       { \"a\": 2, \"b\": 2, \"c\": 2, \"d\": 2 },\r\n        //       { \"a\": 3, \"b\": 3, \"c\": 3, \"d\": 3 }\r\n        //    ]\r\n        var i = 0, keys = Array.prototype.slice.call(keys || [ ], 0);\r\n        while (i === 0 && keys.length) i = this.sortByKey.call(this, keys.shift(), a, b);\r\n        return i;\r\n    }\r\n    \r\n    getFileSize(size, unit = 'auto') {  // size: number, unit: 'auto'|'byte'|'KB'|'MG'|'GB'|'TB'|'PB'\r\n        var $ = this.toFixed.bind(this);\r\n        var $bytes = $(size || 0), $KB = $($bytes / 1024), $MB = $($KB / 1024), $GB = $($MB / 1024), $TB = $($GB / 1024), $PB = $($TB / 1024);\r\n        var bytes = `${$bytes} bytes`, KB = `${$KB} KB`, MB = `${$MB} MB`, GB = `${$GB} GB`, TB = `${$TB} TB`, PB = `${$PB} PB`;\r\n        var $auto = $bytes;\r\n        var auto;\r\n        var values = { bytes, KB, MB, GB, TB, PB, auto: undefined };\r\n        var result = { unit: '', value: Infinity };\r\n        var datasets = [\r\n        { unit: 'bytes', value: $bytes },\r\n        { unit: 'KB', value: $KB },\r\n        { unit: 'MB', value: $MB },\r\n        { unit: 'GB', value: $GB },\r\n        { unit: 'TB', value: $TB },\r\n        { unit: 'PB', value: $PB },\r\n        ];\r\n        while ( (result.value / 1024) >= 1 && datasets.length ) result = datasets.shift();\r\n        values.auto = `${result.value} ${result.unit}`;\r\n        \r\n        \r\n        \r\n        return values[unit];\r\n    }\r\n    \r\n    toFixed(n) { return Number( Math.round(+(n + 'e2')) + 'e-2' ); }\r\n    \r\n    exists(n) { return !!~n; }\r\n    \r\n}\r\n\r\nexport { Utilities };\r\n","\r\n/**\r\n * @name: Deferred Promise\r\n * @intention\r\n *  * Externalize the function of a Promise's \"Executor\" parameters so that fulfillment & rejection\r\n *  * can be performed at a later time.\r\n */\r\nclass Deferred<T> {\r\n    private _resolve: Function = () => {};\r\n    private _reject: Function = () => {};\r\n    public promise: Promise<T> = new Promise<T>( this.exe.bind(this) );\r\n        \r\n    constructor() {}\r\n    \r\n    private exe(resolve, reject) {\r\n        this._resolve = resolve;\r\n        this._reject = reject;\r\n    }\r\n    \r\n    resolve(data) {\r\n        this._resolve(data);\r\n        return this.promise;\r\n    }\r\n    reject(data) {\r\n        this._reject(data);\r\n        return this.promise;\r\n    }\r\n    \r\n}\r\n\r\nexport { Deferred };\r\n","\r\ninterface IDetector {\r\n    detect(e: CustomEvent): any;\r\n}\r\n\r\n/**\r\n * @intention\r\n *  Provide a means to subscribe to specific actions on specific data on an object.\r\n * @KnownIssues\r\n *  * Only works for set-operations\r\n * @usage\r\n * var detector = {\r\n *    detect(e) {\r\n *        console.log('Detector.detect', e.type, e.detail);\r\n *    }\r\n * };\r\n* var detective = new Detective(object, detector);\r\n* detective\r\n*     .subscribe('name')\r\n*     .subscribe('key')\r\n*     .subscribe('param')\r\n*     ;\r\n* // |\r\n* // | AND|OR\r\n* // V\r\n* var detective = new Detective(object[, detector]);\r\n* detective.subscribe('name', (e) => console.log('#name', e.type, e.detail) );\r\n* detective.subscribe('key', (e) => console.log('#key', e.type, e.detail) );\r\n*/\r\nclass Detective {\r\n    target: EventTarget = new EventTarget();\r\n    proxy: typeof Proxy = new Proxy( new class Outlet {}, this);\r\n    context: any = null;\r\n    detector: IDetector = { detect(e) {} };\r\n    \r\n    constructor(context: any, detector?: IDetector) {\r\n        var detector = detector || this.detector;\r\n        \r\n        this.context = context;\r\n        this.detector = detector;\r\n    }\r\n    \r\n    set(target: any, key: string, value: any, receiver: Detective) {\r\n        var { target: emitter, proxy, detector } = this;\r\n        var oldValue = proxy[key];\r\n        var detail = { action: 'set', oldValue, value };\r\n        var e = new CustomEvent(key, { detail });\r\n        var result = Reflect.set(target, key, value, receiver);\r\n        \r\n        if (oldValue === value) return result;\r\n        \r\n        detector.detect(e);\r\n        emitter.dispatchEvent(e);\r\n        return result;\r\n    }\r\n    \r\n    private getPropertyDescriptor(context: any, key: string) {\r\n        var prototype = Object.getPrototypeOf(context);\r\n        var dtor = Object.getOwnPropertyDescriptor(context, key);\r\n        \r\n        if (!dtor && !!prototype) return this.getPropertyDescriptor(prototype, key);\r\n        return dtor;\r\n    }\r\n    \r\n    private configure(context: any, key: string) {\r\n        var { proxy, target } = this;\r\n        var dtor = this.getPropertyDescriptor(context, key)\r\n          , getter = dtor && dtor.get\r\n          , setter = dtor && dtor.set\r\n          ;\r\n        var defaults = { configurable: true, enumerable: true };\r\n        var config = { ...defaults, get: get.bind(context, key), set: set.bind(context, key) };\r\n        \r\n        function get(key) {\r\n            var value = getter ? getter.call(context) : proxy[key];\r\n            return value;\r\n        }\r\n        \r\n        function set(key, value) {\r\n            if (setter) setter.call(context, value);\r\n            proxy[key] = value;\r\n        }\r\n        \r\n        Object.defineProperty(context, key, config);\r\n    }\r\n    \r\n    private getContextAndKey(context: any, key: string): { context: any, key: string } {\r\n        var keys = key.split('.');\r\n        var first = keys.shift(), next = context[first], composite = keys.join('.');\r\n        var result = { context, key };\r\n        \r\n        if (keys.length) return this.getContextAndKey(next, composite);\r\n        return result;\r\n    }\r\n    \r\n    hasProperty(context: any, key: string) {\r\n        var prototype = Object.getPrototypeOf(context);\r\n        var has = context.hasOwnProperty(key);\r\n        \r\n        if (!has && !!prototype) return this.hasProperty(prototype, key);\r\n        return has;\r\n    }\r\n    \r\n    subscribe(key: string, handler?: Function) {\r\n        var { context, target, proxy } = this;\r\n        var { context, key } = this.getContextAndKey(context, key);\r\n        \r\n        proxy[key] = context[key];  // ensure oldValue has initial/current before configuration\r\n        this.configure(context, key);\r\n        if (handler) target.addEventListener(key, <EventListenerOrEventListenerObject>handler, false);\r\n        \r\n        return this;\r\n    }\r\n    \r\n}\r\n\r\nexport { Detective };\r\n  ","\r\nexport { Utilities } from './utilities';\r\nexport { keycodes } from './keycodes';\r\n// export { patterns } from './patterns';\r\n// export { ds } from './ds';\r\nexport { Deferred } from './patterns/other/deferred';\r\nexport { Detective } from './patterns/other/detective';\r\n","\r\nexport { Vertex as V } from './core';\r\nexport { Core } from './core';\r\nexport { Sandbox } from './core/sandbox';\r\nexport { Bootstrap } from './core/bootstrap';\r\nexport { ElementNode, AttributeNode, TextNode, CommentNode, Directive, Pipe, Service } from './core';\r\nexport { observe, observee, observer, element, attr, listener, message, trigger } from './core';\r\n","\r\nclass Handler {\r\n    respond(e: CustomEvent): any {\r\n        return e.detail;  // continue and provide same value (see Function Purity)\r\n    }\r\n}\r\n\r\n/**\r\n * @name: The Chain of Responsibility Pattern\r\n * @intention\r\n * \t* Avoid coupling the sender of a request to its receiver by giving more than one object a chance to handle the request. Chain\r\n * \t* the receiving objects and pass the request along the chain until an object handles it.\r\n * @usage \r\n *  * var cor = new ChainOfResponsibility({ ... });  // see config/constructor\r\n *  * cor.push({ respond(e) {...} });\r\n *  * cor.push({ respond(e) { e.stopImmediatePropagation(); return false; } }, { respond(e) {...} }, ...);\r\n *  *  -- OR --\r\n *  * private nodeHandlers: ChainOfResponsibility = new ChainOfResponsibility({}, [\r\n *  *     { respond: (e: CustomEvent) => console.log('COR: A', e) },\r\n *  *     { respond: (e: CustomEvent) => console.log('COR: B', e) },\r\n *  *     { respond: (e: CustomEvent) => e.stopImmediatePropagation() },\r\n *  *     { respond: ({ detail: value }: CustomEvent) => console.log('COR: C', value) },  // <-- never runs. propagation stopped.\r\n *  * ]);\r\n *  * -- INITIALIZE --\r\n *  * [EventTarget].addEventListener('click', cor.respond, false);  // only 1st 2 handlers get invoked. propagation stopped.\r\n *  * -- OR --\r\n *  * cor.execute( new CustomEvent('some:process:id', { detail: data }) );\r\n * @note\r\n *  * Can be used to simply give multiple objects a chance to receive a request -- OR -- create a mutation pipeline.\r\n */\r\nclass ChainOfResponsibility extends Array {\r\n    protected config: any = { cancelable: false, bubbles: true };\r\n        \r\n    constructor(config, responders: Handler[] = []) {\r\n        super();\r\n        var { bubbles, cancelBubble, cancelable, defaultPrevented } = config;\r\n        \r\n        this.config = { ...this.config, ...config };\r\n        this.push(...responders);\r\n        \r\n        return this;\r\n    }\r\n    \r\n    protected execute(e: CustomEvent, i: number = 0, handlers: Handler[] = this.slice()): CustomEvent {\r\n        var handler = handlers[i] || new Handler();\r\n        var result = this.propagate(e, handler, i, handlers);  // process & reassign in case of change\r\n        var event = new CustomEvent(e.type, { detail: result }), next = handlers[i + 1];\r\n        \r\n        if (e.cancelBubble) event.stopImmediatePropagation();\r\n        if (e.cancelBubble) return event;  // if cancelled, stop immediately. return with value from cancellor.\r\n        if (next) return this.execute(event, ++i);  // has sibling handler. continue with new detail.\r\n        return event;  // if end reached and event not cancelled\r\n    }\r\n    \r\n    protected propagate(e: CustomEvent|any, handler: Handler, i: number, handlers: Handler[]): any {\r\n        if (e.cancelBubble) return e;\r\n        var { config } = this;\r\n        var value = handler.respond.call(handler, e)\r\n          , cancelBubble = !{ 'undefined': true, 'false': false }[ value ]\r\n          ;\r\n        if (config.cancelable && cancelBubble) e.stopImmediatePropagation();\r\n        \r\n        return value;\r\n    }\r\n    \r\n    chain(handler: Handler, ...handlers: Handler[]): ChainOfResponsibility {\r\n        this.push(handler, ...handlers);\r\n        return this;\r\n    }\r\n    \r\n    public respond = (e: CustomEvent<any>): CustomEvent<any> => {\r\n        var event = this.execute(e);\r\n        return event;  // subclasses can implement return result.cancelBubble or return false;\r\n    };\r\n    \r\n}\r\n\r\nexport { ChainOfResponsibility, Handler };\r\n","\r\n/**\r\n * @intention \r\n * @usage \r\n *  * var command = new Command(console, 'log');\r\n *  * command.execute('This gets logged by the console');\r\n */\r\nclass Command {\r\n    private context: any = null;\r\n    private action: string = '';\r\n        \r\n    constructor(context, action) {\r\n        this.context = context;\r\n        this.action = action;\r\n    }\r\n    \r\n    execute(...splat: any[]) {\r\n        var { context, action } = this;\r\n        var value = context[action](...splat);\r\n        return value;\r\n    }\r\n    \r\n}\r\n\r\nclass StrictCommand extends Command {\r\n    \r\n    public execute = (...splat: any[]) => super.execute(...splat);\r\n    \r\n}\r\n\r\nexport { Command, StrictCommand };\r\n","/**\r\n * THIS SHOULD ACTUALLY BE JUST AN EVENT-AGGREGATOR THAT CAN BE USED [PER USUAL] ACROSS\r\n * THE SYSTEM, WHILE A \"WebSocketDecorator\" CAN BE USED TO NORMALIZE THE EXTERNAL LIBRARY.\r\n */\r\nvar EventEmitter = EventTarget;\r\nclass EventHub extends EventEmitter {\r\n    \r\n    publish(channel: string, data?: any, ...more: any[]) {\r\n        var e = new CustomEvent(channel, { detail: data });\r\n        this.dispatchEvent(e);\r\n        return this;\r\n    }\r\n    subscribe(channel: string, handler: any) {\r\n        this.addEventListener(channel, handler, false);\r\n        return this;\r\n    }\r\n    unsubscribe(channel: string, handler: any) {\r\n        this.removeEventListener(channel, handler, false);  // what is 3rd param again?\r\n        return this;\r\n    }\r\n    \r\n}\r\n\r\nexport { EventHub };\r\n","\r\nexport { ChainOfResponsibility } from './chainOfRespnsibility';\r\nexport { Command, StrictCommand } from './command';\r\nexport { Mediator } from './mediator';\r\nexport { Subject, IObserver } from './observer';\r\n","\r\ninterface IObserver {\r\n    update(state?: any): any;\r\n}\r\n\r\n/**\r\n * @deviations \r\n *  * @param #this: key\r\n *  *   * Demarcates a given datum to use as an instance's \"state\".\r\n *  * @param #this: observation\r\n *  *   * Provides convenience for getting an instance's state based upon `key`.\r\n *  *   * @reasoning\r\n *  *   *   * The key-name `state` is common between problem-domains; as so, objects such as an Address may \r\n *  *   *   * naturally encapsulate a datum named `state`. This allows the subclass to override `get key() {}` \r\n *  *   *   * to provide that of their own. The words \"key\" & \"observation\" are assumed to \r\n *  *   *   * be less common than \"state\", and preferred over [modified] words like \"$state\". In the case\r\n *  *   *   * that `this` is to be returned as \"state\", omitting `key` from the constructor provides the\r\n *  *   *   * implementor opportunity to define `get undefined() { return this; }` (accommodated by setter)\r\n *  *   *   * because, in which case,\r\n *  *   *   * `get observation() { return this[this.key]; }`\r\n *  *   *   * `===`\r\n *  *   *   * `get observation() { return this.undefined; }`\r\n *  *   *   * `===`\r\n *  *   *   * `get undefined() { return this; }`\r\n *  * @param #attach(): notify\r\n *  *   *   Type: Boolean\r\n *  *   *   Allows for any given Observer to declare whether or not it's `update()` method should be invoked\r\n *  *   *   upon attachment, in order to obtain the Subject's current state.\r\n */\r\nclass Subject {\r\n    private observers: IObserver[] = [ ];\r\n    get observation() { return this[this.key]; }  // (aliases Observer Pattern \"state\" datum) uses given datum for state\r\n    set observation(value) { this[this.key] = value; this.notify(); }  // manually sets state & notifies observers\r\n    \r\n    constructor(private key?: any) {}\r\n    \r\n    attach(observer: IObserver, notify?: boolean): Subject {\r\n        var { observers, observation } = this;\r\n        observers.push(observer);\r\n        if (notify) observer.update(observation);\r\n        return this;\r\n    }\r\n    \r\n    detach(observer: IObserver): Subject {\r\n        var { observers } = this;\r\n        for (let i = observers.length; i--;) if (observers[i] === observer) observers.splice(i, 1);\r\n        return this;\r\n    }\r\n    \r\n    notify(state?: any): Subject {\r\n        var { observers, observation } = this, state = state || observation;\r\n        for (let i = 0, len = observers.length; i < len; i++) observers[i].update(state);\r\n        return this;\r\n    }\r\n    \r\n}\r\n\r\nexport { Subject, IObserver };\r\n","\"use strict\";\n\nvar isOldIE = function isOldIE() {\n  var memo;\n  return function memorize() {\n    if (typeof memo === 'undefined') {\n      // Test for IE <= 9 as proposed by Browserhacks\n      // @see http://browserhacks.com/#hack-e71d8692f65334173fee715c222cb805\n      // Tests for existence of standard globals is to allow style-loader\n      // to operate correctly into non-standard environments\n      // @see https://github.com/webpack-contrib/style-loader/issues/177\n      memo = Boolean(window && document && document.all && !window.atob);\n    }\n\n    return memo;\n  };\n}();\n\nvar getTarget = function getTarget() {\n  var memo = {};\n  return function memorize(target) {\n    if (typeof memo[target] === 'undefined') {\n      var styleTarget = document.querySelector(target); // Special case to return head of iframe instead of iframe itself\n\n      if (window.HTMLIFrameElement && styleTarget instanceof window.HTMLIFrameElement) {\n        try {\n          // This will throw an exception if access to iframe is blocked\n          // due to cross-origin restrictions\n          styleTarget = styleTarget.contentDocument.head;\n        } catch (e) {\n          // istanbul ignore next\n          styleTarget = null;\n        }\n      }\n\n      memo[target] = styleTarget;\n    }\n\n    return memo[target];\n  };\n}();\n\nvar stylesInDom = {};\n\nfunction modulesToDom(moduleId, list, options) {\n  for (var i = 0; i < list.length; i++) {\n    var part = {\n      css: list[i][1],\n      media: list[i][2],\n      sourceMap: list[i][3]\n    };\n\n    if (stylesInDom[moduleId][i]) {\n      stylesInDom[moduleId][i](part);\n    } else {\n      stylesInDom[moduleId].push(addStyle(part, options));\n    }\n  }\n}\n\nfunction insertStyleElement(options) {\n  var style = document.createElement('style');\n  var attributes = options.attributes || {};\n\n  if (typeof attributes.nonce === 'undefined') {\n    var nonce = typeof __webpack_nonce__ !== 'undefined' ? __webpack_nonce__ : null;\n\n    if (nonce) {\n      attributes.nonce = nonce;\n    }\n  }\n\n  Object.keys(attributes).forEach(function (key) {\n    style.setAttribute(key, attributes[key]);\n  });\n\n  if (typeof options.insert === 'function') {\n    options.insert(style);\n  } else {\n    var target = getTarget(options.insert || 'head');\n\n    if (!target) {\n      throw new Error(\"Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.\");\n    }\n\n    target.appendChild(style);\n  }\n\n  return style;\n}\n\nfunction removeStyleElement(style) {\n  // istanbul ignore if\n  if (style.parentNode === null) {\n    return false;\n  }\n\n  style.parentNode.removeChild(style);\n}\n/* istanbul ignore next  */\n\n\nvar replaceText = function replaceText() {\n  var textStore = [];\n  return function replace(index, replacement) {\n    textStore[index] = replacement;\n    return textStore.filter(Boolean).join('\\n');\n  };\n}();\n\nfunction applyToSingletonTag(style, index, remove, obj) {\n  var css = remove ? '' : obj.css; // For old IE\n\n  /* istanbul ignore if  */\n\n  if (style.styleSheet) {\n    style.styleSheet.cssText = replaceText(index, css);\n  } else {\n    var cssNode = document.createTextNode(css);\n    var childNodes = style.childNodes;\n\n    if (childNodes[index]) {\n      style.removeChild(childNodes[index]);\n    }\n\n    if (childNodes.length) {\n      style.insertBefore(cssNode, childNodes[index]);\n    } else {\n      style.appendChild(cssNode);\n    }\n  }\n}\n\nfunction applyToTag(style, options, obj) {\n  var css = obj.css;\n  var media = obj.media;\n  var sourceMap = obj.sourceMap;\n\n  if (media) {\n    style.setAttribute('media', media);\n  } else {\n    style.removeAttribute('media');\n  }\n\n  if (sourceMap && btoa) {\n    css += \"\\n/*# sourceMappingURL=data:application/json;base64,\".concat(btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))), \" */\");\n  } // For old IE\n\n  /* istanbul ignore if  */\n\n\n  if (style.styleSheet) {\n    style.styleSheet.cssText = css;\n  } else {\n    while (style.firstChild) {\n      style.removeChild(style.firstChild);\n    }\n\n    style.appendChild(document.createTextNode(css));\n  }\n}\n\nvar singleton = null;\nvar singletonCounter = 0;\n\nfunction addStyle(obj, options) {\n  var style;\n  var update;\n  var remove;\n\n  if (options.singleton) {\n    var styleIndex = singletonCounter++;\n    style = singleton || (singleton = insertStyleElement(options));\n    update = applyToSingletonTag.bind(null, style, styleIndex, false);\n    remove = applyToSingletonTag.bind(null, style, styleIndex, true);\n  } else {\n    style = insertStyleElement(options);\n    update = applyToTag.bind(null, style, options);\n\n    remove = function remove() {\n      removeStyleElement(style);\n    };\n  }\n\n  update(obj);\n  return function updateStyle(newObj) {\n    if (newObj) {\n      if (newObj.css === obj.css && newObj.media === obj.media && newObj.sourceMap === obj.sourceMap) {\n        return;\n      }\n\n      update(obj = newObj);\n    } else {\n      remove();\n    }\n  };\n}\n\nmodule.exports = function (moduleId, list, options) {\n  options = options || {}; // Force single-tag solution on IE6-9, which has a hard limit on the # of <style>\n  // tags it will allow on a page\n\n  if (!options.singleton && typeof options.singleton !== 'boolean') {\n    options.singleton = isOldIE();\n  }\n\n  moduleId = options.base ? moduleId + options.base : moduleId;\n  list = list || [];\n\n  if (!stylesInDom[moduleId]) {\n    stylesInDom[moduleId] = [];\n  }\n\n  modulesToDom(moduleId, list, options);\n  return function update(newList) {\n    newList = newList || [];\n\n    if (Object.prototype.toString.call(newList) !== '[object Array]') {\n      return;\n    }\n\n    if (!stylesInDom[moduleId]) {\n      stylesInDom[moduleId] = [];\n    }\n\n    modulesToDom(moduleId, newList, options);\n\n    for (var j = newList.length; j < stylesInDom[moduleId].length; j++) {\n      stylesInDom[moduleId][j]();\n    }\n\n    stylesInDom[moduleId].length = newList.length;\n\n    if (stylesInDom[moduleId].length === 0) {\n      delete stylesInDom[moduleId];\n    }\n  };\n};","\"use strict\";\n\n/*\n  MIT License http://www.opensource.org/licenses/mit-license.php\n  Author Tobias Koppers @sokra\n*/\n// css base code, injected by the css-loader\n// eslint-disable-next-line func-names\nmodule.exports = function (useSourceMap) {\n  var list = []; // return the list of modules as css string\n\n  list.toString = function toString() {\n    return this.map(function (item) {\n      var content = cssWithMappingToString(item, useSourceMap);\n\n      if (item[2]) {\n        return \"@media \".concat(item[2], \" {\").concat(content, \"}\");\n      }\n\n      return content;\n    }).join('');\n  }; // import a list of modules into the list\n  // eslint-disable-next-line func-names\n\n\n  list.i = function (modules, mediaQuery) {\n    if (typeof modules === 'string') {\n      // eslint-disable-next-line no-param-reassign\n      modules = [[null, modules, '']];\n    }\n\n    for (var i = 0; i < modules.length; i++) {\n      var item = [].concat(modules[i]);\n\n      if (mediaQuery) {\n        if (!item[2]) {\n          item[2] = mediaQuery;\n        } else {\n          item[2] = \"\".concat(mediaQuery, \" and \").concat(item[2]);\n        }\n      }\n\n      list.push(item);\n    }\n  };\n\n  return list;\n};\n\nfunction cssWithMappingToString(item, useSourceMap) {\n  var content = item[1] || ''; // eslint-disable-next-line prefer-destructuring\n\n  var cssMapping = item[3];\n\n  if (!cssMapping) {\n    return content;\n  }\n\n  if (useSourceMap && typeof btoa === 'function') {\n    var sourceMapping = toComment(cssMapping);\n    var sourceURLs = cssMapping.sources.map(function (source) {\n      return \"/*# sourceURL=\".concat(cssMapping.sourceRoot || '').concat(source, \" */\");\n    });\n    return [content].concat(sourceURLs).concat([sourceMapping]).join('\\n');\n  }\n\n  return [content].join('\\n');\n} // Adapted from convert-source-map (MIT)\n\n\nfunction toComment(sourceMap) {\n  // eslint-disable-next-line no-undef\n  var base64 = btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap))));\n  var data = \"sourceMappingURL=data:application/json;charset=utf-8;base64,\".concat(base64);\n  return \"/*# \".concat(data, \" */\");\n}","\r\nimport { Sandbox as CommonSandbox } from '@motorman/core';\r\nimport { Core, } from '@motorman/vertices/core/core';\r\nimport { Utilities } from '@motorman/core/utilities';\r\nimport { Queue, Stack } from '@motorman/core/utilities/ds';\r\nimport { Subject } from '@motorman/core/utilities/patterns/behavioral/observer';\r\nimport { ISandbox } from './sandbox.interface';\r\n\r\n\r\ntype TElement = 'element';\r\ntype TAttribute = 'attribute';\r\ntype TText = 'text';\r\ntype TComment = 'comment';\r\ntype TPipe = 'pipe';\r\ntype TService = 'service';\r\ntype TMicroService = 'microservice';\r\ntype TIoT = 'iot';\r\ntype TPrecept = (Node&Element) | (Node&Attr) | (Node&Text) | (Node&Comment) | Utilities;\r\n\r\n\r\nclass TemplateSubject extends Subject {\r\n    private repository: Node&DocumentFragment = new DocumentFragment();\r\n    private digestion: Node&HTMLDivElement = document.createElement('div');\r\n    public template: string = '';\r\n    public content: NodeList|Node[] = [ ];\r\n    public events: string[] = [ ];\r\n    \r\n    constructor(private sandbox: ElementSandboxState, private core: Core) {\r\n        super('content');\r\n        var { repository, digestion } = this;\r\n        repository.appendChild(digestion);\r\n    }\r\n    \r\n    protected encodePropertyTokens(template: string): string {\r\n        return template.replace(/\\{([^{}]+)\\}=\"(.*)\"/img, function replace(whole, $1, $2) {\r\n            var codes = $1.split(''), codes = codes.map( c => c.charCodeAt(0) ), codes = codes.join('#');\r\n            return `{${codes}}=\"${$2}\"`;\r\n        });\r\n    }\r\n    \r\n    protected collectEventTypes(template: string): string {\r\n        var re = /\\(([^()]+)\\)=/img;\r\n        var matches = (template.match(re) || []).map( match => match.replace(re, '$1') );\r\n        this.events.length = 0;\r\n        this.events.push(...matches);\r\n        return template;\r\n    }\r\n    \r\n    /**\r\n     * @intention\r\n     *      Sets template and triggers update on all observers. This allows components to set a template from any source:\r\n     *          * import template from './x.component.html'; subject.set(template);  // compiletime\r\n     *          * http.get('template.html').then( (html) => subject.set(html) );  // runtime AJAX\r\n     *          * subject.set(Sandbox.data.occupee.innerHTML);  // runtime provided (slotless)\r\n     *          * subject.set(Sandbox.data.occupee.querySelector('template').content);  // runtime provided (slot)\r\n     *          * subject.set( utils.interpolate(template)(this) );  // runtime any interpolated\r\n     *      \r\n     */\r\n    set(template: string = '') {\r\n        var { sandbox, digestion } = this;\r\n        var { state } = sandbox;\r\n        var html = this.collectEventTypes(template)\r\n          , html = this.encodePropertyTokens(template)\r\n          , html = sandbox.utils.interpolate(html)(state.data)\r\n          ;\r\n        \r\n        digestion.innerHTML = html;\r\n        this.template = template;\r\n        this.observation = this.content = Array.prototype.slice.call(digestion.childNodes);\r\n        \r\n        return this;\r\n    }\r\n    \r\n}\r\nclass StateSubject extends Subject {\r\n    public states: Stack<any> = new Stack([]);\r\n    public get data(): any { return this.states.peek(); };\r\n    \r\n    constructor(private sandbox: ElementSandboxState, private core: Core) {\r\n        super('data');\r\n    }\r\n    \r\n    set(state: any = {}) {\r\n        this.states.push(state);\r\n        this.notify();\r\n        return this;\r\n    }\r\n    \r\n}\r\n\r\nclass MutationManager {  // https://developer.mozilla.org/pt-BR/docs/Web/API/MutationObserver\r\n    protected observer: MutationObserver = new MutationObserver( (r, o) => this.observe(r, o) );\r\n    protected bootstrap: any = this.core.configuration.bootstrap;\r\n    protected get node(): Node { return this.sandbox.target; }\r\n    protected get data(): any { return this.sandbox.data; }\r\n    protected get selector(): string { return this.data.selector; }\r\n    protected get instance(): string { return this.data.instance; }\r\n    \r\n    constructor(private sandbox: ElementSandboxState, private core: Core) {}\r\n    \r\n    private observe(changes: MutationRecord[], observer: MutationObserver) {\r\n        for(let mutation of changes) this[mutation.type](mutation);\r\n    }\r\n    \r\n    private trigger(type: string, mutation: MutationRecord) {\r\n        var { target, addedNodes, removedNodes } = mutation;\r\n        var nodes = { 'children:added': addedNodes, 'children:removed': removedNodes }[ type ];\r\n        var detail = { mutation, nodes };\r\n        var e = new CustomEvent(type, { detail });\r\n        \r\n        target.dispatchEvent(e);\r\n        for (let i = 0, len = nodes.length; i < len; i++) trigger(target, type, mutation, nodes[i]);\r\n        \r\n        function trigger(target: Node, type: string, mutation: MutationRecord, node: Node) {\r\n            var detail = { mutation, node, target };\r\n            var tChild = { 'children:added': 'node:added', 'children:removed': 'node:removed' }[ type ];\r\n            var tParent = { 'children:added': 'child:added', 'children:removed': 'child:removed' }[ type ];\r\n            var c = new CustomEvent(tChild, { detail });\r\n            var p = new CustomEvent(tParent, { detail });\r\n            \r\n            node.dispatchEvent(c);\r\n            target.dispatchEvent(p);\r\n        }\r\n        \r\n        return this;\r\n    }\r\n    \r\n    private ['childList'](mutation: MutationRecord) {\r\n        var { sandbox, node, bootstrap } = this;\r\n        var detail = { mutation }\r\n          , e = new CustomEvent('mutation:children', { detail })\r\n          ;\r\n        this.trigger('children:added', mutation);\r\n        this.trigger('children:removed', mutation);\r\n        if (mutation.addedNodes.length) bootstrap.parseNode( mutation.addedNodes[0] );  // ISSUE: sometimes triggers recursive bootstrap.parseNode() up parentElement chain\r\n    }\r\n    private ['attributes'](mutation: MutationRecord) {\r\n        var { sandbox, node, selector, instance } = this;\r\n        var { attributeName: name, target: element }: any&{ target: HTMLElement } = mutation;\r\n        var attr = element.getAttributeNode(name);\r\n        var detail = { mutation, node: attr, operation: 'update' }\r\n          , a = new CustomEvent('mutation', { detail })\r\n          , e = new CustomEvent('mutation:attribute', { detail })\r\n          ;\r\n        if ( !element.hasAttribute(name) ) detail.operation = 'delete';\r\n        if ( { 'null': true, 'undefined': true, '': true }[ mutation.oldValue ] ) detail.operation = 'create';\r\n        \r\n        element.dispatchEvent(e);\r\n        if ( { 'delete': true }[ detail.operation ]) element.dispatchEvent( new CustomEvent('node:removed', { detail }) );\r\n        if (!{ 'delete': true }[ detail.operation ]) attr.dispatchEvent(a);\r\n    }\r\n    private ['characterData'](mutation: MutationRecord) {\r\n        var { sandbox, node } = this;\r\n        // console.log('MutationManager - characterData', mutation);\r\n    }\r\n    private ['subtree'](mutation: MutationRecord) {\r\n        var { sandbox, node } = this;\r\n        // console.log('MutationManager - subtree', mutation);\r\n    }\r\n    \r\n    connect(config?: any) {\r\n        var { observer, node } = this;\r\n        var config = {\r\n            attributes: true,\r\n            childList: true,\r\n            characterData: true,\r\n            subtree: true,\r\n            attributeOldValue: true,\r\n            characterDataOldValue: true,\r\n            // attributeFilter: true,\r\n            ...config\r\n        };\r\n        \r\n        observer.observe(node, config);\r\n        \r\n        return this;\r\n    }\r\n    \r\n    disconnect() {\r\n        var { observer } = this;\r\n        observer.disconnect();\r\n        return this;\r\n    }\r\n    \r\n}\r\n\r\nclass EventManager {\r\n    private emit: (e: Event|CustomEvent) => any;\r\n    private $events: Map<string, any> = new Map();\r\n    get events(): string[] { return Array.from( this.$events.keys() ); }\r\n    set events(value: string[]) { this.$events.clear(); value.forEach( type => this.$events.set(type, type) ); }\r\n    get node(): Node { return this.sandbox.target; }\r\n    get proxy(): EventTarget { return EventTarget.prototype; }\r\n    // get proxy(): EventTarget { return this.node; }\r\n    get data(): any { return this.sandbox.data; }\r\n    get instance(): any { return this.data.instance; }\r\n    \r\n    constructor(private sandbox: ElementSandboxState, private core: Core) {}\r\n    \r\n    /**\r\n     * @param : source := EventTarget\r\n     *  *   EventTarget.prototype\r\n     *  *   Node (Element, Attr, etc)\r\n     * @usage : [Node].addEventListener('*', ({ detail: e }) => {...}, false);\r\n     */\r\n    private proxyEventTargetSource_IDEAL(source: EventTarget) {\r\n        var emit = source.dispatchEvent;  // obtain reference\r\n\r\n        function proxy(e: Event|CustomEvent) {\r\n            var { type } = e, any = new CustomEvent('*', { detail: e });  // use original event as detail\r\n            if (!{ '*': true }[ type ]) emit.call(this, any);  // only emit \"any\" if type is not any.type ('*')\r\n            return emit.call(this, e);\r\n        }\r\n\r\n        if ({ 'dispatchEvent': true }[ emit.name ]) source.dispatchEvent = proxy;  // attempt overwrite only if not already set (avoid rewrapping)\r\n        this.emit = emit;\r\n\r\n        return (source.dispatchEvent === proxy);  // indicate if its set after we try to\r\n    }\r\n    \r\n    connect(events: string[]) {\r\n        var { node, proxy } = this;\r\n        \r\n        this.events = events;\r\n        // this.events.forEach( (type) => node.addEventListener(type, this.handleAll, true) );\r\n        this.events.forEach( (type) => node.addEventListener(type, this.handleAll, true) );  // enforce `useCapture` to handle other events such as <img>.error (disallows bubble).\r\n        node.addEventListener('*', this.handleAny, true);  // `useCapture`\r\n        \r\n        return this;\r\n    }\r\n    \r\n    disconnect() {\r\n        var { node, proxy } = this;\r\n        \r\n        node.removeEventListener('*', this.handleAll);\r\n        proxy.dispatchEvent = this.emit;\r\n        \r\n        return this;\r\n    }\r\n    \r\n    private handleAll = (e: Event|CustomEvent) => {\r\n        // console.log( 'ALWAYS', e.bubbles, (e.currentTarget as Element).tagName, (e.target as Element).tagName, e.type, (e.target as Element).isSameNode(this.node) );\r\n        var { node } = this;\r\n        var { parentElement: parent } = node;\r\n        var { type, target, bubbles }: any&{ target: Element } = e;\r\n        var any = new CustomEvent('*', { bubbles: true, detail: e }), recursive = new Event(type, { bubbles: true });  // manually bubble\r\n        \r\n        // if ( !target.isSameNode(node) ) node.dispatchEvent(recursive);\r\n        if (node !== document) parent.dispatchEvent(recursive);  // retrigger event on parent to ensure Event Delegation. otherwise, parents with same handler will not be reached. use parent.isSameNode to prevent (type)=\"...\" from host being invoked\r\n        node.dispatchEvent(any);\r\n        \r\n        return true;  // always allow bubbling\r\n    };\r\n    \r\n    public handleAny = (any: CustomEvent<{ type: string, target: Element, e: Event }>) => {\r\n        if ( !any.detail.target.attributes[`(${any.detail.type})`] ) return true;\r\n        var { node, instance } = this;\r\n        var { detail: e } = any\r\n          , { type, target, currentTarget }: any&{ target: Element } = e\r\n          , property = `(${type})`\r\n          , attr = target.attributes[property]\r\n          , { name, value }: Attr = attr\r\n          ;\r\n        var re = /^(.+)\\((.*)\\)$/\r\n          , matches = value.match(re) || [ ]\r\n          , [ full, action, params ] = matches\r\n          ;\r\n        var has = ( new Function('ctx', `with (ctx) return !!ctx.${action}`) )(instance)\r\n          , invoke = new Function('ctx', '$event', `with (ctx) return ${value}`)\r\n          , result = true;\r\n          ;\r\n        \r\n        if (has) result = invoke(instance, e);\r\n        return result;\r\n    };\r\n    \r\n}\r\n\r\nclass Sandbox extends CommonSandbox implements ISandbox {\r\n    protected get core() { return this.details.core; }\r\n    public data: any = this.details.data;\r\n    public target: any = this.details.target;\r\n    public bootstrap: any = this.core.configuration.bootstrap;\r\n    \r\n    constructor(protected details: { type: string, target: any, data: any, core: Core }) {  // TODO: make first argument always target\r\n        super(details.core.configuration.director);\r\n    }\r\n    \r\n    init(data: any = {}): Sandbox {\r\n        // ~this.data~ this.config (change key name)\r\n        // this.data = data;\r\n        return this;\r\n    }\r\n    \r\n}\r\n\r\nclass NodeSandbox extends Sandbox {\r\n    \r\n    constructor(details: { type: string, target: Element|Attr|Text|Comment, data: any, core: Core }) {\r\n        super(details);\r\n    }\r\n    \r\n    protected handleNodeRemoved(e: CustomEvent) {\r\n        console.warn('TODO (SUPER): core.stop(e.target).destroy(e.target)', e);\r\n    }\r\n    \r\n}\r\n\r\n\r\n\r\nclass ElementProxy {\r\n    \r\n    constructor(private sandbox: Sandbox, private target: Element, private core: Core) {}\r\n    \r\n    get(target: Element, key: string|number|symbol, receiver: ElementProxy): any {\r\n        var result: any = Reflect.get(target, key, receiver);\r\n        return result;\r\n    }\r\n    \r\n}\r\n\r\nclass NamedNodeMapProxy {\r\n    \r\n    constructor(private sandbox: Sandbox, private target: NamedNodeMap, private core: Core) {}\r\n    \r\n    get(target: NamedNodeMap, key: string|number|symbol, receiver: NamedNodeMapProxy): Attr {\r\n        var attr: Attr = Reflect.get(target, key, receiver);\r\n        var handler: AttributeProxy = new AttributeProxy(this.sandbox, attr, this.core);\r\n        var result: Attr = new Proxy(attr, handler);\r\n        \r\n        return result;\r\n    }\r\n    \r\n}\r\n\r\nclass AttributeProxy implements ProxyHandler<Attr> {\r\n    \r\n    constructor(private sandbox: Sandbox, private target: Attr, private core: Core) {}\r\n    \r\n    get(target: Attr, key: string|number|symbol, receiver: AttributeProxy): any {\r\n        var result: any = Reflect.get(target, key, receiver);\r\n        return result;\r\n    }\r\n    \r\n    set(target: Attr, key: string|number|symbol, value: any, receiver: AttributeProxy): any {\r\n        var current = target[key];\r\n        var result: any = Reflect.set(target, key, value, receiver);\r\n        var changed = (current !== result);\r\n        if ({ value: true, nodeValue: true }[ key ] && changed) this.trigger('changed', { oldValue: current });\r\n        \r\n        return result;\r\n    }\r\n    \r\n    deleteProperty(target: Attr, key: string|number|symbol): any {\r\n        var current = target[key];\r\n        var result: any = Reflect.deleteProperty(target, key);\r\n        var changed = (current !== result);\r\n        if ({ value: true, nodeValue: true }[ key ] && changed) this.trigger('deleted', { oldValue: current });\r\n        \r\n        return result;\r\n    }\r\n    \r\n    trigger(trigger: string, data: { oldValue: any, newValue?: any }) {\r\n        var { target } = this;\r\n        var { name, value, ownerElement } = target;\r\n        var operation = { 'changed': 'change', 'deleted': 'delete' }[ trigger ];\r\n        var type = { 'changed': 'attribute:changed', 'deleted': 'attribute:deleted' }[ trigger ];\r\n        var spec = `${name}:${trigger}`;\r\n        var detail = { ...data, target, ownerElement, name, value, old: data.oldValue, operation };\r\n        var t = new CustomEvent(type, { detail });  // example: ('attribute:changed', detail: {...})\r\n        var m = new CustomEvent(spec, { detail });  // example: ('active:changed', detail: { ..., name: 'active', value: 'true', oldValue: 'false', ..., })\r\n        \r\n        ownerElement.dispatchEvent(t);  // dispatch generic\r\n        ownerElement.dispatchEvent(m);  // dispatch specific\r\n        \r\n        return this;\r\n    }\r\n    \r\n}\r\n\r\nclass ElementSandboxState extends NodeSandbox implements ISandbox {\r\n    protected delegations: EventManager = new EventManager(this, this.core);\r\n    protected mutations: MutationManager = new MutationManager(this, this.core);\r\n    public content: TemplateSubject = new TemplateSubject(this, this.core);\r\n    public state: StateSubject = new StateSubject(this, this.core);\r\n    public node: Element = this.target;\r\n    public element: Element = new Proxy( this.target, new ElementProxy(this, this.target, this.core) );\r\n    public attributes: NamedNodeMap = this.target.attributes;\r\n    public attrs: NamedNodeMap = new Proxy( this.attributes, new NamedNodeMapProxy(this, this.target.attributes, this.core) );\r\n    public $classes: DOMTokenList = this.target.classList;\r\n    public $dataset: DOMStringMap = (this.target as HTMLElement).dataset;\r\n    \r\n    constructor(details: { type: 'element', target: Element, data: any, core: Core }) {\r\n        super(details);\r\n        var { target, data } = details;\r\n        \r\n        this.content.attach({ update: (state) => this.handleTemplateUpdate(state) });  // TODO: detatch is broken. use Command Pattern.\r\n        this.state.attach({ update: (state) => this.handleStateUpdate(state) });  // TODO: detatch is broken. use Command Pattern.\r\n        this.mutations.connect();\r\n        target.addEventListener('node:removed', this.handleNodeRemoved, false);\r\n        target.addEventListener('children:removed', this.handleChildrenRemoved, false);\r\n        target.addEventListener('child:removed', this.handleChildRemoved, false);\r\n        \r\n        return this;\r\n    }\r\n    \r\n    v(root: Node): Node {\r\n        var { bootstrap } = this;\r\n        var result = bootstrap.parseNode(root);\r\n        return result;\r\n    }\r\n    \r\n    handleStateUpdate(state: any) {\r\n        this.content.set(this.content.template);  // trigger full template reparse\r\n    }\r\n    \r\n    handleTemplateUpdate(state: NamedNodeMap) {  // Chain of Responsibility Pattern\r\n        var { content, mutations, delegations, target } = this;\r\n        \r\n        delegations.connect(content.events);  // listen for all events before children begin to load\r\n        mutations.disconnect();  // reconnect after to avoid mutation events\r\n        (target as Element).innerHTML = '';  // clear current contents\r\n        for (let child of state) (target as Element).appendChild(child);\r\n        mutations.connect();  // reconnect after to avoid mutation events\r\n    }\r\n    \r\n    protected handleNodeRemoved = (e: CustomEvent) => {\r\n        console.warn('TODO (ELEMENT): handle target+instance destroy', e);\r\n        super.handleNodeRemoved(e);\r\n    }\r\n    \r\n    protected handleChildrenRemoved = (e: CustomEvent) => {}\r\n    \r\n    protected handleChildRemoved = (e: CustomEvent) => {}\r\n    \r\n}\r\n\r\nclass AttributeSandboxState extends NodeSandbox implements ISandbox {\r\n    public node: Attr = this.target;\r\n    public attribute: Attr = new Proxy( this.target, new AttributeProxy(this, this.target, this.core) );\r\n    public element: Element = this.target.ownerElement;\r\n    public owner: any = this.data.owner;\r\n    \r\n    constructor(details: { type: 'attribute', target: Node&Attr, data: any, core: Core }) {\r\n        super(details);\r\n        var { target } = details;\r\n        target.ownerElement.addEventListener('node:removed', this.handleNodeRemoved, false);\r\n        return this;\r\n    }\r\n    \r\n    protected handleNodeRemoved = (e: CustomEvent) => {\r\n        console.warn('TODO (ATTRIBUTE): handle target+instance destroy', e);\r\n        super.handleNodeRemoved(e);\r\n    }\r\n    \r\n}\r\n\r\n\r\nclass TextSandboxState extends NodeSandbox {\r\n    \r\n    constructor(details: { type: 'text', target: Text, data: any, core: Core }) {\r\n        super(details);\r\n    }\r\n    \r\n}\r\nclass CommentSandboxState extends NodeSandbox {\r\n    \r\n    constructor(details: { type: 'comment', target: Comment, data: any, core: Core }) {\r\n        super(details);\r\n    }\r\n    \r\n}\r\n\r\nclass PipeSandboxState {}\r\n\r\nclass ServiceSandboxState extends Sandbox implements ISandbox {\r\n    private get config() { return this.core.configuration; }\r\n    // private get director() { return this.config.director; }\r\n    // public get channels() { return this.director.channels; }\r\n    \r\n    constructor(details: { type: 'service', target: Utilities, data: any, core: Core }) {\r\n        super(details);\r\n        return this;\r\n    }\r\n    \r\n}\r\n\r\nclass MicroserviceSandboxState {}\r\nclass IoTSandboxState {}\r\n\r\n\r\nfunction select(details: { type, target: any, data: any, core: Core }): any {\r\n    var { type, target, data, core } = details;\r\n    var Sandbox = {\r\n        ['element']: ElementSandboxState,\r\n        ['attribute']: AttributeSandboxState,\r\n        ['text']: TextSandboxState,\r\n        ['comment']: CommentSandboxState,\r\n        ['pipe']: PipeSandboxState,\r\n        ['service']: ServiceSandboxState,\r\n        ['microservice']: MicroserviceSandboxState,\r\n        ['iot']: IoTSandboxState,\r\n    }[ type ] as any;\r\n    var sandbox = new Sandbox(details);\r\n    \r\n    return sandbox;\r\n}\r\n\r\n\r\nclass SandboxContext extends Sandbox implements ISandbox {\r\n    public element: Element;  // stub\r\n    public content: TemplateSubject;  // stub\r\n    \r\n    constructor(details: { type, target: any, data: any, core: Core }) {\r\n        super(details);\r\n        var sandbox = select(details);\r\n        return sandbox;\r\n    }\r\n    \r\n}\r\n\r\n\r\nexport {\r\n    SandboxContext as Sandbox,\r\n    ServiceSandboxState as ServiceSandbox,\r\n    ElementSandboxState as NodeSandbox,\r\n};\r\n","\r\nimport { Core, Sandbox } from '@motorman/vertices/core';\r\nimport { ChainOfResponsibility } from '@motorman/core/utilities/patterns/behavioral';\r\nimport { Utilities, Deferred } from '@motorman/core/utilities';\r\n\r\nvar utils = new Utilities();\r\n\r\ntype IMetadata = { type: string, selector: string, Class: any, Sandbox: typeof Sandbox };\r\ntype IReferenceInstance = IMetadata & {\r\n    target: Node | Utilities,\r\n    instance: any,\r\n    sandbox: Sandbox,\r\n    owner?: any,\r\n    parent?: any,\r\n    occupants?: Node[],\r\n    occupee?: Node,\r\n    $occupants?: Map<string, Node>,\r\n};\r\n\r\nclass Bootstrap {\r\n    private core: Core = null;  // assume !null if pEnvironment.[[status]] !== pending\r\n    public dEnvironment: Deferred<any> = new Deferred();  // resolver must set this.core before invoking resolve()\r\n    public pEnvironment: Promise<any> = this.dEnvironment.promise;\r\n    get modules() { if (this.core) return this.core.modules; else return null; }\r\n    protected $processed: Map<Node, any> = new Map();\r\n    protected pipeNodeHandler = (handler: Function) => (e: CustomEvent) => handler.call(this, e.detail, e);\r\n    protected nodeProcessors: ChainOfResponsibility = new ChainOfResponsibility({}, [\r\n        { respond: this.pipeNodeHandler(this.processElementNode) },\r\n        { respond: this.pipeNodeHandler(this.processTextNode) },\r\n        { respond: this.pipeNodeHandler(this.processCommentNode) },\r\n    ]);\r\n    \r\n    constructor(options: any = {}) {\r\n        var { pEnvironment } = this;\r\n        \r\n        pEnvironment\r\n            // .then( (env) => this.bootstrapDirector(env) )\r\n            .then( (env) => this.bootstrapServices(env) )\r\n            // .then( (env) => this.bootstrapRouters(env) )  // TODO!\r\n            .then( (env) => this.parseNode(env) )\r\n            ;\r\n        return this;\r\n    }\r\n    \r\n    execute(core: Core): Node&Document {\r\n        var { configuration } = core;\r\n        var { environment } = configuration;\r\n        \r\n        this.core = core;\r\n        this.dEnvironment.resolve(environment);\r\n        \r\n        return environment;\r\n    }\r\n    \r\n    bootstrapServices(env: Document): Node&Document {\r\n        var { core } = this;\r\n        var { modules } = core;\r\n        var { service: $services = new Map() } = modules;\r\n        \r\n        for (let [key, val] of $services) this.bootstrapService(val, key, $services);\r\n        \r\n        return env;\r\n    }\r\n    bootstrapService(metadata: IMetadata, key: string, $services: Map<string, IMetadata>) {\r\n        var { core } = this;\r\n        var { Sandbox, Class, selector } = metadata;\r\n        let data: IReferenceInstance = { target: utils, instance: null, selector, sandbox: null, ...metadata };\r\n        let sandbox = new Sandbox({ type: 'service', target: utils, data, core });\r\n        let instance = new Class(sandbox);\r\n        data.instance = instance;  // is there a better way to do this using Hoisting?\r\n        data.sandbox = sandbox;  // is there a better way to do this using Hoisting?\r\n    }\r\n    \r\n    bootstrapRouters(env: Document) {\r\n        var { core } = this;\r\n        var { modules, configuration } = core;\r\n        var { routers, RouterSandbox } = configuration;  // ?\r\n        var { router: $routers = new Map() } = modules;  // ?\r\n        \r\n        for (let [key, val] of $routers) this.bootstrapRouter(val, key, $routers);\r\n        \r\n        return env;\r\n    }\r\n    bootstrapRouter(metadata: IMetadata, key: string, $services: Map<string, IMetadata>) {\r\n        var { core } = this;\r\n        var { Sandbox, Class, selector } = metadata;\r\n        let data: IReferenceInstance = { target: utils, instance: null, selector, sandbox: null, ...metadata };\r\n        let sandbox = new Sandbox({ type: 'router', target: utils, data, core });\r\n        let instance = new Class(sandbox);\r\n        data.instance = instance;  // is there a better way to do this using Hoisting?\r\n        data.sandbox = sandbox;  // is there a better way to do this using Hoisting?\r\n    }\r\n    \r\n    parseNode(node: Node): Node {\r\n        if (!node) return node;\r\n        if ( this.$processed.has(node) ) return node;\r\n        var { nodeProcessors: cor } = this;\r\n        var e = new CustomEvent('domnodeprocess', { detail: <any>node })\r\n            , e = cor.respond(e)\r\n            , { detail: result = {} } = e\r\n            ;\r\n        var { isConnected, parentNode: parent, previousSibling: previous, nextSibling: next, firstChild: child } = result;\r\n        \r\n        // RECURSION\r\n        // if (result !== node) return this.parseNode(result);  // reparse. assume replacement occurred. do not continue for next or child.\r\n        if (child) this.parseNode(child);  // TCO???\r\n        if (next) this.parseNode(next);  // TCO???\r\n        this.$processed.set(node, node);  // allow full processing of children before setting as processed. !ALERT! watch for memory leaks!\r\n        \r\n        return node;  // result can still equal node\r\n    }\r\n        \r\n    private decorateElement(node: Node&Element, metadata: IMetadata, selector: string, $elements: Map<string, IMetadata>) {\r\n        if ( !node.matches(selector) ) return;\r\n        var { core } = this;\r\n        var { $instances, $targets } = core;\r\n        var { Class, Sandbox } = metadata;\r\n        var { nodeType, childNodes } = node;\r\n        var occupants = Array.prototype.slice.call(childNodes);\r\n        // var occupee = new DocumentFragment();\r\n        var occupee = document.createElement('div');\r\n        var $occupants = new Map();\r\n        \r\n        function addOccupant($occupants: Map<string, Node[]>, occupee: Element, schema: Node&HTMLSlotElement) {\r\n            var { slot: name = '' } = schema, node = schema.cloneNode(true);\r\n            if ( !$occupants.has(name) ) $occupants.set(name, [ ]);\r\n            // console.log('<?>', name);\r\n            $occupants.get(name).push(node);\r\n            occupee.appendChild(node);\r\n        }\r\n        \r\n        occupants.forEach( c => addOccupant($occupants, occupee, c) );\r\n        // while (node.lastChild) node.firstChild.remove();  // clear from original parent to obviate child.cloneNode and maintain same object in Heap\r\n        let owner = this.getOwnerInstance(node), parentData: IReferenceInstance = $instances.get(owner);\r\n        // console.log('-->', node.tagName, owner);\r\n        let data: IReferenceInstance = { selector, target: node, instance: null, owner, sandbox: null, occupants, occupee, $occupants, ...metadata };\r\n        if ( $instances.has(owner) ) data.parent = { occupants: parentData.occupants, $occupants: parentData.$occupants, occupee: parentData.occupee, Class: parentData.Class };\r\n        let sandbox = new Sandbox({ type: 'element', target: node, data, core });  // must be constructed after node is emptied to avoid mutation events.\r\n        let instance = new Class(sandbox);\r\n        data.instance = instance;  // is there a better way to do this using Hoisting?\r\n        data.sandbox = sandbox;  // is there a better way to do this using Hoisting?\r\n        // occupants.forEach( c => addOccupant($occupants, occupee, c) );\r\n        \r\n        $targets.set(node, data);\r\n        $instances.set(instance, data);\r\n    }\r\n    \r\n    private processElementNode(node: Node&Element): Node&Element {  // Node.ELEMENT_NODE === 1\r\n        if ( !{ '1': true }[ node.nodeType ] ) return node;  // https://developer.mozilla.org/en-US/docs/Web/API/Node/nodeType\r\n        var { modules = {} } = this;\r\n        var { element: $elements = new Map() } = modules;\r\n        var { attributes } = node;\r\n        var attribute = attributes[0];\r\n        \r\n        for (let [key, val] of $elements) this.decorateElement(node, val, key, $elements);\r\n        if (attribute) this.processAttributeNode(attribute, ...node.attributes);\r\n        \r\n        return node;\r\n    }\r\n    \r\n    private processAttributeNode(node?: Node&Attr, ...more: (Node&Attr)[]): Node&Attr {\r\n        if ( !node ) return node;\r\n        if ( !{ [Node.ATTRIBUTE_NODE]: true }[ node.nodeType ] ) return node;\r\n        if ( !this.modules.attribute ) return node;\r\n        var { core, modules = {} } = this;\r\n        var { $targets, $instances } = core;\r\n        var { attribute: $attributes = new Map() } = modules;\r\n        var { name, value } = node, metadata = $attributes.get(name);\r\n        var reBinding = /^\\[.+\\]$/\r\n          , reReporter = /^{[^{}]*}$/\r\n          , isBinding = reBinding.test(name)\r\n          , isReporter = reReporter.test(name)\r\n          , hasBinding = $attributes.has('[*]')\r\n          , hasReporter = $attributes.has('{*}')\r\n          , bindable = (isBinding && hasBinding)\r\n          , reportable = (isReporter && hasReporter)\r\n          ;\r\n        \r\n        if ( !$attributes.has(name) && !bindable && !reportable ) return this.processAttributeNode(...more);\r\n        if (bindable) metadata = $attributes.get('[*]');\r\n        if (reportable) metadata = $attributes.get('{*}');\r\n        \r\n        // console.log('------>', node.ownerElement);\r\n        let { Sandbox, Class, selector }: IMetadata = metadata;\r\n        let owner = this.getOwnerInstance(node.ownerElement), parentData: IReferenceInstance = $instances.get(owner);\r\n        let data: IReferenceInstance = { target: node, instance: null, selector, sandbox: null, value, owner, ...metadata };\r\n        if ( $instances.has(owner) ) data.parent = { occupants: parentData.occupants, $occupants: parentData.$occupants, occupee: parentData.occupee, Class: parentData.Class };\r\n        let sandbox = new Sandbox({ type: 'attribute', target: node, data, core });  // must be constructed after node is emptied to avoid mutation events.\r\n        let instance = new Class(sandbox);\r\n        data.instance = instance;  // is there a better way to do this using Hoisting?\r\n        data.sandbox = sandbox;  // is there a better way to do this using Hoisting?\r\n        $targets.set(node, data);\r\n        $instances.set(instance, data);\r\n        \r\n        if ( !more.length ) return node;\r\n        return this.processAttributeNode(...more);\r\n    }\r\n    \r\n    private processTextNode(node: Node&Text): Node&Text {  // Node.TEXT_NODE === 3\r\n        if (!{ '3': true }[ node.nodeType ]) return node;  // https://developer.mozilla.org/en-US/docs/Web/API/Node/nodeType\r\n        if ( !this.modules.text ) return node;\r\n        var { modules } = this;\r\n        var { text: $texts }: { text: Map<RegExp, IMetadata> } = modules;\r\n        \r\n        for (let [key, val] of $texts) this.initializeInstance(node, val, key, $texts);\r\n        \r\n        return node;\r\n    }\r\n    \r\n    private processCommentNode(node: Node&Comment): Node&Comment {  // Node.COMMENT_NODE === 8\r\n        if (!{ '8': true }[ node.nodeType ]) return node;  // https://developer.mozilla.org/en-US/docs/Web/API/Node/nodeType\r\n        if ( !this.modules.comment ) return node;\r\n        var { modules } = this;\r\n        var { comment: $comments }: { comment: Map<RegExp, IMetadata> } = modules;\r\n        \r\n        for (let [key, val] of $comments) this.initializeInstance(node, val, key, $comments);\r\n        \r\n        return node;\r\n    }\r\n    \r\n    private getOwnerInstance(node: Element): any {\r\n        if ( !this.core.$targets.has(node) && !node.parentElement ) return null;\r\n        if ( !this.core.$targets.has(node) ) return this.getOwnerInstance(node.parentElement);\r\n        var { core } = this;\r\n        var { $targets } = core, metadata = $targets.get(node);\r\n        var { instance } = metadata;\r\n        \r\n        if (node && (node as Element).id && (node as Element).id.toString() === '0') console.log('<N>', this.core.$targets.has(node), node.parentNode );\r\n        return instance;\r\n    }\r\n    \r\n    private initializeInstance(node: Node&(Text|Comment), metadata: IMetadata, key: RegExp, $text: Map<RegExp, IMetadata>) {\r\n        var { core } = this;\r\n        var { $instances, $targets } = core;\r\n        var { nodeType, nodeValue } = node;\r\n        var { Sandbox, Class, selector } = metadata;\r\n        \r\n        if ( !key.test(nodeValue) && !{ '#text': true }[ selector ] ) return;\r\n        let owner = this.getOwnerInstance(node.parentElement);\r\n        let type = { [Node.TEXT_NODE]: 'text', [Node.COMMENT_NODE]: 'comment' }[ nodeType ];\r\n        let data: IReferenceInstance = { target: node, instance: null, selector, sandbox: null, owner, ...metadata };\r\n        let sandbox = new Sandbox({ type, target: node, data, core });\r\n        let instance = new Class(sandbox);\r\n        \r\n        data.instance = instance;  // is there a better way to do this using Hoisting?\r\n        data.sandbox = sandbox;  // is there a better way to do this using Hoisting?\r\n        $instances.set(instance, data);\r\n        $targets.set(node, data);\r\n    }\r\n    \r\n}\r\n\r\nexport { Bootstrap };\r\n","\r\n/**\r\n * @name:\r\n * @intention\r\n *  * \r\n */\r\nclass Dictionary extends Map {\r\n        \r\n    constructor(map) {\r\n        super();\r\n        return this;\r\n    }\r\n    \r\n    private serialize(object) {\r\n        var json = JSON.stringify(object);\r\n        return json;\r\n    }\r\n    private deserialize(json) {\r\n        var object = JSON.parse(json);\r\n        return object;\r\n    }\r\n    private copy(object) {\r\n        var json = this.serialize(object), object = this.deserialize(json);\r\n        return object;\r\n    }\r\n    private static fromMap(map: any) {\r\n        var keys = Object.keys(map), pairs = keys.reduce( pair.bind(this, map), [] );\r\n        \r\n        function pair(map, pairs, key, i, keys) {\r\n            var value = map[key], pair = [ key, value ];\r\n            pairs.push(pair);\r\n            return pairs;\r\n        }\r\n        \r\n        return pairs;\r\n    }\r\n    private toMap(entries) {\r\n        var map = { };\r\n        for (let [ key, value ] of entries) map[key] = value;\r\n        return map;\r\n    }\r\n    \r\n    toJSON() {\r\n        return this.valueOf();\r\n    }\r\n    toString() {\r\n        var json = this.serialize( this.valueOf() );\r\n        return json;\r\n    }\r\n    valueOf() {\r\n        return this.toMap( this.entries() );\r\n    }\r\n    \r\n}\r\n\r\nexport { Dictionary };\r\n","\r\n/**\r\n * @name: Stack\r\n * @intention\r\n *  * LIFO (Last-In, First-Out)\r\n */\r\nclass Stack<T> {\r\n    private data: T[] = [ ];\r\n    get length() { return this.size(); }\r\n    get index() { return (this.length - 1); }\r\n    \r\n    constructor(data: T[] = []) {\r\n        this.clear();\r\n        this.data = [ ...data ];\r\n        return this;\r\n    }\r\n    \r\n    private serialize(object) {\r\n        var json = JSON.stringify(object);\r\n        return json;\r\n    }\r\n    private deserialize(json) {\r\n        var object = JSON.parse(json);\r\n        return object;\r\n    }\r\n    private copy(object) {\r\n        var json = this.serialize(object), object = this.deserialize(json);\r\n        return object;\r\n    }\r\n    \r\n    push(value: T): Stack<T> {\r\n        this.data.push(value);\r\n        return this;\r\n    }\r\n    pop(): T {\r\n        var value = this.data.pop();\r\n        return value;\r\n    }\r\n    peek(): T {\r\n        var value = this.data[this.index];\r\n        return value;\r\n    }\r\n    clear(): Stack<T> {\r\n        this.data.length = 0;\r\n        return this;\r\n    }\r\n    size(): number {\r\n        var value = this.data.length;\r\n        return value;\r\n    }\r\n    isEmpty(): boolean {\r\n        var is = !this.size();\r\n        return is;\r\n    }\r\n    \r\n    toJSON(): T[] {\r\n        return this.valueOf();\r\n    }\r\n    toString(): string {\r\n        var json = this.serialize( this.valueOf() );\r\n        return json;\r\n    }\r\n    valueOf(): T[] {\r\n        return this.data.slice(0);\r\n    }\r\n    \r\n}\r\n\r\nexport { Stack };\r\n","\r\n/**\r\n * @name: Queue\r\n * @intention\r\n *  * FIFO (First-In, First-Out)\r\n */\r\nclass Queue<T> {\r\n    private data: T[] = [ ];\r\n    get length() { return this.size(); }\r\n    get index() { return 0; }\r\n    \r\n    constructor(data: T[] = []) {\r\n        this.clear();\r\n        this.data = [ ...data ];\r\n        return this;\r\n    }\r\n    \r\n    private serialize(object) {\r\n        var json = JSON.stringify(object);\r\n        return json;\r\n    }\r\n    private deserialize(json) {\r\n        var object = JSON.parse(json);\r\n        return object;\r\n    }\r\n    private copy(object) {\r\n        var json = this.serialize(object), object = this.deserialize(json);\r\n        return object;\r\n    }\r\n    \r\n    enqueue(value) {\r\n        this.data.push(value);\r\n        return this;\r\n    }\r\n    dequeue() {\r\n        var value = this.data.shift();\r\n        return value;\r\n    }\r\n    front() {\r\n        var value = this.data[this.index];\r\n        return value;\r\n    }\r\n    clear() {\r\n        this.data.length = 0;\r\n        return this;\r\n    }\r\n    size() {\r\n        var value = this.data.length;\r\n        return value;\r\n    }\r\n    isEmpty() {\r\n        var is = !this.size();\r\n        return is;\r\n    }\r\n    \r\n    toJSON() {\r\n        return this.valueOf();\r\n    }\r\n    toString() {\r\n        var json = this.serialize( this.valueOf() );\r\n        return json;\r\n    }\r\n    valueOf() {\r\n        return this.data.slice(0);\r\n    }\r\n    \r\n}\r\n\r\nexport { Queue };\r\n","\r\nexport { Dictionary } from './dictionary';\r\nexport { Stack } from './stack';\r\nexport { Queue } from './queue';\r\nexport { LinkedList } from './linked-list';\r\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","/** PURE_IMPORTS_START  PURE_IMPORTS_END */\nexport function isFunction(x) {\n    return typeof x === 'function';\n}\n//# sourceMappingURL=isFunction.js.map\n","/** PURE_IMPORTS_START  PURE_IMPORTS_END */\nvar _enable_super_gross_mode_that_will_cause_bad_things = false;\nexport var config = {\n    Promise: undefined,\n    set useDeprecatedSynchronousErrorHandling(value) {\n        if (value) {\n            var error = /*@__PURE__*/ new Error();\n            /*@__PURE__*/ console.warn('DEPRECATED! RxJS was set to use deprecated synchronous error handling behavior by code at: \\n' + error.stack);\n        }\n        else if (_enable_super_gross_mode_that_will_cause_bad_things) {\n            /*@__PURE__*/ console.log('RxJS: Back to a better error behavior. Thank you. <3');\n        }\n        _enable_super_gross_mode_that_will_cause_bad_things = value;\n    },\n    get useDeprecatedSynchronousErrorHandling() {\n        return _enable_super_gross_mode_that_will_cause_bad_things;\n    },\n};\n//# sourceMappingURL=config.js.map\n","/** PURE_IMPORTS_START  PURE_IMPORTS_END */\nexport function hostReportError(err) {\n    setTimeout(function () { throw err; }, 0);\n}\n//# sourceMappingURL=hostReportError.js.map\n","/** PURE_IMPORTS_START _config,_util_hostReportError PURE_IMPORTS_END */\nimport { config } from './config';\nimport { hostReportError } from './util/hostReportError';\nexport var empty = {\n    closed: true,\n    next: function (value) { },\n    error: function (err) {\n        if (config.useDeprecatedSynchronousErrorHandling) {\n            throw err;\n        }\n        else {\n            hostReportError(err);\n        }\n    },\n    complete: function () { }\n};\n//# sourceMappingURL=Observer.js.map\n","/** PURE_IMPORTS_START  PURE_IMPORTS_END */\nexport var isArray = /*@__PURE__*/ (function () { return Array.isArray || (function (x) { return x && typeof x.length === 'number'; }); })();\n//# sourceMappingURL=isArray.js.map\n","/** PURE_IMPORTS_START  PURE_IMPORTS_END */\nvar UnsubscriptionErrorImpl = /*@__PURE__*/ (function () {\n    function UnsubscriptionErrorImpl(errors) {\n        Error.call(this);\n        this.message = errors ?\n            errors.length + \" errors occurred during unsubscription:\\n\" + errors.map(function (err, i) { return i + 1 + \") \" + err.toString(); }).join('\\n  ') : '';\n        this.name = 'UnsubscriptionError';\n        this.errors = errors;\n        return this;\n    }\n    UnsubscriptionErrorImpl.prototype = /*@__PURE__*/ Object.create(Error.prototype);\n    return UnsubscriptionErrorImpl;\n})();\nexport var UnsubscriptionError = UnsubscriptionErrorImpl;\n//# sourceMappingURL=UnsubscriptionError.js.map\n","/** PURE_IMPORTS_START _util_isArray,_util_isObject,_util_isFunction,_util_UnsubscriptionError PURE_IMPORTS_END */\nimport { isArray } from './util/isArray';\nimport { isObject } from './util/isObject';\nimport { isFunction } from './util/isFunction';\nimport { UnsubscriptionError } from './util/UnsubscriptionError';\nvar Subscription = /*@__PURE__*/ (function () {\n    function Subscription(unsubscribe) {\n        this.closed = false;\n        this._parentOrParents = null;\n        this._subscriptions = null;\n        if (unsubscribe) {\n            this._unsubscribe = unsubscribe;\n        }\n    }\n    Subscription.prototype.unsubscribe = function () {\n        var errors;\n        if (this.closed) {\n            return;\n        }\n        var _a = this, _parentOrParents = _a._parentOrParents, _unsubscribe = _a._unsubscribe, _subscriptions = _a._subscriptions;\n        this.closed = true;\n        this._parentOrParents = null;\n        this._subscriptions = null;\n        if (_parentOrParents instanceof Subscription) {\n            _parentOrParents.remove(this);\n        }\n        else if (_parentOrParents !== null) {\n            for (var index = 0; index < _parentOrParents.length; ++index) {\n                var parent_1 = _parentOrParents[index];\n                parent_1.remove(this);\n            }\n        }\n        if (isFunction(_unsubscribe)) {\n            try {\n                _unsubscribe.call(this);\n            }\n            catch (e) {\n                errors = e instanceof UnsubscriptionError ? flattenUnsubscriptionErrors(e.errors) : [e];\n            }\n        }\n        if (isArray(_subscriptions)) {\n            var index = -1;\n            var len = _subscriptions.length;\n            while (++index < len) {\n                var sub = _subscriptions[index];\n                if (isObject(sub)) {\n                    try {\n                        sub.unsubscribe();\n                    }\n                    catch (e) {\n                        errors = errors || [];\n                        if (e instanceof UnsubscriptionError) {\n                            errors = errors.concat(flattenUnsubscriptionErrors(e.errors));\n                        }\n                        else {\n                            errors.push(e);\n                        }\n                    }\n                }\n            }\n        }\n        if (errors) {\n            throw new UnsubscriptionError(errors);\n        }\n    };\n    Subscription.prototype.add = function (teardown) {\n        var subscription = teardown;\n        if (!teardown) {\n            return Subscription.EMPTY;\n        }\n        switch (typeof teardown) {\n            case 'function':\n                subscription = new Subscription(teardown);\n            case 'object':\n                if (subscription === this || subscription.closed || typeof subscription.unsubscribe !== 'function') {\n                    return subscription;\n                }\n                else if (this.closed) {\n                    subscription.unsubscribe();\n                    return subscription;\n                }\n                else if (!(subscription instanceof Subscription)) {\n                    var tmp = subscription;\n                    subscription = new Subscription();\n                    subscription._subscriptions = [tmp];\n                }\n                break;\n            default: {\n                throw new Error('unrecognized teardown ' + teardown + ' added to Subscription.');\n            }\n        }\n        var _parentOrParents = subscription._parentOrParents;\n        if (_parentOrParents === null) {\n            subscription._parentOrParents = this;\n        }\n        else if (_parentOrParents instanceof Subscription) {\n            if (_parentOrParents === this) {\n                return subscription;\n            }\n            subscription._parentOrParents = [_parentOrParents, this];\n        }\n        else if (_parentOrParents.indexOf(this) === -1) {\n            _parentOrParents.push(this);\n        }\n        else {\n            return subscription;\n        }\n        var subscriptions = this._subscriptions;\n        if (subscriptions === null) {\n            this._subscriptions = [subscription];\n        }\n        else {\n            subscriptions.push(subscription);\n        }\n        return subscription;\n    };\n    Subscription.prototype.remove = function (subscription) {\n        var subscriptions = this._subscriptions;\n        if (subscriptions) {\n            var subscriptionIndex = subscriptions.indexOf(subscription);\n            if (subscriptionIndex !== -1) {\n                subscriptions.splice(subscriptionIndex, 1);\n            }\n        }\n    };\n    Subscription.EMPTY = (function (empty) {\n        empty.closed = true;\n        return empty;\n    }(new Subscription()));\n    return Subscription;\n}());\nexport { Subscription };\nfunction flattenUnsubscriptionErrors(errors) {\n    return errors.reduce(function (errs, err) { return errs.concat((err instanceof UnsubscriptionError) ? err.errors : err); }, []);\n}\n//# sourceMappingURL=Subscription.js.map\n","/** PURE_IMPORTS_START  PURE_IMPORTS_END */\nexport function isObject(x) {\n    return x !== null && typeof x === 'object';\n}\n//# sourceMappingURL=isObject.js.map\n","/** PURE_IMPORTS_START  PURE_IMPORTS_END */\nexport var rxSubscriber = /*@__PURE__*/ (function () {\n    return typeof Symbol === 'function'\n        ? /*@__PURE__*/ Symbol('rxSubscriber')\n        : '@@rxSubscriber_' + /*@__PURE__*/ Math.random();\n})();\nexport var $$rxSubscriber = rxSubscriber;\n//# sourceMappingURL=rxSubscriber.js.map\n","/** PURE_IMPORTS_START tslib,_util_isFunction,_Observer,_Subscription,_internal_symbol_rxSubscriber,_config,_util_hostReportError PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { isFunction } from './util/isFunction';\nimport { empty as emptyObserver } from './Observer';\nimport { Subscription } from './Subscription';\nimport { rxSubscriber as rxSubscriberSymbol } from '../internal/symbol/rxSubscriber';\nimport { config } from './config';\nimport { hostReportError } from './util/hostReportError';\nvar Subscriber = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(Subscriber, _super);\n    function Subscriber(destinationOrNext, error, complete) {\n        var _this = _super.call(this) || this;\n        _this.syncErrorValue = null;\n        _this.syncErrorThrown = false;\n        _this.syncErrorThrowable = false;\n        _this.isStopped = false;\n        switch (arguments.length) {\n            case 0:\n                _this.destination = emptyObserver;\n                break;\n            case 1:\n                if (!destinationOrNext) {\n                    _this.destination = emptyObserver;\n                    break;\n                }\n                if (typeof destinationOrNext === 'object') {\n                    if (destinationOrNext instanceof Subscriber) {\n                        _this.syncErrorThrowable = destinationOrNext.syncErrorThrowable;\n                        _this.destination = destinationOrNext;\n                        destinationOrNext.add(_this);\n                    }\n                    else {\n                        _this.syncErrorThrowable = true;\n                        _this.destination = new SafeSubscriber(_this, destinationOrNext);\n                    }\n                    break;\n                }\n            default:\n                _this.syncErrorThrowable = true;\n                _this.destination = new SafeSubscriber(_this, destinationOrNext, error, complete);\n                break;\n        }\n        return _this;\n    }\n    Subscriber.prototype[rxSubscriberSymbol] = function () { return this; };\n    Subscriber.create = function (next, error, complete) {\n        var subscriber = new Subscriber(next, error, complete);\n        subscriber.syncErrorThrowable = false;\n        return subscriber;\n    };\n    Subscriber.prototype.next = function (value) {\n        if (!this.isStopped) {\n            this._next(value);\n        }\n    };\n    Subscriber.prototype.error = function (err) {\n        if (!this.isStopped) {\n            this.isStopped = true;\n            this._error(err);\n        }\n    };\n    Subscriber.prototype.complete = function () {\n        if (!this.isStopped) {\n            this.isStopped = true;\n            this._complete();\n        }\n    };\n    Subscriber.prototype.unsubscribe = function () {\n        if (this.closed) {\n            return;\n        }\n        this.isStopped = true;\n        _super.prototype.unsubscribe.call(this);\n    };\n    Subscriber.prototype._next = function (value) {\n        this.destination.next(value);\n    };\n    Subscriber.prototype._error = function (err) {\n        this.destination.error(err);\n        this.unsubscribe();\n    };\n    Subscriber.prototype._complete = function () {\n        this.destination.complete();\n        this.unsubscribe();\n    };\n    Subscriber.prototype._unsubscribeAndRecycle = function () {\n        var _parentOrParents = this._parentOrParents;\n        this._parentOrParents = null;\n        this.unsubscribe();\n        this.closed = false;\n        this.isStopped = false;\n        this._parentOrParents = _parentOrParents;\n        return this;\n    };\n    return Subscriber;\n}(Subscription));\nexport { Subscriber };\nvar SafeSubscriber = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(SafeSubscriber, _super);\n    function SafeSubscriber(_parentSubscriber, observerOrNext, error, complete) {\n        var _this = _super.call(this) || this;\n        _this._parentSubscriber = _parentSubscriber;\n        var next;\n        var context = _this;\n        if (isFunction(observerOrNext)) {\n            next = observerOrNext;\n        }\n        else if (observerOrNext) {\n            next = observerOrNext.next;\n            error = observerOrNext.error;\n            complete = observerOrNext.complete;\n            if (observerOrNext !== emptyObserver) {\n                context = Object.create(observerOrNext);\n                if (isFunction(context.unsubscribe)) {\n                    _this.add(context.unsubscribe.bind(context));\n                }\n                context.unsubscribe = _this.unsubscribe.bind(_this);\n            }\n        }\n        _this._context = context;\n        _this._next = next;\n        _this._error = error;\n        _this._complete = complete;\n        return _this;\n    }\n    SafeSubscriber.prototype.next = function (value) {\n        if (!this.isStopped && this._next) {\n            var _parentSubscriber = this._parentSubscriber;\n            if (!config.useDeprecatedSynchronousErrorHandling || !_parentSubscriber.syncErrorThrowable) {\n                this.__tryOrUnsub(this._next, value);\n            }\n            else if (this.__tryOrSetError(_parentSubscriber, this._next, value)) {\n                this.unsubscribe();\n            }\n        }\n    };\n    SafeSubscriber.prototype.error = function (err) {\n        if (!this.isStopped) {\n            var _parentSubscriber = this._parentSubscriber;\n            var useDeprecatedSynchronousErrorHandling = config.useDeprecatedSynchronousErrorHandling;\n            if (this._error) {\n                if (!useDeprecatedSynchronousErrorHandling || !_parentSubscriber.syncErrorThrowable) {\n                    this.__tryOrUnsub(this._error, err);\n                    this.unsubscribe();\n                }\n                else {\n                    this.__tryOrSetError(_parentSubscriber, this._error, err);\n                    this.unsubscribe();\n                }\n            }\n            else if (!_parentSubscriber.syncErrorThrowable) {\n                this.unsubscribe();\n                if (useDeprecatedSynchronousErrorHandling) {\n                    throw err;\n                }\n                hostReportError(err);\n            }\n            else {\n                if (useDeprecatedSynchronousErrorHandling) {\n                    _parentSubscriber.syncErrorValue = err;\n                    _parentSubscriber.syncErrorThrown = true;\n                }\n                else {\n                    hostReportError(err);\n                }\n                this.unsubscribe();\n            }\n        }\n    };\n    SafeSubscriber.prototype.complete = function () {\n        var _this = this;\n        if (!this.isStopped) {\n            var _parentSubscriber = this._parentSubscriber;\n            if (this._complete) {\n                var wrappedComplete = function () { return _this._complete.call(_this._context); };\n                if (!config.useDeprecatedSynchronousErrorHandling || !_parentSubscriber.syncErrorThrowable) {\n                    this.__tryOrUnsub(wrappedComplete);\n                    this.unsubscribe();\n                }\n                else {\n                    this.__tryOrSetError(_parentSubscriber, wrappedComplete);\n                    this.unsubscribe();\n                }\n            }\n            else {\n                this.unsubscribe();\n            }\n        }\n    };\n    SafeSubscriber.prototype.__tryOrUnsub = function (fn, value) {\n        try {\n            fn.call(this._context, value);\n        }\n        catch (err) {\n            this.unsubscribe();\n            if (config.useDeprecatedSynchronousErrorHandling) {\n                throw err;\n            }\n            else {\n                hostReportError(err);\n            }\n        }\n    };\n    SafeSubscriber.prototype.__tryOrSetError = function (parent, fn, value) {\n        if (!config.useDeprecatedSynchronousErrorHandling) {\n            throw new Error('bad call');\n        }\n        try {\n            fn.call(this._context, value);\n        }\n        catch (err) {\n            if (config.useDeprecatedSynchronousErrorHandling) {\n                parent.syncErrorValue = err;\n                parent.syncErrorThrown = true;\n                return true;\n            }\n            else {\n                hostReportError(err);\n                return true;\n            }\n        }\n        return false;\n    };\n    SafeSubscriber.prototype._unsubscribe = function () {\n        var _parentSubscriber = this._parentSubscriber;\n        this._context = null;\n        this._parentSubscriber = null;\n        _parentSubscriber.unsubscribe();\n    };\n    return SafeSubscriber;\n}(Subscriber));\nexport { SafeSubscriber };\n//# sourceMappingURL=Subscriber.js.map\n","/** PURE_IMPORTS_START  PURE_IMPORTS_END */\nexport var observable = /*@__PURE__*/ (function () { return typeof Symbol === 'function' && Symbol.observable || '@@observable'; })();\n//# sourceMappingURL=observable.js.map\n","/** PURE_IMPORTS_START  PURE_IMPORTS_END */\nexport function noop() { }\n//# sourceMappingURL=noop.js.map\n","/** PURE_IMPORTS_START _noop PURE_IMPORTS_END */\nimport { noop } from './noop';\nexport function pipe() {\n    var fns = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        fns[_i] = arguments[_i];\n    }\n    return pipeFromArray(fns);\n}\nexport function pipeFromArray(fns) {\n    if (!fns) {\n        return noop;\n    }\n    if (fns.length === 1) {\n        return fns[0];\n    }\n    return function piped(input) {\n        return fns.reduce(function (prev, fn) { return fn(prev); }, input);\n    };\n}\n//# sourceMappingURL=pipe.js.map\n","/** PURE_IMPORTS_START _util_canReportError,_util_toSubscriber,_symbol_observable,_util_pipe,_config PURE_IMPORTS_END */\nimport { canReportError } from './util/canReportError';\nimport { toSubscriber } from './util/toSubscriber';\nimport { observable as Symbol_observable } from './symbol/observable';\nimport { pipeFromArray } from './util/pipe';\nimport { config } from './config';\nvar Observable = /*@__PURE__*/ (function () {\n    function Observable(subscribe) {\n        this._isScalar = false;\n        if (subscribe) {\n            this._subscribe = subscribe;\n        }\n    }\n    Observable.prototype.lift = function (operator) {\n        var observable = new Observable();\n        observable.source = this;\n        observable.operator = operator;\n        return observable;\n    };\n    Observable.prototype.subscribe = function (observerOrNext, error, complete) {\n        var operator = this.operator;\n        var sink = toSubscriber(observerOrNext, error, complete);\n        if (operator) {\n            sink.add(operator.call(sink, this.source));\n        }\n        else {\n            sink.add(this.source || (config.useDeprecatedSynchronousErrorHandling && !sink.syncErrorThrowable) ?\n                this._subscribe(sink) :\n                this._trySubscribe(sink));\n        }\n        if (config.useDeprecatedSynchronousErrorHandling) {\n            if (sink.syncErrorThrowable) {\n                sink.syncErrorThrowable = false;\n                if (sink.syncErrorThrown) {\n                    throw sink.syncErrorValue;\n                }\n            }\n        }\n        return sink;\n    };\n    Observable.prototype._trySubscribe = function (sink) {\n        try {\n            return this._subscribe(sink);\n        }\n        catch (err) {\n            if (config.useDeprecatedSynchronousErrorHandling) {\n                sink.syncErrorThrown = true;\n                sink.syncErrorValue = err;\n            }\n            if (canReportError(sink)) {\n                sink.error(err);\n            }\n            else {\n                console.warn(err);\n            }\n        }\n    };\n    Observable.prototype.forEach = function (next, promiseCtor) {\n        var _this = this;\n        promiseCtor = getPromiseCtor(promiseCtor);\n        return new promiseCtor(function (resolve, reject) {\n            var subscription;\n            subscription = _this.subscribe(function (value) {\n                try {\n                    next(value);\n                }\n                catch (err) {\n                    reject(err);\n                    if (subscription) {\n                        subscription.unsubscribe();\n                    }\n                }\n            }, reject, resolve);\n        });\n    };\n    Observable.prototype._subscribe = function (subscriber) {\n        var source = this.source;\n        return source && source.subscribe(subscriber);\n    };\n    Observable.prototype[Symbol_observable] = function () {\n        return this;\n    };\n    Observable.prototype.pipe = function () {\n        var operations = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            operations[_i] = arguments[_i];\n        }\n        if (operations.length === 0) {\n            return this;\n        }\n        return pipeFromArray(operations)(this);\n    };\n    Observable.prototype.toPromise = function (promiseCtor) {\n        var _this = this;\n        promiseCtor = getPromiseCtor(promiseCtor);\n        return new promiseCtor(function (resolve, reject) {\n            var value;\n            _this.subscribe(function (x) { return value = x; }, function (err) { return reject(err); }, function () { return resolve(value); });\n        });\n    };\n    Observable.create = function (subscribe) {\n        return new Observable(subscribe);\n    };\n    return Observable;\n}());\nexport { Observable };\nfunction getPromiseCtor(promiseCtor) {\n    if (!promiseCtor) {\n        promiseCtor = config.Promise || Promise;\n    }\n    if (!promiseCtor) {\n        throw new Error('no Promise impl found');\n    }\n    return promiseCtor;\n}\n//# sourceMappingURL=Observable.js.map\n","/** PURE_IMPORTS_START _Subscriber,_symbol_rxSubscriber,_Observer PURE_IMPORTS_END */\nimport { Subscriber } from '../Subscriber';\nimport { rxSubscriber as rxSubscriberSymbol } from '../symbol/rxSubscriber';\nimport { empty as emptyObserver } from '../Observer';\nexport function toSubscriber(nextOrObserver, error, complete) {\n    if (nextOrObserver) {\n        if (nextOrObserver instanceof Subscriber) {\n            return nextOrObserver;\n        }\n        if (nextOrObserver[rxSubscriberSymbol]) {\n            return nextOrObserver[rxSubscriberSymbol]();\n        }\n    }\n    if (!nextOrObserver && !error && !complete) {\n        return new Subscriber(emptyObserver);\n    }\n    return new Subscriber(nextOrObserver, error, complete);\n}\n//# sourceMappingURL=toSubscriber.js.map\n","/** PURE_IMPORTS_START _Subscriber PURE_IMPORTS_END */\nimport { Subscriber } from '../Subscriber';\nexport function canReportError(observer) {\n    while (observer) {\n        var _a = observer, closed_1 = _a.closed, destination = _a.destination, isStopped = _a.isStopped;\n        if (closed_1 || isStopped) {\n            return false;\n        }\n        else if (destination && destination instanceof Subscriber) {\n            observer = destination;\n        }\n        else {\n            observer = null;\n        }\n    }\n    return true;\n}\n//# sourceMappingURL=canReportError.js.map\n","/** PURE_IMPORTS_START  PURE_IMPORTS_END */\nvar ObjectUnsubscribedErrorImpl = /*@__PURE__*/ (function () {\n    function ObjectUnsubscribedErrorImpl() {\n        Error.call(this);\n        this.message = 'object unsubscribed';\n        this.name = 'ObjectUnsubscribedError';\n        return this;\n    }\n    ObjectUnsubscribedErrorImpl.prototype = /*@__PURE__*/ Object.create(Error.prototype);\n    return ObjectUnsubscribedErrorImpl;\n})();\nexport var ObjectUnsubscribedError = ObjectUnsubscribedErrorImpl;\n//# sourceMappingURL=ObjectUnsubscribedError.js.map\n","/** PURE_IMPORTS_START tslib,_Subscription PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { Subscription } from './Subscription';\nvar SubjectSubscription = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(SubjectSubscription, _super);\n    function SubjectSubscription(subject, subscriber) {\n        var _this = _super.call(this) || this;\n        _this.subject = subject;\n        _this.subscriber = subscriber;\n        _this.closed = false;\n        return _this;\n    }\n    SubjectSubscription.prototype.unsubscribe = function () {\n        if (this.closed) {\n            return;\n        }\n        this.closed = true;\n        var subject = this.subject;\n        var observers = subject.observers;\n        this.subject = null;\n        if (!observers || observers.length === 0 || subject.isStopped || subject.closed) {\n            return;\n        }\n        var subscriberIndex = observers.indexOf(this.subscriber);\n        if (subscriberIndex !== -1) {\n            observers.splice(subscriberIndex, 1);\n        }\n    };\n    return SubjectSubscription;\n}(Subscription));\nexport { SubjectSubscription };\n//# sourceMappingURL=SubjectSubscription.js.map\n","/** PURE_IMPORTS_START tslib,_Observable,_Subscriber,_Subscription,_util_ObjectUnsubscribedError,_SubjectSubscription,_internal_symbol_rxSubscriber PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { Observable } from './Observable';\nimport { Subscriber } from './Subscriber';\nimport { Subscription } from './Subscription';\nimport { ObjectUnsubscribedError } from './util/ObjectUnsubscribedError';\nimport { SubjectSubscription } from './SubjectSubscription';\nimport { rxSubscriber as rxSubscriberSymbol } from '../internal/symbol/rxSubscriber';\nvar SubjectSubscriber = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(SubjectSubscriber, _super);\n    function SubjectSubscriber(destination) {\n        var _this = _super.call(this, destination) || this;\n        _this.destination = destination;\n        return _this;\n    }\n    return SubjectSubscriber;\n}(Subscriber));\nexport { SubjectSubscriber };\nvar Subject = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(Subject, _super);\n    function Subject() {\n        var _this = _super.call(this) || this;\n        _this.observers = [];\n        _this.closed = false;\n        _this.isStopped = false;\n        _this.hasError = false;\n        _this.thrownError = null;\n        return _this;\n    }\n    Subject.prototype[rxSubscriberSymbol] = function () {\n        return new SubjectSubscriber(this);\n    };\n    Subject.prototype.lift = function (operator) {\n        var subject = new AnonymousSubject(this, this);\n        subject.operator = operator;\n        return subject;\n    };\n    Subject.prototype.next = function (value) {\n        if (this.closed) {\n            throw new ObjectUnsubscribedError();\n        }\n        if (!this.isStopped) {\n            var observers = this.observers;\n            var len = observers.length;\n            var copy = observers.slice();\n            for (var i = 0; i < len; i++) {\n                copy[i].next(value);\n            }\n        }\n    };\n    Subject.prototype.error = function (err) {\n        if (this.closed) {\n            throw new ObjectUnsubscribedError();\n        }\n        this.hasError = true;\n        this.thrownError = err;\n        this.isStopped = true;\n        var observers = this.observers;\n        var len = observers.length;\n        var copy = observers.slice();\n        for (var i = 0; i < len; i++) {\n            copy[i].error(err);\n        }\n        this.observers.length = 0;\n    };\n    Subject.prototype.complete = function () {\n        if (this.closed) {\n            throw new ObjectUnsubscribedError();\n        }\n        this.isStopped = true;\n        var observers = this.observers;\n        var len = observers.length;\n        var copy = observers.slice();\n        for (var i = 0; i < len; i++) {\n            copy[i].complete();\n        }\n        this.observers.length = 0;\n    };\n    Subject.prototype.unsubscribe = function () {\n        this.isStopped = true;\n        this.closed = true;\n        this.observers = null;\n    };\n    Subject.prototype._trySubscribe = function (subscriber) {\n        if (this.closed) {\n            throw new ObjectUnsubscribedError();\n        }\n        else {\n            return _super.prototype._trySubscribe.call(this, subscriber);\n        }\n    };\n    Subject.prototype._subscribe = function (subscriber) {\n        if (this.closed) {\n            throw new ObjectUnsubscribedError();\n        }\n        else if (this.hasError) {\n            subscriber.error(this.thrownError);\n            return Subscription.EMPTY;\n        }\n        else if (this.isStopped) {\n            subscriber.complete();\n            return Subscription.EMPTY;\n        }\n        else {\n            this.observers.push(subscriber);\n            return new SubjectSubscription(this, subscriber);\n        }\n    };\n    Subject.prototype.asObservable = function () {\n        var observable = new Observable();\n        observable.source = this;\n        return observable;\n    };\n    Subject.create = function (destination, source) {\n        return new AnonymousSubject(destination, source);\n    };\n    return Subject;\n}(Observable));\nexport { Subject };\nvar AnonymousSubject = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(AnonymousSubject, _super);\n    function AnonymousSubject(destination, source) {\n        var _this = _super.call(this) || this;\n        _this.destination = destination;\n        _this.source = source;\n        return _this;\n    }\n    AnonymousSubject.prototype.next = function (value) {\n        var destination = this.destination;\n        if (destination && destination.next) {\n            destination.next(value);\n        }\n    };\n    AnonymousSubject.prototype.error = function (err) {\n        var destination = this.destination;\n        if (destination && destination.error) {\n            this.destination.error(err);\n        }\n    };\n    AnonymousSubject.prototype.complete = function () {\n        var destination = this.destination;\n        if (destination && destination.complete) {\n            this.destination.complete();\n        }\n    };\n    AnonymousSubject.prototype._subscribe = function (subscriber) {\n        var source = this.source;\n        if (source) {\n            return this.source.subscribe(subscriber);\n        }\n        else {\n            return Subscription.EMPTY;\n        }\n    };\n    return AnonymousSubject;\n}(Subject));\nexport { AnonymousSubject };\n//# sourceMappingURL=Subject.js.map\n","/** PURE_IMPORTS_START tslib,_AsyncAction PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { AsyncAction } from './AsyncAction';\nvar QueueAction = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(QueueAction, _super);\n    function QueueAction(scheduler, work) {\n        var _this = _super.call(this, scheduler, work) || this;\n        _this.scheduler = scheduler;\n        _this.work = work;\n        return _this;\n    }\n    QueueAction.prototype.schedule = function (state, delay) {\n        if (delay === void 0) {\n            delay = 0;\n        }\n        if (delay > 0) {\n            return _super.prototype.schedule.call(this, state, delay);\n        }\n        this.delay = delay;\n        this.state = state;\n        this.scheduler.flush(this);\n        return this;\n    };\n    QueueAction.prototype.execute = function (state, delay) {\n        return (delay > 0 || this.closed) ?\n            _super.prototype.execute.call(this, state, delay) :\n            this._execute(state, delay);\n    };\n    QueueAction.prototype.requestAsyncId = function (scheduler, id, delay) {\n        if (delay === void 0) {\n            delay = 0;\n        }\n        if ((delay !== null && delay > 0) || (delay === null && this.delay > 0)) {\n            return _super.prototype.requestAsyncId.call(this, scheduler, id, delay);\n        }\n        return scheduler.flush(this);\n    };\n    return QueueAction;\n}(AsyncAction));\nexport { QueueAction };\n//# sourceMappingURL=QueueAction.js.map\n","/** PURE_IMPORTS_START tslib,_Action PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { Action } from './Action';\nvar AsyncAction = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(AsyncAction, _super);\n    function AsyncAction(scheduler, work) {\n        var _this = _super.call(this, scheduler, work) || this;\n        _this.scheduler = scheduler;\n        _this.work = work;\n        _this.pending = false;\n        return _this;\n    }\n    AsyncAction.prototype.schedule = function (state, delay) {\n        if (delay === void 0) {\n            delay = 0;\n        }\n        if (this.closed) {\n            return this;\n        }\n        this.state = state;\n        var id = this.id;\n        var scheduler = this.scheduler;\n        if (id != null) {\n            this.id = this.recycleAsyncId(scheduler, id, delay);\n        }\n        this.pending = true;\n        this.delay = delay;\n        this.id = this.id || this.requestAsyncId(scheduler, this.id, delay);\n        return this;\n    };\n    AsyncAction.prototype.requestAsyncId = function (scheduler, id, delay) {\n        if (delay === void 0) {\n            delay = 0;\n        }\n        return setInterval(scheduler.flush.bind(scheduler, this), delay);\n    };\n    AsyncAction.prototype.recycleAsyncId = function (scheduler, id, delay) {\n        if (delay === void 0) {\n            delay = 0;\n        }\n        if (delay !== null && this.delay === delay && this.pending === false) {\n            return id;\n        }\n        clearInterval(id);\n        return undefined;\n    };\n    AsyncAction.prototype.execute = function (state, delay) {\n        if (this.closed) {\n            return new Error('executing a cancelled action');\n        }\n        this.pending = false;\n        var error = this._execute(state, delay);\n        if (error) {\n            return error;\n        }\n        else if (this.pending === false && this.id != null) {\n            this.id = this.recycleAsyncId(this.scheduler, this.id, null);\n        }\n    };\n    AsyncAction.prototype._execute = function (state, delay) {\n        var errored = false;\n        var errorValue = undefined;\n        try {\n            this.work(state);\n        }\n        catch (e) {\n            errored = true;\n            errorValue = !!e && e || new Error(e);\n        }\n        if (errored) {\n            this.unsubscribe();\n            return errorValue;\n        }\n    };\n    AsyncAction.prototype._unsubscribe = function () {\n        var id = this.id;\n        var scheduler = this.scheduler;\n        var actions = scheduler.actions;\n        var index = actions.indexOf(this);\n        this.work = null;\n        this.state = null;\n        this.pending = false;\n        this.scheduler = null;\n        if (index !== -1) {\n            actions.splice(index, 1);\n        }\n        if (id != null) {\n            this.id = this.recycleAsyncId(scheduler, id, null);\n        }\n        this.delay = null;\n    };\n    return AsyncAction;\n}(Action));\nexport { AsyncAction };\n//# sourceMappingURL=AsyncAction.js.map\n","/** PURE_IMPORTS_START tslib,_Subscription PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { Subscription } from '../Subscription';\nvar Action = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(Action, _super);\n    function Action(scheduler, work) {\n        return _super.call(this) || this;\n    }\n    Action.prototype.schedule = function (state, delay) {\n        if (delay === void 0) {\n            delay = 0;\n        }\n        return this;\n    };\n    return Action;\n}(Subscription));\nexport { Action };\n//# sourceMappingURL=Action.js.map\n","var Scheduler = /*@__PURE__*/ (function () {\n    function Scheduler(SchedulerAction, now) {\n        if (now === void 0) {\n            now = Scheduler.now;\n        }\n        this.SchedulerAction = SchedulerAction;\n        this.now = now;\n    }\n    Scheduler.prototype.schedule = function (work, delay, state) {\n        if (delay === void 0) {\n            delay = 0;\n        }\n        return new this.SchedulerAction(this, work).schedule(state, delay);\n    };\n    Scheduler.now = function () { return Date.now(); };\n    return Scheduler;\n}());\nexport { Scheduler };\n//# sourceMappingURL=Scheduler.js.map\n","/** PURE_IMPORTS_START _QueueAction,_QueueScheduler PURE_IMPORTS_END */\nimport { QueueAction } from './QueueAction';\nimport { QueueScheduler } from './QueueScheduler';\nexport var queue = /*@__PURE__*/ new QueueScheduler(QueueAction);\n//# sourceMappingURL=queue.js.map\n","/** PURE_IMPORTS_START tslib,_AsyncScheduler PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { AsyncScheduler } from './AsyncScheduler';\nvar QueueScheduler = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(QueueScheduler, _super);\n    function QueueScheduler() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    return QueueScheduler;\n}(AsyncScheduler));\nexport { QueueScheduler };\n//# sourceMappingURL=QueueScheduler.js.map\n","/** PURE_IMPORTS_START tslib,_Scheduler PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { Scheduler } from '../Scheduler';\nvar AsyncScheduler = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(AsyncScheduler, _super);\n    function AsyncScheduler(SchedulerAction, now) {\n        if (now === void 0) {\n            now = Scheduler.now;\n        }\n        var _this = _super.call(this, SchedulerAction, function () {\n            if (AsyncScheduler.delegate && AsyncScheduler.delegate !== _this) {\n                return AsyncScheduler.delegate.now();\n            }\n            else {\n                return now();\n            }\n        }) || this;\n        _this.actions = [];\n        _this.active = false;\n        _this.scheduled = undefined;\n        return _this;\n    }\n    AsyncScheduler.prototype.schedule = function (work, delay, state) {\n        if (delay === void 0) {\n            delay = 0;\n        }\n        if (AsyncScheduler.delegate && AsyncScheduler.delegate !== this) {\n            return AsyncScheduler.delegate.schedule(work, delay, state);\n        }\n        else {\n            return _super.prototype.schedule.call(this, work, delay, state);\n        }\n    };\n    AsyncScheduler.prototype.flush = function (action) {\n        var actions = this.actions;\n        if (this.active) {\n            actions.push(action);\n            return;\n        }\n        var error;\n        this.active = true;\n        do {\n            if (error = action.execute(action.state, action.delay)) {\n                break;\n            }\n        } while (action = actions.shift());\n        this.active = false;\n        if (error) {\n            while (action = actions.shift()) {\n                action.unsubscribe();\n            }\n            throw error;\n        }\n    };\n    return AsyncScheduler;\n}(Scheduler));\nexport { AsyncScheduler };\n//# sourceMappingURL=AsyncScheduler.js.map\n","/** PURE_IMPORTS_START _Observable PURE_IMPORTS_END */\nimport { Observable } from '../Observable';\nexport var EMPTY = /*@__PURE__*/ new Observable(function (subscriber) { return subscriber.complete(); });\nexport function empty(scheduler) {\n    return scheduler ? emptyScheduled(scheduler) : EMPTY;\n}\nfunction emptyScheduled(scheduler) {\n    return new Observable(function (subscriber) { return scheduler.schedule(function () { return subscriber.complete(); }); });\n}\n//# sourceMappingURL=empty.js.map\n","/** PURE_IMPORTS_START  PURE_IMPORTS_END */\nexport function isScheduler(value) {\n    return value && typeof value.schedule === 'function';\n}\n//# sourceMappingURL=isScheduler.js.map\n","/** PURE_IMPORTS_START  PURE_IMPORTS_END */\nexport var subscribeToArray = function (array) {\n    return function (subscriber) {\n        for (var i = 0, len = array.length; i < len && !subscriber.closed; i++) {\n            subscriber.next(array[i]);\n        }\n        subscriber.complete();\n    };\n};\n//# sourceMappingURL=subscribeToArray.js.map\n","/** PURE_IMPORTS_START _observable_empty,_observable_of,_observable_throwError PURE_IMPORTS_END */\nimport { empty } from './observable/empty';\nimport { of } from './observable/of';\nimport { throwError } from './observable/throwError';\nexport var NotificationKind;\n/*@__PURE__*/ (function (NotificationKind) {\n    NotificationKind[\"NEXT\"] = \"N\";\n    NotificationKind[\"ERROR\"] = \"E\";\n    NotificationKind[\"COMPLETE\"] = \"C\";\n})(NotificationKind || (NotificationKind = {}));\nvar Notification = /*@__PURE__*/ (function () {\n    function Notification(kind, value, error) {\n        this.kind = kind;\n        this.value = value;\n        this.error = error;\n        this.hasValue = kind === 'N';\n    }\n    Notification.prototype.observe = function (observer) {\n        switch (this.kind) {\n            case 'N':\n                return observer.next && observer.next(this.value);\n            case 'E':\n                return observer.error && observer.error(this.error);\n            case 'C':\n                return observer.complete && observer.complete();\n        }\n    };\n    Notification.prototype.do = function (next, error, complete) {\n        var kind = this.kind;\n        switch (kind) {\n            case 'N':\n                return next && next(this.value);\n            case 'E':\n                return error && error(this.error);\n            case 'C':\n                return complete && complete();\n        }\n    };\n    Notification.prototype.accept = function (nextOrObserver, error, complete) {\n        if (nextOrObserver && typeof nextOrObserver.next === 'function') {\n            return this.observe(nextOrObserver);\n        }\n        else {\n            return this.do(nextOrObserver, error, complete);\n        }\n    };\n    Notification.prototype.toObservable = function () {\n        var kind = this.kind;\n        switch (kind) {\n            case 'N':\n                return of(this.value);\n            case 'E':\n                return throwError(this.error);\n            case 'C':\n                return empty();\n        }\n        throw new Error('unexpected notification kind value');\n    };\n    Notification.createNext = function (value) {\n        if (typeof value !== 'undefined') {\n            return new Notification('N', value);\n        }\n        return Notification.undefinedValueNotification;\n    };\n    Notification.createError = function (err) {\n        return new Notification('E', undefined, err);\n    };\n    Notification.createComplete = function () {\n        return Notification.completeNotification;\n    };\n    Notification.completeNotification = new Notification('C');\n    Notification.undefinedValueNotification = new Notification('N', undefined);\n    return Notification;\n}());\nexport { Notification };\n//# sourceMappingURL=Notification.js.map\n","/** PURE_IMPORTS_START _Observable,_Subscription PURE_IMPORTS_END */\nimport { Observable } from '../Observable';\nimport { Subscription } from '../Subscription';\nexport function scheduleArray(input, scheduler) {\n    return new Observable(function (subscriber) {\n        var sub = new Subscription();\n        var i = 0;\n        sub.add(scheduler.schedule(function () {\n            if (i === input.length) {\n                subscriber.complete();\n                return;\n            }\n            subscriber.next(input[i++]);\n            if (!subscriber.closed) {\n                sub.add(this.schedule());\n            }\n        }));\n        return sub;\n    });\n}\n//# sourceMappingURL=scheduleArray.js.map\n","/** PURE_IMPORTS_START _Observable,_util_subscribeToArray,_scheduled_scheduleArray PURE_IMPORTS_END */\nimport { Observable } from '../Observable';\nimport { subscribeToArray } from '../util/subscribeToArray';\nimport { scheduleArray } from '../scheduled/scheduleArray';\nexport function fromArray(input, scheduler) {\n    if (!scheduler) {\n        return new Observable(subscribeToArray(input));\n    }\n    else {\n        return scheduleArray(input, scheduler);\n    }\n}\n//# sourceMappingURL=fromArray.js.map\n","/** PURE_IMPORTS_START _Observable PURE_IMPORTS_END */\nimport { Observable } from '../Observable';\nexport function throwError(error, scheduler) {\n    if (!scheduler) {\n        return new Observable(function (subscriber) { return subscriber.error(error); });\n    }\n    else {\n        return new Observable(function (subscriber) { return scheduler.schedule(dispatch, 0, { error: error, subscriber: subscriber }); });\n    }\n}\nfunction dispatch(_a) {\n    var error = _a.error, subscriber = _a.subscriber;\n    subscriber.error(error);\n}\n//# sourceMappingURL=throwError.js.map\n","/** PURE_IMPORTS_START _util_isScheduler,_fromArray,_scheduled_scheduleArray PURE_IMPORTS_END */\nimport { isScheduler } from '../util/isScheduler';\nimport { fromArray } from './fromArray';\nimport { scheduleArray } from '../scheduled/scheduleArray';\nexport function of() {\n    var args = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        args[_i] = arguments[_i];\n    }\n    var scheduler = args[args.length - 1];\n    if (isScheduler(scheduler)) {\n        args.pop();\n        return scheduleArray(args, scheduler);\n    }\n    else {\n        return fromArray(args);\n    }\n}\n//# sourceMappingURL=of.js.map\n","/** PURE_IMPORTS_START tslib,_Subscriber,_Notification PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { Subscriber } from '../Subscriber';\nimport { Notification } from '../Notification';\nexport function observeOn(scheduler, delay) {\n    if (delay === void 0) {\n        delay = 0;\n    }\n    return function observeOnOperatorFunction(source) {\n        return source.lift(new ObserveOnOperator(scheduler, delay));\n    };\n}\nvar ObserveOnOperator = /*@__PURE__*/ (function () {\n    function ObserveOnOperator(scheduler, delay) {\n        if (delay === void 0) {\n            delay = 0;\n        }\n        this.scheduler = scheduler;\n        this.delay = delay;\n    }\n    ObserveOnOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new ObserveOnSubscriber(subscriber, this.scheduler, this.delay));\n    };\n    return ObserveOnOperator;\n}());\nexport { ObserveOnOperator };\nvar ObserveOnSubscriber = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(ObserveOnSubscriber, _super);\n    function ObserveOnSubscriber(destination, scheduler, delay) {\n        if (delay === void 0) {\n            delay = 0;\n        }\n        var _this = _super.call(this, destination) || this;\n        _this.scheduler = scheduler;\n        _this.delay = delay;\n        return _this;\n    }\n    ObserveOnSubscriber.dispatch = function (arg) {\n        var notification = arg.notification, destination = arg.destination;\n        notification.observe(destination);\n        this.unsubscribe();\n    };\n    ObserveOnSubscriber.prototype.scheduleMessage = function (notification) {\n        var destination = this.destination;\n        destination.add(this.scheduler.schedule(ObserveOnSubscriber.dispatch, this.delay, new ObserveOnMessage(notification, this.destination)));\n    };\n    ObserveOnSubscriber.prototype._next = function (value) {\n        this.scheduleMessage(Notification.createNext(value));\n    };\n    ObserveOnSubscriber.prototype._error = function (err) {\n        this.scheduleMessage(Notification.createError(err));\n        this.unsubscribe();\n    };\n    ObserveOnSubscriber.prototype._complete = function () {\n        this.scheduleMessage(Notification.createComplete());\n        this.unsubscribe();\n    };\n    return ObserveOnSubscriber;\n}(Subscriber));\nexport { ObserveOnSubscriber };\nvar ObserveOnMessage = /*@__PURE__*/ (function () {\n    function ObserveOnMessage(notification, destination) {\n        this.notification = notification;\n        this.destination = destination;\n    }\n    return ObserveOnMessage;\n}());\nexport { ObserveOnMessage };\n//# sourceMappingURL=observeOn.js.map\n","/** PURE_IMPORTS_START tslib,_Subject,_scheduler_queue,_Subscription,_operators_observeOn,_util_ObjectUnsubscribedError,_SubjectSubscription PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { Subject } from './Subject';\nimport { queue } from './scheduler/queue';\nimport { Subscription } from './Subscription';\nimport { ObserveOnSubscriber } from './operators/observeOn';\nimport { ObjectUnsubscribedError } from './util/ObjectUnsubscribedError';\nimport { SubjectSubscription } from './SubjectSubscription';\nvar ReplaySubject = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(ReplaySubject, _super);\n    function ReplaySubject(bufferSize, windowTime, scheduler) {\n        if (bufferSize === void 0) {\n            bufferSize = Number.POSITIVE_INFINITY;\n        }\n        if (windowTime === void 0) {\n            windowTime = Number.POSITIVE_INFINITY;\n        }\n        var _this = _super.call(this) || this;\n        _this.scheduler = scheduler;\n        _this._events = [];\n        _this._infiniteTimeWindow = false;\n        _this._bufferSize = bufferSize < 1 ? 1 : bufferSize;\n        _this._windowTime = windowTime < 1 ? 1 : windowTime;\n        if (windowTime === Number.POSITIVE_INFINITY) {\n            _this._infiniteTimeWindow = true;\n            _this.next = _this.nextInfiniteTimeWindow;\n        }\n        else {\n            _this.next = _this.nextTimeWindow;\n        }\n        return _this;\n    }\n    ReplaySubject.prototype.nextInfiniteTimeWindow = function (value) {\n        var _events = this._events;\n        _events.push(value);\n        if (_events.length > this._bufferSize) {\n            _events.shift();\n        }\n        _super.prototype.next.call(this, value);\n    };\n    ReplaySubject.prototype.nextTimeWindow = function (value) {\n        this._events.push(new ReplayEvent(this._getNow(), value));\n        this._trimBufferThenGetEvents();\n        _super.prototype.next.call(this, value);\n    };\n    ReplaySubject.prototype._subscribe = function (subscriber) {\n        var _infiniteTimeWindow = this._infiniteTimeWindow;\n        var _events = _infiniteTimeWindow ? this._events : this._trimBufferThenGetEvents();\n        var scheduler = this.scheduler;\n        var len = _events.length;\n        var subscription;\n        if (this.closed) {\n            throw new ObjectUnsubscribedError();\n        }\n        else if (this.isStopped || this.hasError) {\n            subscription = Subscription.EMPTY;\n        }\n        else {\n            this.observers.push(subscriber);\n            subscription = new SubjectSubscription(this, subscriber);\n        }\n        if (scheduler) {\n            subscriber.add(subscriber = new ObserveOnSubscriber(subscriber, scheduler));\n        }\n        if (_infiniteTimeWindow) {\n            for (var i = 0; i < len && !subscriber.closed; i++) {\n                subscriber.next(_events[i]);\n            }\n        }\n        else {\n            for (var i = 0; i < len && !subscriber.closed; i++) {\n                subscriber.next(_events[i].value);\n            }\n        }\n        if (this.hasError) {\n            subscriber.error(this.thrownError);\n        }\n        else if (this.isStopped) {\n            subscriber.complete();\n        }\n        return subscription;\n    };\n    ReplaySubject.prototype._getNow = function () {\n        return (this.scheduler || queue).now();\n    };\n    ReplaySubject.prototype._trimBufferThenGetEvents = function () {\n        var now = this._getNow();\n        var _bufferSize = this._bufferSize;\n        var _windowTime = this._windowTime;\n        var _events = this._events;\n        var eventsCount = _events.length;\n        var spliceCount = 0;\n        while (spliceCount < eventsCount) {\n            if ((now - _events[spliceCount].time) < _windowTime) {\n                break;\n            }\n            spliceCount++;\n        }\n        if (eventsCount > _bufferSize) {\n            spliceCount = Math.max(spliceCount, eventsCount - _bufferSize);\n        }\n        if (spliceCount > 0) {\n            _events.splice(0, spliceCount);\n        }\n        return _events;\n    };\n    return ReplaySubject;\n}(Subject));\nexport { ReplaySubject };\nvar ReplayEvent = /*@__PURE__*/ (function () {\n    function ReplayEvent(time, value) {\n        this.time = time;\n        this.value = value;\n    }\n    return ReplayEvent;\n}());\n//# sourceMappingURL=ReplaySubject.js.map\n","/** PURE_IMPORTS_START tslib,_Subscriber PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { Subscriber } from '../Subscriber';\nexport function filter(predicate, thisArg) {\n    return function filterOperatorFunction(source) {\n        return source.lift(new FilterOperator(predicate, thisArg));\n    };\n}\nvar FilterOperator = /*@__PURE__*/ (function () {\n    function FilterOperator(predicate, thisArg) {\n        this.predicate = predicate;\n        this.thisArg = thisArg;\n    }\n    FilterOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new FilterSubscriber(subscriber, this.predicate, this.thisArg));\n    };\n    return FilterOperator;\n}());\nvar FilterSubscriber = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(FilterSubscriber, _super);\n    function FilterSubscriber(destination, predicate, thisArg) {\n        var _this = _super.call(this, destination) || this;\n        _this.predicate = predicate;\n        _this.thisArg = thisArg;\n        _this.count = 0;\n        return _this;\n    }\n    FilterSubscriber.prototype._next = function (value) {\n        var result;\n        try {\n            result = this.predicate.call(this.thisArg, value, this.count++);\n        }\n        catch (err) {\n            this.destination.error(err);\n            return;\n        }\n        if (result) {\n            this.destination.next(value);\n        }\n    };\n    return FilterSubscriber;\n}(Subscriber));\n//# sourceMappingURL=filter.js.map\n","/** PURE_IMPORTS_START tslib,_Subscriber PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { Subscriber } from '../Subscriber';\nexport function map(project, thisArg) {\n    return function mapOperation(source) {\n        if (typeof project !== 'function') {\n            throw new TypeError('argument is not a function. Are you looking for `mapTo()`?');\n        }\n        return source.lift(new MapOperator(project, thisArg));\n    };\n}\nvar MapOperator = /*@__PURE__*/ (function () {\n    function MapOperator(project, thisArg) {\n        this.project = project;\n        this.thisArg = thisArg;\n    }\n    MapOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new MapSubscriber(subscriber, this.project, this.thisArg));\n    };\n    return MapOperator;\n}());\nexport { MapOperator };\nvar MapSubscriber = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(MapSubscriber, _super);\n    function MapSubscriber(destination, project, thisArg) {\n        var _this = _super.call(this, destination) || this;\n        _this.project = project;\n        _this.count = 0;\n        _this.thisArg = thisArg || _this;\n        return _this;\n    }\n    MapSubscriber.prototype._next = function (value) {\n        var result;\n        try {\n            result = this.project.call(this.thisArg, value, this.count++);\n        }\n        catch (err) {\n            this.destination.error(err);\n            return;\n        }\n        this.destination.next(result);\n    };\n    return MapSubscriber;\n}(Subscriber));\n//# sourceMappingURL=map.js.map\n","\r\nimport { Reactive as Mediator } from '../mediator';\r\n\r\n\r\nclass Store extends Mediator {\r\n    private $data: Map<any, any> = new Map();\r\n    public id: string;\r\n\r\n    constructor(options: any = {}) {\r\n        super();\r\n        var { id } = options;\r\n        this.id = id;\r\n\r\n        return this;\r\n    }\r\n\r\n    next(e: CustomEvent, key: any) {\r\n        var { type, detail } = e;\r\n        var child = this.get(key)\r\n          , data = child.data()\r\n          ;\r\n        var paths = {\r\n            'parent.child.datum':   `${this.id}.${key}.${type}`,\r\n            'parent.*.datum':       `${this.id}.*.${type}`,\r\n            '**.child.datum':       `**.${key}.${type}`,\r\n            '**.*.datum':           `**.*.${type}`,\r\n        };\r\n        \r\n        this.publish(paths['parent.child.datum'], detail);\r\n        this.publish(paths['parent.*.datum'], detail);\r\n        this.publish(paths['**.child.datum'], detail);\r\n        this.publish(paths['**.*.datum'], detail);\r\n    }\r\n    error(error: Error) {}\r\n    complete() {}\r\n\r\n    has(key: any) {\r\n        var has = this.$data.has(key);\r\n        return has;\r\n    }\r\n\r\n    get(key: any) {\r\n        var value = this.$data.get(key);\r\n        return value;\r\n    }\r\n\r\n    set(key: any, value: any) {\r\n        this.$data.set(key, value);\r\n        this.publish(key, value);\r\n        this.publish('*', value);\r\n        this.publish('**.*', value);\r\n        this.publish(`**.${key}`, value);\r\n        if (value instanceof Store) value.attach({ next: (e) => this.next(e, key) });\r\n        \r\n        return this;\r\n    }\r\n\r\n    data() {\r\n        var entries = Array.from( this.$data.entries() ), o = { };\r\n        for (let [key, value] of entries) o[key] = value;\r\n        return o;\r\n    }\r\n\r\n    toJSON() {\r\n        return this.data();\r\n    }\r\n\r\n}\r\n\r\nexport { Store };\r\n","\r\nimport { IEventAggregator } from '../eventaggregator.interface';\r\nimport { Reactive as EventHub } from '../eventhub';\r\n\r\n\r\nclass Mediator extends EventHub implements IEventAggregator {\r\n    private publishers: any = { };\r\n    private context: any = this;\r\n    \r\n    constructor() {\r\n        super();\r\n    }\r\n    \r\n    private registerPublishers(handlers: any) {\r\n        this.publishers = handlers;\r\n        return this;\r\n    }\r\n    protected register(type: 'publishers', handlers: any) {\r\n        var action = { 'publishers': 'registerPublishers' }[ type ];\r\n        this[action](handlers);\r\n        return this;\r\n    }\r\n  \r\n    protected dispatch(channel: string, data?: any, ...more: any[]) {\r\n      super.publish.call(this, channel, data, ...more);\r\n      return this;\r\n    }\r\n    \r\n    publish(channel: string, data?: any, ...more: any[]) {\r\n        var { publishers } = this;\r\n        if (!channel) console.warn(`Mediator.publish expected a channel-value but got \"${channel}\". Please check the spelling of your channel-key.`);\r\n        if (channel in publishers) publishers[channel].call(publishers, channel, data, ...more);\r\n        else this.dispatch.call(this, channel, data, ...more);\r\n        \r\n        return this;\r\n    }\r\n    \r\n}\r\n\r\nexport { Mediator };\r\n","\r\n// https://stackblitz.com/edit/rxjs-mediator-with-operators?file=index.ts\r\nimport { of, from } from 'rxjs';\r\nimport { Observable, Subject, BehaviorSubject, ReplaySubject } from 'rxjs';\r\nimport { map, filter, last } from 'rxjs/operators';\r\n//\r\nimport { ISubscriber } from '../subscriber.interface';\r\nimport { IEventAggregator } from '../eventaggregator.interface';\r\n\r\nclass EventHub implements IEventAggregator {\r\n  private initializations: object = { errors: 0 };\r\n  private initialized: CustomEvent = new CustomEvent('$initialized', { detail: this.initializations });\r\n  public channels$: ReplaySubject<CustomEvent> = new ReplaySubject(1);\r\n\r\n  in(channel: string): Observable<CustomEvent> {\r\n    var filterChannel = filter( (o: CustomEvent) => channel === o.type )\r\n      , mapData = map( (o: CustomEvent) => o )\r\n      ;\r\n    var subscription = this.channels$.pipe(filterChannel).pipe(mapData);\r\n\r\n    return subscription;\r\n  }\r\n  \r\n  publish(channel: string, data: any = {}, ...more: any[]): IEventAggregator {\r\n    var event = new CustomEvent(channel, { detail: data });\r\n    this.channels$.next(event);\r\n    return this;\r\n  }\r\n\r\n  subscribe(channel: string, handler: any): Observable<CustomEvent> {\r\n    var subscription = this.in(channel);\r\n    if (handler) subscription.subscribe(handler);\r\n    return subscription;\r\n  }\r\n\r\n  unsubscribe(channel: string, handler: Function): IEventAggregator {\r\n    // this.channels$.unsubscribe();\r\n    return this;\r\n  }\r\n\r\n  attach(observer: ISubscriber): Observable<CustomEvent> {\r\n    var subscription = this.channels$;\r\n    if (observer) subscription.subscribe(observer);\r\n    return subscription;\r\n  }\r\n  \r\n  detach(observer: ISubscriber) {\r\n    // this.channels$.unsubscribe();\r\n    return this;\r\n  }\r\n\r\n}\r\n\r\nexport { EventHub };\r\n","\r\nimport { IEventAggregator } from '../eventaggregator.interface';\r\nimport { IDirectorOptions } from './options.interface';\r\nimport { Reactive as Store } from '../store';\r\nimport { Utilities } from '../utilities';\r\n\r\ntype TStoreNamespace = 'root'|'app'|string;\r\ninterface IStoreConfiguration {\r\n    id: TStoreNamespace;\r\n}\r\n\r\nclass Director extends Store implements IEventAggregator {\r\n    private dependencies: IDirectorOptions;\r\n    private actionHandlers: any;\r\n    private stateHandlers: any;\r\n    public utils: Utilities = new Utilities();\r\n    public channels: any;\r\n\r\n    constructor(settings: IStoreConfiguration, options: IDirectorOptions) {\r\n        super(settings);\r\n        var { channels, ActionHandlers, StateHandlers, Dependencies } = options;\r\n        var dependencies = new Dependencies(this);\r\n        var actionHandlers = new ActionHandlers(this, dependencies)\r\n          , stateHandlers = new StateHandlers(this, dependencies)\r\n          ;\r\n        \r\n        this.channels = channels;\r\n        this.dependencies = dependencies;\r\n        this.actionHandlers = actionHandlers;\r\n        this.stateHandlers = stateHandlers;\r\n        this.register('publishers', actionHandlers);\r\n        this.attach({ next: this.handleState });\r\n    }\r\n\r\n    private handleState = (e: CustomEvent) => {\r\n        var { type, detail } = e;\r\n        var { stateHandlers: handlers } = this;\r\n        var action = handlers[type];\r\n\r\n        if (action) action.call(handlers, e);\r\n    };\r\n\r\n    emit(channel: string, data?: any, ...more: any[]) {\r\n        this.dispatch(channel, data, ...more);\r\n        return this;\r\n    }\r\n\r\n}\r\n\r\nexport { Director };\r\n","\r\nimport { ISubscriber } from '../subscriber.interface';\r\nimport { Reactive as Director } from '../director';\r\nimport { ISandbox } from './sandbox.interface';\r\n\r\n\r\nclass Sandbox implements ISandbox {\r\n    get utils() { return this.director.utils; }\r\n    get channels() { return this.director.channels; }\r\n\r\n    constructor(protected director: Director) {\r\n        return this;\r\n    }\r\n    \r\n    protected get(channel: string): string {\r\n        if ( !(channel in this.channels) ) console.warn(`Warning! channel \"${channel}\" does not exist in channels.`);\r\n        var channel: string = this.channels[channel] || channel;\r\n        return channel;\r\n    }\r\n\r\n    in(channel: string) {\r\n        var channel: string = this.get(channel);\r\n        return this.director.in(channel);\r\n    }\r\n    publish(channel: string, data?: any, ...more: any[]) {\r\n        var channel: string = this.get(channel);\r\n        this.director.publish(channel, data, ...more);\r\n        return this;\r\n    }\r\n    subscribe(channel: string, handler: Function) {\r\n        var channel: string = this.get(channel);\r\n        this.director.subscribe(channel, handler);\r\n        return this;\r\n    }\r\n    unsubscribe(channel: string, handler: Function) {\r\n        var channel: string = this.get(channel);\r\n        this.director.unsubscribe(channel, handler);\r\n        return this;\r\n    }\r\n    attach(observer: ISubscriber) {\r\n        this.director.attach(observer);\r\n        return this;\r\n    }\r\n    detach(observer: ISubscriber) {\r\n        this.director.detach(observer);\r\n        return this;\r\n    }\r\n\r\n}\r\n\r\nexport { Sandbox };\r\n","\r\n// INTERFACES\r\nexport { IEventAggregator } from './eventaggregator.interface';\r\nexport { ISandbox } from './sandbox';\r\n// STANDARD/NATIVE\r\nexport { Reactive as EventHub } from './eventhub';  // |----------------------------------------------------------------\r\nexport { Reactive as Mediator } from './mediator';  // |\r\nexport { Reactive as Director } from './director';  // |         <-- TODO: use add normal, non-reactive\r\nexport { Reactive as Sandbox } from './sandbox';    // |\r\nexport { Reactive as Store } from './store';        // |----------------------------------------------------------------\r\n// REACTIVE\r\nimport * as reactive from './reactive';\r\nexport { reactive };\r\n","\r\nimport { ElementNode } from '@motorman/vertices';\r\nimport { NodeSandbox as Sandbox } from '@motorman/vertices/core';\r\n\r\n@ElementNode({ selector: 'v-backdrop' })\r\nexport class BackdropComponent {\r\n    \r\n    constructor(private $: Sandbox) {\r\n        $.in('BACKDROP:REQUESTED').subscribe(this.handleRequest);\r\n        $.in('BACKDROP:DISMISSED').subscribe(this.handleDismiss);\r\n        $.state.set(this);\r\n    }\r\n    \r\n    private handleRequest = (e: CustomEvent) => {\r\n        this.$.node.setAttribute('active', 'true');\r\n    };\r\n    \r\n    private handleDismiss = (e: CustomEvent) => {\r\n        this.$.node.setAttribute('active', 'false');\r\n    };\r\n    \r\n}\r\n","var api = require(\"!../../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../../node_modules/css-loader/dist/cjs.js!../../../../../../node_modules/sass-loader/dist/cjs.js!./backdrop.component.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(module.id, content, options);\n\nvar exported = content.locals ? content.locals : {};\n\n\n\nmodule.exports = exported;","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../../../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \"v-backdrop{position:fixed;top:0;bottom:0;left:0;right:0;opacity:0.8;display:none;z-index:999}v-backdrop::before{content:\\\"\\\";display:block;position:relative;top:0;bottom:0;left:0;right:0;width:100%;height:100%;background-color:#333}v-backdrop[active=\\\"true\\\"]{display:block}\\n\", \"\"]);\n// Exports\nmodule.exports = exports;\n"],"sourceRoot":""}